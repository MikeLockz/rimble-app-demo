{"version":3,"sources":["utilities/RimbleWeb3.js","components/Header.js","utilities/content/TransactionToastMessages.js","utilities/TransactionToastUtil.js","components/ConnectButton.js","components/SmartContractControls.js","components/TransactionsCard.js","components/PrimaryCard.js","components/InstructionsCard.js","components/WrongNetworkBanner.js","components/NetworkOverview.js","components/WrongNetworkModal.js","theme.js","components/ConnectionModal.js","components/TransactionConnectionModal.js","components/ConnectionPendingModal.js","components/UserRejectedValidationModal.js","components/LowFundsModal.js","components/MissingWeb3Provider.js","App.js","serviceWorker.js","index.js"],"names":["RimbleTransactionContext","React","createContext","contract","account","accountBalance","accountBalanceLow","web3","transactions","checkPreflight","initWeb3","initContract","initAccount","userRejectedConnect","accountValidated","accountValidationPending","userRejectedValidation","validateAccount","checkNetwork","requiredNetwork","currentNetwork","isCorrectNetwork","RimbleTransaction","_this","checkModernBrowser","_callee","browser","userAgent","validBrowser","regenerator_default","a","wrap","_context","prev","next","bowser","getParser","window","navigator","parse","parsedResult","satisfies","desktop","chrome","firefox","opera","setState","abrupt","stop","this","_callee2","_context2","Promise","resolve","reject","ethereum","console","log","Web3","currentProvider","error","_callee3","address","abi","_context3","state","eth","Contract","sent","t0","toastProvider","addMessage","variant","_callee4","_context4","enable","then","wallets","pollAccountUpdates","getAccountBalance","_callee5","_context5","getBalance","utils","fromWei","parseFloat","determineAccountLowBalance","props","config","accountBalanceMinimum","_callee6","_context6","personal","sign","fromUtf8","err","signature","getNetworkId","_callee7","_context7","net","getId","networkId","Object","objectSpread","id","getNetworkName","_callee8","_context8","getNetworkType","networkName","name","_callee9","_context9","requiresUpdate","accountInterval","setInterval","clearInterval","contractMethodSendWrapper","contractMethod","transaction","createTransaction","addTransaction","method","type","status","updateTransaction","_this$state","methods","send","from","on","hash","transactionHash","recentEvent","confirmationNumber","receipt","confirmationCount","secondaryMessage","actionHref","actionText","created","Date","now","lastUpdated","concat","updatedTransaction","react_default","createElement","Provider","assign","value","Component","Consumer","Header","index_es","bg","p","justifyContent","flexDirection","href","target","width","mx","h2","color","TransactionToastMessages","started","message","icon","pending","confirmed","success","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","keys","length","getNewObjectFromCollection","objectKey","filter","key","includes","map","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","tx","currentTx","prevTx","processTransactionUpdates","prevProps","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","prevState","ref","node","ConnectButton","alignItems","px","py","h3","textAlign","pb","size","onClick","disabled","contractAbi","constant","inputs","outputs","payable","stateMutability","SmartContractControls","needsUpdate","getNumber","_ref","esm_extends","getCounter","call","Number","toString","catch","resetCounter","incrementCounter","decrementCounter","_this2","borderBottom","borderColor","mb","fontSize","pt","borderTop","mr","TransactionsCard","fontWeight","keyName","keyIndex","txHash","txStart","substr","txEnd","PrimaryCard","RimbleWeb3","components_SmartContractControls","components_ConnectButton","components_TransactionsCard","utilities_TransactionToastUtil","InstructionsCard","mt","WrongNetworkBanner","style","position","bottom","left","right","backgroundColor","NetworkOverview","getNetworkCircleColor","circleColor","network","networkCircle","borderRadius","height","textTransform","WrongNetworkModal","isOpen","maxWidth","icononly","top","closeWrongNetworkModal","my","theme","fontSizes","fontWeights","lineHeights","solid","title","copy","fonts","serif","sansSerif","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","shadows","opacity","colors","primary","blue","navy","copyColor","black","near-black","dark-gray","mid-gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","blacks","whites","ConnectionModal","closeConnectionModal","alignContent","flex","caps","components_NetworkOverview","borderRight","flexShrink","src","alt","TransactionConnectionModal","closeTransactionConnectionModal","span","ConnectionPendingModal","closeConnectionPendingModal","UserRejectedValidationModal","sendMessageAgain","event","closeUserRejectedValidationModal","LowFundsModal","showQR","toggleQRVisible","RightColumn","bold","closeLowFundsModal","MissingWeb3Provider","classCallCheck","possibleConstructorReturn","getPrototypeOf","e","preventDefault","wrongNetworkModalIsOpen","openWrongNetworkModal","connectionModalIsOpen","openConnectionModal","transactionConnectionModalIsOpen","openTransactionConnectionModal","openConnectionPendingModal","openUserRejectedValidationModal","lowFundsModalIsOpen","openLowFundsModal","ml","h4","components_WrongNetworkModal","components_ConnectionModal","components_TransactionConnectionModal","components_ConnectionPendingModal","components_UserRejectedValidationModal","components_LowFundsModal","components_WrongNetworkBanner","GlobalStyle","createGlobalStyle","_templateObject","App","className","components_Header","needsPreflight","components_PrimaryCard","components_MissingWeb3Provider","components_InstructionsCard","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3b20749.chunk.js","sourcesContent":["import React from \"react\";\nimport Web3 from \"web3\"; // uses latest 1.x.x version\nimport bowser from \"bowser\";\n\nconst RimbleTransactionContext = React.createContext({\n  contract: {},\n  account: {},\n  accountBalance: {},\n  accountBalanceLow: {},\n  web3: {},\n  transactions: {},\n  checkPreflight: () => {},\n  initWeb3: () => {},\n  initContract: () => {},\n  initAccount: () => {},\n  userRejectedConnect: {},\n  accountValidated: {},\n  accountValidationPending: {},\n  userRejectedValidation: {},\n  validateAccount: () => {},\n  checkNetwork: () => {},\n  requiredNetwork: {},\n  currentNetwork: {},\n  isCorrectNetwork: {},\n});\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n  \n  // Performs \n  checkPreflight = () => {\n    this.checkModernBrowser();\n    this.initWeb3();\n\n    // Prevent MetaMask from reloading page on network change\n    // TODO: Throwing too many system dialogs, possible to resolve?\n    // window.onbeforeunload = function() {\n    //   console.log(\"Suppresing page reload\");\n    //   return \"Prevent reload\"\n    // }\n    \n  }\n\n  // Validates user's browser is web3 capable\n  checkModernBrowser = async () => {\n    // User Agent\n    const browser = bowser.getParser(window.navigator.userAgent);\n    const userAgent = browser.parse().parsedResult;\n\n    const validBrowser = browser.satisfies({\n      desktop: {\n        chrome: '>49',\n        firefox: '>52',\n        opera: '>36'\n      }\n    }) ? true : false;\n\n    this.setState({ \n      userAgent,\n      validBrowser\n    });\n\n    return validBrowser;\n  }\n\n  // Initialize a web3 provider\n  // TODO: Make async work\n  initWeb3 = async () => {\n    return new Promise ((resolve, reject) => {\n      let web3 = {};\n\n      // Check for modern web3 provider\n      if (window.ethereum) {\n        console.log(\"Using modern web3 provider.\");\n        web3 = new Web3(window.ethereum);\n      }\n      // Legacy dapp browsers, public wallet address always exposed\n      else if (window.web3) {\n        console.log(\"Legacy web3 provider. Try updating.\");\n        web3 = new Web3(window.web3.currentProvider);\n      }\n      // Non-dapp browsers...\n      else {\n        console.log(\n          \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n        );\n\n        web3 = false;\n      }\n\n      this.setState({ web3 }, () => {\n        // After setting the web3 provider, check network\n        this.checkNetwork();\n      });\n    }, error => {\n      console.log(\"Error initializing web3\");\n    });\n  };\n\n  initContract = async (address, abi) => {\n    console.log(\"creating contract\");\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = await new this.state.web3.eth.Contract(abi, address);\n      this.setState({ contract });\n    } catch (error) {\n      console.log(\"Could not create contract.\");\n      window.toastProvider.addMessage(\"Contract creation failed.\", {\n        variant: \"failure\"\n      });\n    }\n  };\n\n  initAccount = async () => {\n    try {\n      // Request account access if needed\n      await window.ethereum.enable().then(wallets => {\n        const account = wallets[0];\n        this.setState({ account });\n        console.log(\"wallet address:\", this.state.account);\n        \n        // Watch for account change\n        this.pollAccountUpdates();\n      });\n    } catch (error) {\n      // User denied account access...\n      console.log(\"User cancelled connect request. Error:\", error);\n      window.toastProvider.addMessage(\"User needs to CONNECT wallet\", {\n        variant: \"failure\"\n      });\n      this.setState({ userRejectedConnect: true })\n    }\n    // After account is complete, get the balance\n    await this.getAccountBalance();\n  };\n\n  getAccountBalance = async () => {\n    try {\n      await this.state.web3.eth.getBalance(this.state.account).then(accountBalance => {\n        accountBalance = this.state.web3.utils.fromWei(accountBalance, \"ether\");\n        accountBalance = parseFloat(accountBalance);\n        this.setState({ accountBalance })\n        console.log(\"account balance: \", accountBalance);\n\n        this.determineAccountLowBalance();\n      });\n    } catch (error) {\n      console.log(\"Failed to get account balance.\");\n    }\n  };\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    console.log(\"this.props.config\", this.props.config);\n    \n    const accountBalanceMinimum = typeof (this.props.config.accountBalanceMinimum) !== \"undefined\"\n      ?\n        this.props.config.accountBalanceMinimum\n      : \n        1000\n\n    console.log(\"accountBalanceMinimum\", accountBalanceMinimum);\n    // Determine if the account balance is low\n    console.log(\"this.state.accountBalance\", this.state.accountBalance);\n    console.log(\"compare\", (this.state.accountBalance < accountBalanceMinimum));\n    const accountBalanceLow = this.state.accountBalance < accountBalanceMinimum\n      ?\n        true\n      :\n        false;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  validateAccount = async () => {\n    // Show blocking modal\n    this.setState({ \n      accountValidationPending: true,\n      userRejectedValidation: false,\n    });\n\n    console.log(\"Account: \", this.state.account)\n    if (!this.state.account) {\n      await this.initAccount();\n    }\n\n    return window.web3.personal.sign(\n      window.web3.fromUtf8(`I am signing my one-time nonce: 012345`),\n      this.state.account,\n      (err, signature) => {\n        if (err) {\n          // User rejected account validation.\n          console.log(\"Wallet account not validated. Error:\", err);\n          window.toastProvider.addMessage(\"Wallet account was not validated\", {\n            variant: \"failure\"\n          });\n          this.setState({ \n            accountValidated: false, \n            accountValidationPending: false,\n            userRejectedValidation: true,\n          });\n        } else {\n          console.log(\"Account validation successful.\", signature);\n          this.setState({ \n            accountValidated: true, \n            accountValidationPending: false \n          });\n        }\n      }\n    )\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let currentNetwork = { ...this.state.currentNetwork };\n        currentNetwork.id = networkId;\n        this.setState({ currentNetwork });\n      });\n    } catch (error) {\n      console.log(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let currentNetwork = { ...this.state.currentNetwork };\n        currentNetwork.name = networkName;\n        this.setState({ currentNetwork });\n      });\n    } catch (error) {\n      console.log(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    let isCorrectNetwork = null;\n    await this.getNetworkId();\n    await this.getNetworkName();\n\n    isCorrectNetwork = this.state.currentNetwork.id === this.state.requiredNetwork.id\n      ? true\n      : false;\n  \n    this.setState({ isCorrectNetwork });\n  }\n\n  pollAccountUpdates = () => {\n    let account = this.state.account;\n    let requiresUpdate = false;\n    let accountInterval = setInterval(() => {\n      window.ethereum.enable().then(wallets => {\n        const updatedAccount = wallets[0];\n        \n        if (updatedAccount !== account) {\n          requiresUpdate = true;\n        }\n\n        if (requiresUpdate) {\n          clearInterval(accountInterval);\n          this.setState({\n            userRejectedConnect: null,\n            account: '',\n            accountValidated: null,\n          }, () => {\n            this.initAccount()\n          });\n        }\n      });\n    }, 1000);\n  }\n\n  contractMethodSendWrapper = contractMethod => {\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction();\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.method = contractMethod;\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { contract, account } = this.state;\n\n    try {\n      contract.methods[contractMethod]()\n        .send({ from: account })\n        .on(\"transactionHash\", hash => {\n          // Submitted to block and received transaction hash\n          // Set properties on the current transaction\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"confirmation\", (confirmationNumber, receipt) => {\n          // Update confirmation count on each subsequent confirmation that's received\n          transaction.confirmationCount += 1;\n\n          // How many confirmations should be received before informing the user\n          const confidenceThreshold = 3;\n\n          if (transaction.confirmationCount === 1) {\n            // Initial confirmation receipt\n            transaction.status = \"confirmed\";\n          } else if (transaction.confirmationCount < confidenceThreshold) {\n            // Not enough confirmations to match threshold\n          } else if (transaction.confirmationCount === confidenceThreshold) {\n            // Confirmations match threshold\n            // Check the status from result since we are confident in the result\n            if (receipt.status) {\n              transaction.status = \"success\";\n            } else if (!receipt.status) {\n              transaction.status = \"error\";\n            }\n          } else if (transaction.confirmationCount > confidenceThreshold) {\n            // Confidence threshold met\n          }\n          // Update transaction with receipt details\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"receipt\", receipt => {\n          // Received receipt, met total number of confirmations\n          transaction.recentEvent = \"receipt\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"error\", error => {\n          // Errored out\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n          // TODO: should this be a custom error? What is the error here?\n          // TODO: determine how to handle error messages globally\n          window.toastProvider.addMessage(\"Value change failed\", {\n            secondaryMessage: \"Could not change value.\",\n            actionHref: \"\",\n            actionText: \"\",\n            variant: \"failure\"\n          });\n        });\n    } catch (error) {\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Value change failed\", {\n        secondaryMessage: \"Could not change value on smart contract\",\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\"\n      });\n    }\n  };\n\n  // Create tx\n  createTransaction = () => {\n    let transaction = {};\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n\n    return transaction;\n  };\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  };\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n  };\n\n  state = {\n    contract: {},\n    account: null,\n    accountBalance: null,\n    accountBalanceLow: null,\n    web3: null,\n    transactions: {},\n    checkPreflight: this.checkPreflight,\n    initWeb3: this.initWeb3,\n    initContract: this.initContract,\n    initAccount: this.initAccount,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    userRejectedConnect: null,\n    accountValidated: null,\n    accountValidationPending: null,\n    userRejectedValidation: null,\n    validateAccount: this.validateAccount,\n    checkNetwork: this.checkNetwork,\n    requiredNetwork: {\n      name: \"Rinkby\",\n      id: 4,\n    },\n    currentNetwork: {},\n    isCorrectNetwork: null,\n  };\n\n  componentDidMount() {\n    this.checkPreflight();\n  }\n\n  render() {\n    return (\n      <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport { Box, Flex, Link, Button, Heading } from \"rimble-ui\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Box bg=\"primary\" p={3} justifyContent=\"center\" flexDirection=\"column\">\n        <Flex justifyContent=\"flex-end\">\n          <Link\n            href=\"https://github.com/ConsenSys/rimble-app-demo\"\n            target=\"_blank\"\n          >\n            <Button>GitHub</Button>\n          </Link>\n        </Flex>\n\n        <Box width=\"400px\" mx=\"auto\">\n          <Heading.h2 color={\"white\"}>Rimble App Demo</Heading.h2>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","const TransactionToastMessages = {\n    started: {\n      message: \"Change submitted\",\n      secondaryMessage: \"Confirm in MetaMask\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing change...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your change is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\"\n    },\n    success: {\n      message: \"Smart contract value changed\",\n      variant: \"success\"\n    },\n    error: {\n      message: \"Value change failed\",\n      secondaryMessage: \"Make sure you have enough Ether (ETH) and try again\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\"\n    }\n  };\n  \n  export default TransactionToastMessages;\n  ","import React from \"react\";\nimport TransactionToastMessages from \"./content/TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      prevTx = this.getTransactionFromCollection(\n        currentTx.created,\n        prevCollection\n      );\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx !== null && typeof tx !== \"undefined\") {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        break;\n    }\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import React from \"react\";\nimport { Flex, Heading, MetaMaskButton } from \"rimble-ui\";\n\nclass ConnectButton extends React.Component {\n  render() {\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"center\" px={3} py={5}>\n        <Heading.h3 textAlign=\"center\" pb={4}>\n          Connect with MetaMask to try out the demo\n        </Heading.h3>\n\n        <MetaMaskButton\n          size={\"medium\"}\n          mx=\"auto\"\n          onClick={this.props.initAccount}\n          disabled={this.props.account}\n        >\n          Connect with MetaMask\n        </MetaMaskButton>\n      </Flex>\n    );\n  }\n}\n\nexport default ConnectButton;\n","import React from \"react\";\nimport { Flex, Box, Text, Button, OutlineButton } from \"rimble-ui\";\n\n// Address of the deployed smart contract (from etherscan)\nconst contractAddress = \"0x0f69f0ac4b92bf0d101b5747eed3fa6b653a36f8\";\n\n// Copied from remix ide\nconst contractAbi = [\n  {\n    constant: false,\n    inputs: [],\n    name: \"decrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"incrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"reset\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getCounter\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"int256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\n\nclass SmartContractControls extends React.Component {\n  state = {\n    value: 0,\n    needsUpdate: false\n  };\n\n  // gets the number stored in smart contract storage\n  getNumber = ({ ...props }) => {\n    const { contract } = this.props;\n    try {\n      contract.methods\n        .getCounter()\n        .call()\n        .then(value => {\n          value = Number(value.toString());\n          this.setState({ value, needsUpdate: false });\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({ error });\n        });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    Object.keys(this.props.transactions).map(key => {\n      let tx = this.props.transactions[key];\n      if (tx.status === \"success\" && this.state.needsUpdate) {\n        console.log(\"Getting updated number.\");\n        this.getNumber();\n        return false;\n      } else {\n        return false;\n      }\n    });\n  };\n\n  resetCounter = () => {\n    this.props.contractMethodSendWrapper(\"reset\");\n  };\n\n  incrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"incrementCounter\");\n    this.setState({\n      needsUpdate: true\n    });\n  };\n\n  decrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"decrementCounter\");\n    this.setState({\n      needsUpdate: true\n    });\n  };\n\n  componentDidMount() {\n    // Init the contract after the web3 provider has been determined\n    this.props.initContract(contractAddress, contractAbi).then(() => {\n      // Can finally interact with contract\n      this.getNumber();\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <Box>\n        <Flex\n          px={0}\n          pb={4}\n          borderBottom={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n          alignItems=\"end\"\n        >\n          <Text mb={2} fontSize={3}>\n            Smart contract value\n          </Text>\n\n          <OutlineButton\n            size={\"small\"}\n            onClick={this.resetCounter}\n            disabled={!this.props.account}\n          >\n            Reset\n          </OutlineButton>\n        </Flex>\n\n        <Box py={4}>\n          <Text fontSize={6} textAlign={\"center\"}>\n            {this.state.value}\n          </Text>\n        </Box>\n\n        <Flex\n          px={0}\n          pt={4}\n          borderTop={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n        >\n          <Button size={\"medium\"} mr={4} onClick={this.incrementCounter}>\n            Increase value\n          </Button>\n\n          <Button size={\"medium\"} onClick={this.decrementCounter}>\n            Decrease value\n          </Button>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default SmartContractControls;\n","import React from \"react\";\nimport { Card, Heading, Box, Flex, Text } from \"rimble-ui\";\n\nclass TransactionsCard extends React.Component {\n  render() {\n    return (\n      <Card width={\"400px\"} mx={\"auto\"} px={4}>\n        <Heading.h2 fontSize={3} textAlign={\"center\"} px={4} mb={5}>\n          Transactions\n        </Heading.h2>\n        <Box>\n          {Object.keys(this.props.transactions).length > 0 ? (\n            <Flex>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                txHash\n              </Text>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                Status\n              </Text>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                Confirmations\n              </Text>\n            </Flex>\n          ) : null}\n\n          {Object.keys(this.props.transactions).length < 1 ? (\n            <Text textAlign={\"center\"}>No recent transactions</Text>\n          ) : (\n            Object.keys(this.props.transactions).map((keyName, keyIndex) => {\n              let txHash = \"\";\n              if (this.props.transactions[keyName].transactionHash) {\n                txHash = this.props.transactions[\n                  keyName\n                ].transactionHash.toString();\n                const txStart = txHash.substr(0, 7);\n                const txEnd = txHash.substr(txHash.length - 4);\n                txHash = txStart + \"...\" + txEnd;\n              }\n\n              return (\n                <Flex key={keyIndex}>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {txHash}\n                  </Text>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {this.props.transactions[keyName].status}\n                  </Text>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {this.props.transactions[keyName].confirmationCount}\n                  </Text>\n                </Flex>\n              );\n            })\n          )}\n        </Box>\n      </Card>\n    );\n  }\n}\n\nexport default TransactionsCard;\n","import React from \"react\";\nimport { Card } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\n\nimport ConnectButton from \"./ConnectButton\";\nimport SmartContractControls from \"./SmartContractControls\";\nimport TransactionsCard from \"./TransactionsCard\";\n\nclass PrimaryCard extends React.Component {\n  render() {\n    return (\n      <RimbleWeb3.Consumer>\n        {({\n          contract,\n          account,\n          transactions,\n          initContract,\n          initAccount,\n          contractMethodSendWrapper\n        }) => (\n          <div>\n            <Card width={\"400px\"} mx={\"auto\"} px={4}>\n              {!account ? (\n                <ConnectButton \n                  initAccount={initAccount} \n                  account={account} \n                />\n              ) : (\n                <SmartContractControls\n                  contract={contract}\n                  account={account}\n                  transactions={transactions}\n                  initContract={initContract}\n                  contractMethodSendWrapper={contractMethodSendWrapper}\n                />\n              )}\n            </Card>\n\n            <TransactionsCard transactions={transactions} />\n            <TransactionToastUtil transactions={transactions} />\n          </div>\n        )}\n      </RimbleWeb3.Consumer>\n    );\n  }\n}\n\nexport default PrimaryCard;\n","import React from \"react\";\nimport { Box, Heading, Text } from \"rimble-ui\";\n\nclass InstructionsCard extends React.Component {\n  render() {\n    return (\n      <Box width={\"400px\"} mx=\"auto\" mt={4}>\n        <Heading.h3>Instructions:</Heading.h3>\n        <ol>\n          <li>\n            <Text p={1}>Make sure MetaMask is working in your browser</Text>\n          </li>\n          <li>\n            <Text p={1}>Set the network to Rinkeby Test Network</Text>\n          </li>\n          <li>\n            <Text p={1}>You'll need a little bit of ETH for gas fees</Text>\n          </li>\n        </ol>\n      </Box>\n    );\n  }\n}\n\nexport default InstructionsCard;\n","import React from 'react';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: 'fixed',\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: '100%',\n      backgroundColor: 'white'\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>Looks like you're on the wrong network</Text>\n            <Text>You should be on the {this.props.requiredNetwork.name} Ethereum network. You are currently connected to {this.props.currentNetwork.name} - switch in your MetaMask extension.</Text>\n          </Flex>\n        </Flex>\n      </Box>\n    )\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  \n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3: \n          circleColor = \"#ed5a8d\";\n          break;\n        case 4: \n          circleColor = \"#efc35c\";\n          break;\n        case 42: \n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n    \n    return circleColor;\n  }\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\",\n    }    \n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2}></Box>\n        <Text style={{textTransform: \"capitalize\"}}>{this.props.network.name}</Text>\n      </Flex>\n    )\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport { Card, Heading, Text, Flex, ToastMessage, Icon, Modal, TextButton } from \"rimble-ui\";\n\nclass WrongNetworkModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'600px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeWrongNetworkModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\"/>\n            </Flex>\n            \n            <Heading.h2 my={3}>Wrong Network</Heading.h2>\n\n            <Text my={4}>Looks like your account is connected to {this.props.currentNetwork.name} network. Head to MetaMask and switch to the {this.props.requiredNetwork.name} network.</Text>\n            \n            <ToastMessage\n              message={'Waiting for the right network...'}\n              icon={'InfoOutline'}\n            />\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default WrongNetworkModal;\n","// theme.js\nexport default {\n  fontSizes: [\n    12, 14, 16, 20, 24, 32, 48, 64\n  ],\n  fontWeights: [\n    0, 300, 400, 600, 700\n  ],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: 'athelas, georgia, times, serif',\n    sansSerif: '\"Source Sans Pro\", -apple-system, sans-serif',\n  },\n  space: [\n    0, 4, 8, 16, 32, 64, 128, 256\n  ],\n  radii: [\n    '0', '4px', '8px', '16px'\n  ],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [\n    0,\n    '1px solid'\n  ],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)'\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: '#4E3FCE',\n    blue: '#007ce0',\n    navy: '#004175',\n    copyColor: '#3F3D4B',\n    // black: '#000',\n    black: '#000e1a',\n      'near-black': '#111',\n      'dark-gray': '#333',\n      'mid-gray': '#555',\n    // gray: ' #777',\n    grey: '#CCC',\n    silver: '#999',\n      'light-silver': '#aaa',\n      'moon-gray': '#ccc',\n      'light-gray': '#eee',\n      'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ]\n  }\n}\n","import React from \"react\";\nimport { Card, Heading, Text, ToastMessage, Icon, TextButton, Modal, Flex, Image, Box, MetaMaskButton } from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\"\nimport theme from \"./../theme\";\n\nclass ConnectionModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'960px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeConnectionModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>Current Network</Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n                \n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>New to Bounties Explorer?</Text>\n                  <Text fontWeight={3} mt={3} mb={2}>What is connecting?</Text>\n                  <Text>Connecting lets you use Bounties</Text>\n                  <Text>Explore through your Ethereum account (the long cod that starts with 0x).</Text>\n                </Box>\n\n                <Text fontWeight={3}>You need to be connected to:</Text>\n                <ul>\n                  <li>Post bounties</li>\n                  <li>Discuss bounties</li>\n                  <li>Fulfill bounties</li>\n                </ul>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text></Text>\n            </Flex>\n\n            <Flex flexDirection={\"column\"} justifyContent={\"space-between\"} p={3} flexShrink={\"1\"}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\"/>\n              </Flex>\n              \n              <Heading.h2>How would you like to connect?</Heading.h2>\n\n              <Text my={3}>Make sure you've set up MetaMask or your mobile wallet before you continue.</Text>\n              \n              <MetaMaskButton onClick={this.props.validateAccount}>Connect with MetaMask</MetaMaskButton>\n\n              <Flex mt={3} mx={4} alignItems=\"center\">\n                <Image src=\"/images/phone.png\" alt=\"mobile phone\" width={\"60\"} height={\"92\"} mr={3} />\n                <Flex flexDirection={\"column\"}>\n                  <Text fontWeight={3} mb={2}>Connect with a mobile app</Text>\n                  <Text>You can connect from mobile browser wallets like Cipher, Status or Coinbase wallet.</Text>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Icon, TextButton, Modal, Flex, Box, MetaMaskButton } from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\"\nimport theme from \"./../theme\";\n\nclass TransactionConnectionModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'960px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeTransactionConnectionModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>Current Network</Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n                \n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>New to Bounties Explorer?</Text>\n                  <Text>You need to be connected so you can use the funds stored in your Etherum account.</Text>\n                  <Text>Every blockchain action requires a small network fee.</Text>\n                </Box>\n\n                <Text fontWeight={3}>What's a network fee?</Text>\n                <Text>This fee pays for a person or group to add a record of your action to the blockchain and let the network know. It doesn't go to us.</Text>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text></Text>\n            </Flex>\n\n            <Flex flexDirection={\"column\"} p={3}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\"/>\n              </Flex>\n              \n              <Heading.h2>Connect to continue</Heading.h2>\n\n              <Text mb={4}>This action uses the blockchain, so you'll need to connect your Ethereum account to continue. That's the long code starting with <Text.span fontWeight={3}>0x</Text.span>.</Text>\n              \n              <MetaMaskButton onClick={this.props.validateAccount}>Connect with MetaMask</MetaMaskButton>\n\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default TransactionConnectionModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Icon, TextButton, Modal, Flex, Box, ToastMessage } from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\"\nimport theme from \"./../theme\";\n\nclass ConnectionPendingModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'960px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeConnectionPendingModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>Current Network</Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n                \n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>New to Bounties Explorer?</Text>\n                  <Text>It's possible to use your account's address to see all your blockchain activity. Only connect accounts you don't mind being linked to your Bounties Explorer profile.</Text>\n                </Box>\n\n                <Text fontWeight={3}>What does connection mean?</Text>\n                <ul>\n                  <li>Shares your Ethereum account address with us</li>\n                  <li>Allows us to start transactions on the blockchain (at your request)</li>\n                </ul>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text></Text>\n            </Flex>\n\n            <Flex flexDirection={\"column\"} p={3}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\"/>\n              </Flex>\n              \n              <Heading.h2>Connect your account</Heading.h2>\n\n              <Text mb={4}>A connection request should automatically appear. If not, open it using the MetaMask extension icon in your browser.</Text>\n              \n              <ToastMessage\n                message={'Waiting for connection confirmation...'}\n                secondaryMessage={'This won\\'t cost your any Ether'}\n                icon={'InfoOutline'}\n              />\n\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Flex, OutlineButton, Button, Icon, Modal, TextButton } from \"rimble-ui\";\n\nclass UserRejectedValidationModal extends React.Component {\n  sendMessageAgain = (event) => {\n    this.props.closeUserRejectedValidationModal(event);\n    this.props.validateAccount();\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'600px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeUserRejectedValidationModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\"/>\n            </Flex>\n            \n            <Heading.h2 my={3}>You can't continue without signing the message</Heading.h2>\n\n            <Text my={4}>To use Bounties Explorer, you need to sign the message to finish conne ting securely. You can still browse as a guest.</Text>\n            \n            <Flex justifyContent={\"flex-end\"} mt={4}>\n              <OutlineButton onClick={this.props.closeUserRejectedValidationModal} mr={4}>Browse as guest</OutlineButton>\n              <Button onClick={this.sendMessageAgain}>Send message again</Button>\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default UserRejectedValidationModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Icon, TextButton, Modal, Flex, Box, OutlineButton, Button, PublicAddress, QR } from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\"\nimport theme from \"./../theme\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showQR: false,\n  }\n\n  toggleQRVisible = () => {\n    this.setState({\n      showQR: !this.showQR\n    });\n  };\n\n  RightColumn = () => {\n    return (\n      <Flex flexDirection={\"column\"} p={3}>\n        <Flex justifyContent={\"center\"} my={4}>\n          <Icon name=\"Warning\" color=\"gold\" size=\"40\"/>\n        </Flex>\n        \n        <Heading.h2>Low Funds</Heading.h2>\n  \n        <Text mb={4}>To use Bounties Explorer's block chain features, you'll need to own Ether. Deposit Ether into your account via your MetaMask extension or send Funds from another account.</Text>\n  \n        <PublicAddress address={this.props.account} />\n  \n        <Box my={3}>\n          <Text.span bold fontWeight={3} mr={3}>Got another account on a mobile wallet?</Text.span> \n          <Text.span>Send funds by scanning your QR code with your wallet app.</Text.span>\n        </Box>\n  \n        <Box mb={4}>\n          <OutlineButton onClick={this.toggleQRVisible}>\n            <Flex alignItems={\"center\"}>\n              <Icon name=\"FilterCenterFocus\" mr={2} />\n              Show account QR code\n            </Flex>\n          </OutlineButton>\n        </Box>\n        <Flex justifyContent={\"flex-end\"}>\n          <Box>\n            <Button onClick={this.props.closeLowFundsModal}>Continue to Bounties Explorer</Button>\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'960px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeLowFundsModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>Current Network</Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n                \n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>New to Ether?</Text>\n                </Box>\n\n                <Text fontWeight={3}>What you'll need Ether for:</Text>\n                <ul>\n                  <li>Submitting a bounty</li>\n                  <li>Paying for a completed bounty</li>\n                  <li>Network fees</li>\n                </ul>\n\n                <Text fontWeight={3}>What are network fees?</Text>\n                <Text>Network fees pay for a person or group to add a record of your action to the blockchain and let the network know. It doesn't go to us.</Text>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text></Text>\n            </Flex>\n            { !this.state.showQR \n              ?\n                this.RightColumn()\n              :\n                <Box>\n                  <QR value={this.props.account} />\n                  <Text>{this.props.account}</Text>\n\n                </Box>\n            }\n            \n            \n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Icon, Flex, ToastMessage, OutlineButton, Box, Button, Link } from \"rimble-ui\";\nimport WrongNetworkBanner from \"./WrongNetworkBanner\";\nimport NetworkOverview from \"./NetworkOverview\";\nimport WrongNetworkModal from \"./WrongNetworkModal\";\nimport ConnectionModal from \"./ConnectionModal\";\nimport TransactionConnectionModal from \"./TransactionConnectionModal\";\nimport ConnectionPendingModal from \"./ConnectionPendingModal\";\nimport UserRejectedValidationModal from \"./UserRejectedValidationModal\";\nimport LowFundsModal from \"./LowFundsModal\";\n\nclass MissingWeb3Provider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wrongNetworkModalIsOpen: false,\n      connectionModalIsOpen: false,\n      transactionConnectionModalIsOpen: false,\n      accountValidationPending: this.props.accountValidationPending,\n      userRejectedValidation: this.props.userRejectedValidation,\n      lowFundsModalIsOpen: false,\n    }\n  }\n\n  closeWrongNetworkModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      wrongNetworkModalIsOpen: false\n    }))\n  }\n\n  openWrongNetworkModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      wrongNetworkModalIsOpen: true\n    }))\n  }\n\n  closeConnectionModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      connectionModalIsOpen: false\n    }))\n  }\n\n  openConnectionModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      connectionModalIsOpen: true\n    }))\n  }\n\n  closeTransactionConnectionModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      transactionConnectionModalIsOpen: false\n    }))\n  }\n\n  openTransactionConnectionModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      transactionConnectionModalIsOpen: true\n    }))\n  }\n\n  closeConnectionPendingModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      accountValidationPending: false\n    }))\n  }\n\n  openConnectionPendingModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      accountValidationPending: true\n    }))\n  }\n\n  closeUserRejectedValidationModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      userRejectedValidation: false\n    }))\n  }\n\n  openUserRejectedValidationModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      userRejectedValidation: true\n    }))\n  }\n\n  closeLowFundsModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      lowFundsModalIsOpen: false\n    }))\n  }\n\n  openLowFundsModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      lowFundsModalIsOpen: true\n    }))\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({ accountValidationPending: props.accountValidationPending });\n  }\n\n\n  render() {\n    return(\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n        \n        <Box>\n          <Flex alignItems={\"center\"}>\n            { this.props.validBrowser \n              ? \n                <Icon name='Check' color={\"green\"} mr={2} /> \n              :\n                <Icon name='Close' color={\"red\"} mr={2} />\n            }\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n\n          { !this.props.validBrowser \n            ? \n              <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name='Info' mr={2} color=\"#999\" />\n                  <Text color=\"#999\">You current browser is not web3 capable.</Text>\n                </Flex>\n                \n                <Link href=\"https://www.google.com/chrome/browser/\" target=\"_blank\">\n                  <OutlineButton size=\"small\">Download Chrome</OutlineButton>\n                </Link>\n              </Flex>\n            : null \n          }\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            { this.props.web3 \n              ? \n                <Icon name='Check' color={\"green\"} mr={2} /> \n              :\n                <Icon name='Close' color={\"red\"} mr={2} />\n            }\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          { !this.props.web3 && this.props.validBrowser\n            ? \n              <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name='Info' mr={2} color=\"#999\" />\n                  <Text color=\"#999\">You do not have a wallet.</Text>\n                </Flex>\n                \n                <Link href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\" target=\"_blank\">\n                  <OutlineButton size=\"small\">Get MetaMask Extension</OutlineButton>\n                </Link>\n              </Flex>\n            : null \n          }\n        </Box>\n\n        { this.props.web3\n          ? \n            <Flex \n              py={3}\n              my={3}\n              borderTop={1}\n              borderBottom={1}\n              borderColor={\"#E8E8E8\"}\n              textAlign={\"center\"}\n              justifyContent={\"space-around\"}\n              alignItems={\"center\"}\n            >\n              <Button \n                size=\"small\" \n                onClick={this.props.validateAccount}\n                disabled={!this.props.web3}\n              >Connect & Validate</Button>\n              <Text>- or -</Text>\n              <Button size=\"small\" disabled>Initiate On-Chain Action</Button>\n            </Flex>\n          :\n            null\n        }\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            { this.props.isCorrectNetwork ? \n              <Icon name='Check' color={\"green\"} mr={2} /> \n            :\n              <Icon name='Close' color={\"red\"} mr={2} />\n            }\n            <Text>Correct Network</Text>\n          </Flex>\n\n          { this.props.web3 && !this.props.isCorrectNetwork\n            ? \n              <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name='Info' mr={2} color=\"#999\" />\n                  <Box>\n                    <Flex alignItems={\"center\"}>\n                      <Text mr={2} color=\"#999\" style={{ textTransform: \"capitalize\" }}>Current network:</Text>\n                      <NetworkOverview network={this.props.currentNetwork}/>\n                    </Flex>\n                    <Flex alignItems={\"center\"}>\n                      <Text mr={2} color=\"#999\" style={{ textTransform: \"capitalize\" }}>Required network:</Text>\n                      <NetworkOverview network={this.props.requiredNetwork}/>\n                    </Flex>\n                  </Box>\n                </Flex>\n                \n                <OutlineButton size=\"small\" onClick={this.props.checkNetwork}>Check Network</OutlineButton>\n              </Flex>\n            : \n              null\n          }\n          { \n            this.props.web3 && this.props.isCorrectNetwork\n            ?\n              <Flex ml={4} alignItems={\"center\"} >\n                <NetworkOverview network={this.props.currentNetwork}/>\n              </Flex>\n            :\n              null\n          }\n        </Box>\n        \n        <Box>\n          <Flex alignItems={\"center\"}>\n            { this.props.account && this.props.accountValidated\n              ? \n                <Icon name='Check' color={\"green\"} mr={2} /> \n              :\n                <Icon name='Close' color={\"red\"} mr={2} />\n            }\n            <Text>Wallet Connected and Validated</Text>\n          </Flex>\n\n          { !this.props.account && this.props.web3 \n            ? \n              <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name='Info' mr={2} color=\"#999\" />\n                  <Text color=\"#999\">Not connected to this dApp.</Text>\n                </Flex>\n                \n                <OutlineButton size=\"small\" onClick={this.props.initAccount}>Connect</OutlineButton>\n              </Flex>\n            : \n              null\n          }\n          {\n            this.props.account && this.props.web3\n            ?\n              <Flex ml={4} alignItems={\"center\"}>\n                <Icon name='Check' color={\"green\"} mr={2} /> \n                <Box>\n                  <Text color=\"#999\">Connected wallet {this.props.account}</Text>                \n                  <Text color=\"#999\">Account balance {this.props.accountBalance}</Text>\n                  {this.props.accountBalanceLow\n                    ?\n                      <Text color=\"red\">Low balance!</Text>\n                    :\n                      null\n                  }\n                  \n                </Box>\n              </Flex>\n            :\n              null\n          }\n\n          { this.props.userRejectedConnect \n            ? \n              <Flex ml={4}>\n                <Icon name='Error' mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n            : \n              null\n          }\n\n          { (this.props.accountValidated === null || this.props.accountValidated === false) && this.props.web3 \n            ? \n              <Flex ml={4} my={1} alignItems={\"center\"} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name='Info' mr={2} color=\"#999\" />\n                  <Text color=\"#999\">Account not validated</Text>\n                </Flex>\n                \n                <OutlineButton size=\"small\" onClick={this.props.validateAccount}>Validate</OutlineButton>\n              </Flex>\n            : \n              null\n          }\n\n          { this.props.accountValidated === false\n            ? \n              <Flex ml={4}>\n              <Icon name='Error' mr={2} color=\"red\" />\n                <Text color=\"red\">Account not validated</Text>\n              </Flex>\n            : \n              null\n          }\n        </Box>\n\n        <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n          <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n          <Button size=\"small\" onClick={this.openWrongNetworkModal} mr={2} mb={2}>Blocking Wrong Network</Button>\n          <Button size=\"small\" onClick={this.openConnectionModal} mr={2} mb={2}>Connection</Button>\n          <Button size=\"small\" onClick={this.openTransactionConnectionModal} mr={2} mb={2}>Transaction Connection</Button>\n          <Button size=\"small\" onClick={this.openConnectionPendingModal} mr={2} mb={2}>Connection Pending</Button>\n          <Button size=\"small\" onClick={this.openUserRejectedValidationModal} mr={2} mb={2}>User Rejected Validation</Button>\n          <Button size=\"small\" onClick={(event) => { this.props.validateAccount(event); this.openLowFundsModal(event); }} mr={2} mb={2}>Low Funds</Button>\n        </Box>\n\n        {/* Modals */}\n        <WrongNetworkModal closeWrongNetworkModal={this.closeWrongNetworkModal} isOpen={this.state.wrongNetworkModalIsOpen} requiredNetwork={this.props.requiredNetwork} currentNetwork={this.props.currentNetwork} />\n        <ConnectionModal closeConnectionModal={this.closeConnectionModal} validateAccount={this.props.validateAccount} isOpen={this.state.connectionModalIsOpen && !this.props.accountValidated} currentNetwork={this.props.currentNetwork} />\n        <TransactionConnectionModal closeTransactionConnectionModal={this.closeTransactionConnectionModal} validateAccount={this.props.validateAccount} isOpen={this.state.transactionConnectionModalIsOpen && !this.props.accountValidated} currentNetwork={this.props.currentNetwork} />\n        <ConnectionPendingModal closeConnectionPendingModal={this.closeConnectionPendingModal} isOpen={ this.state.accountValidationPending } currentNetwork={this.props.currentNetwork} />\n        <UserRejectedValidationModal closeUserRejectedValidationModal={this.closeUserRejectedValidationModal} isOpen={ this.state.userRejectedValidation } validateAccount={this.props.validateAccount} />\n        <LowFundsModal closeLowFundsModal={this.closeLowFundsModal} isOpen={ this.state.lowFundsModalIsOpen} currentNetwork={this.props.currentNetwork} account={ this.props.account } />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n        { !this.props.isCorrectNetwork && this.props.web3\n          ?\n            <WrongNetworkBanner requiredNetwork={this.props.requiredNetwork} currentNetwork={this.props.currentNetwork}></WrongNetworkBanner>\n          :\n            null\n        }\n      </Card>\n    )\n  }\n}\n\nexport default MissingWeb3Provider\n","import React, { Component } from \"react\";\nimport { ThemeProvider, Box, Text, Flex } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"./utilities/RimbleWeb3\";\n\nimport Header from \"./components/Header\";\nimport PrimaryCard from \"./components/PrimaryCard\";\nimport InstructionsCard from \"./components/InstructionsCard\";\nimport MissingWeb3Provider from \"./components/MissingWeb3Provider\";\n\nimport theme from \"./theme\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body, html {\n    margin: 0;\n    padding: 0;\n    background-color: #efefef;\n  }\n`;\n\nclass App extends Component {\n  // Optional parameters to pass into RimbleWeb3\n  config = {\n    accountBalanceMinimum: 1000\n  }\n  render() {\n    return (\n      <ThemeProvider theme={theme} className=\"App\">\n        <Header />\n        <Flex justifyContent=\"center\" p={4}>\n          <Text width=\"400px\">\n            This is a starter React dApp that uses the Rimble UI component\n            library to call methods on a smart contract deployed to the Ethereum\n            Rinkeby testnet.\n          </Text>\n        </Flex>\n\n        <RimbleWeb3 config={this.config}>\n          <RimbleWeb3.Consumer>\n            {({ \n              needsPreflight, \n              validBrowser, \n              userAgent, \n              web3, \n              account, \n              accountBalance,\n              accountBalanceLow,\n              initAccount, \n              userRejectedConnect,\n              accountValidated,\n              accountValidationPending,\n              userRejectedValidation,\n              validateAccount,\n              checkNetwork,\n              requiredNetwork,\n              currentNetwork,\n              isCorrectNetwork,\n            }) => (\n              <Box>\n                {/* Conditionally render child comonents dependent on web3 being loaded */}\n                {/* TODO: How can we combine these together to use a single prop? */}\n                { validBrowser && web3 && account && accountValidated && isCorrectNetwork ?  \n                  <PrimaryCard /> \n                : <MissingWeb3Provider \n                    validBrowser={validBrowser} \n                    userAgent={userAgent} \n                    web3={web3} \n                    account={account} \n                    accountBalance={accountBalance}\n                    accountBalanceLow={accountBalanceLow}\n                    initAccount={initAccount} \n                    userRejectedConnect={userRejectedConnect}\n                    accountValidated={accountValidated} \n                    accountValidationPending={accountValidationPending} \n                    userRejectedValidation={userRejectedValidation} \n                    validateAccount={validateAccount} \n                    checkNetwork={checkNetwork}\n                    requiredNetwork={requiredNetwork}\n                    currentNetwork={currentNetwork}\n                    isCorrectNetwork={isCorrectNetwork}\n                  /> \n                }\n              </Box>\n            )}\n          </RimbleWeb3.Consumer>\n        </RimbleWeb3>\n        <InstructionsCard />\n        <GlobalStyle />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}