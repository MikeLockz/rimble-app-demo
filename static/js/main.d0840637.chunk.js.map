{"version":3,"sources":["utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/components/WrongNetworkModal.js","utilities/components/NetworkOverview.js","theme.js","utilities/components/ConnectionModal.js","utilities/components/TransactionConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/ValidationPendingModal.js","utilities/components/UserRejectedValidationModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/TransactionUtil.js","utilities/RimbleWeb3.js","utilities/components/ShortHash.js","utilities/components/AccountOverview.js","components/Header.js","utilities/content/TransactionToastMessages.js","utilities/TransactionToastUtil.js","components/SmartContractControls.js","components/TransactionsCard.js","components/PrimaryCard.js","components/InstructionsCard.js","components/Web3Debugger.js","App.js","serviceWorker.js","index.js"],"names":["NoWeb3BrowserModal","react_default","a","createElement","index_es","isOpen","this","props","p","maxWidth","icononly","icon","color","position","top","right","mt","mr","onClick","closeModal","flexDirection","justifyContent","my","name","size","h2","href","target","React","Component","NoWalletModal","WrongNetworkModal","span","style","textTransform","network","current","required","message","NetworkOverview","getNetworkCircleColor","circleColor","_this","id","networkCircle","borderRadius","backgroundColor","height","width","alignItems","baseColors","colors","blurple","base","text","readableColor","light","tint","dark","shade","blue","green","yellow","red","theme","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","fonts","serif","sansSerif","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","primary-light","primary-dark","copyColor","black","near-black","dark-gray","mid-gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","blacks","whites","zIndices","messageStyle","borderColor","success","warning","danger","info","buttons","--main-color","--contrast-color","buttonSizes","small","fontSize","minWidth","padding","medium","large","ConnectionModal","alignContent","flex","caps","components_NetworkOverview","currentNetwork","fontWeight","mb","borderRight","mx","flexShrink","validateAccount","src","alt","TransactionConnectionModal","ConnectionPendingModal","secondaryMessage","UserRejectedConnectionModal","sendMessageAgain","event","initAccount","ValidationPendingModal","bg","account","UserRejectedValidationModal","LowFundsModal","state","showQR","toggleQRVisible","setState","RightColumn","address","bold","value","ConnectionModalUtil","components_NoWeb3BrowserModal","modals","methods","closeNoWeb3BrowserModal","data","noWeb3BrowserModalIsOpen","transaction","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","closeConnectionModal","connectionModalIsOpen","accountValidated","components_TransactionConnectionModal","closeTransactionConnectionModal","transactionConnectionModalIsOpen","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_ValidationPendingModal","closeValidationPendingModal","accountValidationPending","components_UserRejectedValidationModal","closeUserRejectedValidationModal","userRejectedValidation","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","TransactionUtil","RimbleTransactionContext","createContext","contract","accountBalance","accountBalanceLow","web3","web3Fallback","transactions","checkPreflight","initWeb3","initContract","rejectAccountConnect","rejectValidation","connectAndValidateAccount","isCorrectNetwork","checkNetwork","openNoWeb3BrowserModal","openConnectionPendingModal","openUserRejectedConnectionModal","openValidationPendingModal","openUserRejectedValidationModal","openWrongNetworkModal","openTransactionConnectionModal","openLowFundsModal","meta","RimbleTransaction","web3Preflight","validBrowser","console","log","Object","objectSpread","web3ActionPreflight","checkModernBrowser","_callee","browser","userAgent","regenerator_default","wrap","_context","prev","next","bowser","getParser","window","navigator","parse","parsedResult","satisfies","desktop","chrome","firefox","opera","abrupt","stop","_callee2","web3Provider","_context2","ethereum","Web3","currentProvider","providers","HttpProvider","_callee3","abi","_context3","createContract","_callee4","_context4","eth","Contract","error","toastProvider","addMessage","variant","_callee5","_context5","enable","then","wallets","getAccountBalance","pollAccountUpdates","t0","_callee6","_context6","getBalance","utils","fromWei","parseFloat","determineAccountLowBalance","accountBalanceMinimum","config","_callee7","_context7","personal","sign","fromUtf8","signature","callback","successMessage","shortenHash","_callee8","_context8","openConnectionModal","getRequiredNetwork","networkId","requiredNetwork","networkName","getNetworkId","_callee9","_context9","net","getId","getNetworkName","_callee10","_context10","getNetworkType","_callee11","_context11","requiresUpdate","accountInterval","setInterval","isConnected","accounts","clearInterval","contractMethodSendWrapper","contractMethod","alert","createTransaction","addTransaction","method","type","status","updateTransaction","_this$state","send","from","on","hash","transactionHash","recentEvent","confirmationNumber","receipt","confirmationCount","actionHref","actionText","created","Date","now","lastUpdated","concat","updatedTransaction","shortHash","txStart","substr","txEnd","length","e","preventDefault","openNoWalletModal","Provider","assign","ConnectionModalsUtil","utilities_TransactionUtil","Consumer","ShortHash","AccountOverview","trimEth","Math","round","toFixed","roundedBalance","components_ShortHash","Header","dist_index_umd_default","components_AccountOverview","m","result","TransactionToastMessages","initialized","started","pending","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","keys","getNewObjectFromCollection","objectKey","filter","key","includes","map","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","tx","currentTx","prevTx","processTransactionUpdates","prevProps","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","prevState","ref","node","contractAbi","constant","inputs","outputs","payable","stateMutability","SmartContractControls","needsUpdate","getNumber","_ref","esm_extends","getCounter","call","Number","toString","catch","resetCounter","incrementCounter","decrementCounter","_this2","px","pb","borderBottom","py","textAlign","pt","borderTop","TransactionsCard","keyName","keyIndex","txHash","PrimaryCard","RimbleWeb3","components_SmartContractControls","components_TransactionsCard","utilities_TransactionToastUtil","InstructionsCard","h3","route","showRoute","DebuggerButtons","h4","Web3Debugger","ml","Web3Debugger_DebuggerButtons","GlobalStyle","createGlobalStyle","_templateObject","App","className","needsPreflight","paddingBottom","components_Header","index_umd_default","onWeb3Fallback","components_PrimaryCard","components_Web3Debugger","components_InstructionsCard","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0840637.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  TextButton,\n  Link,\n  OutlineButton\n} from \"rimble-ui\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>Not a Web3 Browser</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not support interacting with blockchain.\n              Try using Chrome.\n            </Text>\n\n            <Link href=\"https://www.google.com/chrome/browser/\" target=\"_blank\">\n              <OutlineButton size=\"small\">Download Chrome</OutlineButton>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  TextButton,\n  Link,\n  OutlineButton\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\"\n            >\n              <OutlineButton size=\"small\">Get MetaMask Extension</OutlineButton>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  ToastMessage,\n  Icon,\n  Modal,\n  TextButton\n} from \"rimble-ui\";\n\nclass WrongNetworkModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>Wrong Network</Heading.h2>\n\n            <Text my={4}>\n              Looks like your account is connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              network. Head to MetaMask and switch to the{\" \"}\n              {this.props.network.required.name} network.\n            </Text>\n\n            <ToastMessage\n              message={\"Waiting for the right network...\"}\n              icon={\"InfoOutline\"}\n            />\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000',\n  white: '#FFF',\n  blue: '#36ADF1',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\n// theme.js\nexport default {\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64],\n  fontWeights: [0, 300, 400, 600, 700],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: 'athelas, georgia, times, serif',\n    sansSerif: '\"Source Sans Pro\", -apple-system, sans-serif',\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid transparent'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blurple.base,\n    'primary-light': blurple.light[1],\n    'primary-dark': blurple.dark[1],\n    blue: baseColors.consensysblue,\n    copyColor: '#3F3D4B',\n    // black: '#000',\n    black: '#000e1a',\n    'near-black': '#111',\n    'dark-gray': '#333',\n    'mid-gray': '#555',\n    // gray: ' #777',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: tint(0.9, blue.base),\n      borderColor: blue.base,\n    },\n  },\n  buttons: {\n    primary: {\n      color: blurple.text,\n      backgroundColor: blurple.base,\n      // use css custom props\n      '--main-color': blurple.base,\n      '--contrast-color': blurple.text,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n    },\n  },\n};\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  TextButton,\n  Modal,\n  Flex,\n  Image,\n  Box,\n  MetaMaskButton\n} from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\";\nimport theme from \"../../theme\";\n\nclass ConnectionModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"960px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>\n                    Current Network\n                  </Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n\n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>\n                    New to Bounties Explorer?\n                  </Text>\n                  <Text fontWeight={3} mt={3} mb={2}>\n                    What is connecting?\n                  </Text>\n                  <Text>Connecting lets you use Bounties</Text>\n                  <Text>\n                    Explore through your Ethereum account (the long cod that\n                    starts with 0x).\n                  </Text>\n                </Box>\n\n                <Text fontWeight={3}>You need to be connected to:</Text>\n                <ul>\n                  <li>Post bounties</li>\n                  <li>Discuss bounties</li>\n                  <li>Fulfill bounties</li>\n                </ul>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text />\n            </Flex>\n\n            <Flex\n              flexDirection={\"column\"}\n              justifyContent={\"space-between\"}\n              p={3}\n              flexShrink={\"1\"}\n            >\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\" />\n              </Flex>\n\n              <Heading.h2>How would you like to connect?</Heading.h2>\n\n              <Text my={3}>\n                Make sure you've set up MetaMask or your mobile wallet before\n                you continue.\n              </Text>\n\n              <MetaMaskButton onClick={this.props.validateAccount}>\n                Connect with MetaMask\n              </MetaMaskButton>\n\n              <Flex mt={3} mx={4} alignItems=\"center\">\n                <Box mr={3}>\n                  <Image\n                    src=\"images/phone.png\"\n                    alt=\"mobile phone\"\n                    width={\"60px\"}\n                    height={\"92px\"}\n                  />\n                </Box>\n\n                <Flex flexDirection={\"column\"}>\n                  <Text fontWeight={3} mb={2}>\n                    Connect with a mobile app\n                  </Text>\n                  <Text>\n                    You can connect from mobile browser wallets like Cipher,\n                    Status or Coinbase wallet.\n                  </Text>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  TextButton,\n  Modal,\n  Flex,\n  Box,\n  MetaMaskButton\n} from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\";\nimport theme from \"../../theme\";\n\nclass TransactionConnectionModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"960px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>\n                    Current Network\n                  </Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n\n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>\n                    New to Bounties Explorer?\n                  </Text>\n                  <Text>\n                    You need to be connected so you can use the funds stored in\n                    your Etherum account.\n                  </Text>\n                  <Text>\n                    Every blockchain action requires a small network fee.\n                  </Text>\n                </Box>\n\n                <Text fontWeight={3}>What's a network fee?</Text>\n                <Text>\n                  This fee pays for a person or group to add a record of your\n                  action to the blockchain and let the network know. It doesn't\n                  go to us.\n                </Text>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text />\n            </Flex>\n\n            <Flex flexDirection={\"column\"} p={3}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\" />\n              </Flex>\n\n              <Heading.h2>Connect to continue</Heading.h2>\n\n              <Text mb={4}>\n                This action uses the blockchain, so you'll need to connect your\n                Ethereum account to continue. That's the long code starting with{\" \"}\n                <Text.span fontWeight={3}>0x</Text.span>.\n              </Text>\n\n              <MetaMaskButton onClick={this.props.validateAccount}>\n                Connect with MetaMask\n              </MetaMaskButton>\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  TextButton,\n  Modal,\n  Flex,\n  Box,\n  ToastMessage\n} from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\";\nimport theme from \"./../../theme\";\n\nclass ConnectionPendingModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"960px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>\n                    Current Network\n                  </Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n\n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>\n                    New to Bounties Explorer?\n                  </Text>\n                  <Text>\n                    It's possible to use your account's address to see all your\n                    blockchain activity. Only connect accounts you don't mind\n                    being linked to your Bounties Explorer profile.\n                  </Text>\n                </Box>\n\n                <Text fontWeight={3}>What does connection mean?</Text>\n                <ul>\n                  <li>Shares your Ethereum account address with us</li>\n                  <li>\n                    Allows us to start transactions on the blockchain (at your\n                    request)\n                  </li>\n                </ul>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text />\n            </Flex>\n\n            <Flex flexDirection={\"column\"} p={3}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\" />\n              </Flex>\n\n              <Heading.h2>Connect your account</Heading.h2>\n\n              <Text mb={4}>\n                A connection request should automatically appear. If not, open\n                it using the MetaMask extension icon in your browser.\n              </Text>\n\n              <ToastMessage\n                message={\"Waiting for connection confirmation...\"}\n                secondaryMessage={\"This won't cost your any Ether\"}\n                icon={\"InfoOutline\"}\n              />\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  OutlineButton,\n  Button,\n  Icon,\n  Modal,\n  TextButton\n} from \"rimble-ui\";\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>\n              You can't continue without connecting your account\n            </Heading.h2>\n\n            <Text my={4}>\n              To use Bounties Explorer, you need to confirm the connection\n              request. You can still browse as a guest.\n            </Text>\n\n            <Flex justifyContent={\"flex-end\"} mt={4}>\n              <OutlineButton onClick={this.props.closeModal} mr={4}>\n                Browse as guest\n              </OutlineButton>\n              <Button onClick={this.sendMessageAgain}>\n                Send message again\n              </Button>\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  TextButton,\n  Modal,\n  Flex,\n  Box,\n  ToastMessage\n} from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\";\nimport theme from \"../../theme\";\n\nclass ValidationPendingModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"960px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>\n                    Current Network\n                  </Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n\n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>\n                    New to Bounties Explorer?\n                  </Text>\n                  <Text fontWeight={3}>The blockchain is public</Text>\n                  <Text>\n                    It's possible to use your account's address to see all your\n                    blockchain activity. Only connect accounts you don't mind\n                    being linked to your Bounties Explorer profile.\n                  </Text>\n                </Box>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text />\n            </Flex>\n\n            <Flex flexDirection={\"column\"} p={3}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\" />\n              </Flex>\n\n              <Heading.h2>Verify your account</Heading.h2>\n\n              <Text mb={4}>\n                To connect securely and prove you have access to this account,\n                sign the message in your MetaMask extension. A signature request\n                should automatically appear. If not, open it using the MetaMask\n                icon in your browser.\n              </Text>\n\n              <Box bg={\"#f3f2fd\"} borderRadius={2} p={3} mb={4}>\n                <Text>Address: {this.props.account}</Text>\n              </Box>\n\n              <ToastMessage\n                message={\"Waiting for connection confirmation...\"}\n                secondaryMessage={\"This won't cost your any Ether\"}\n                icon={\"InfoOutline\"}\n              />\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default ValidationPendingModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  OutlineButton,\n  Button,\n  Icon,\n  Modal,\n  TextButton\n} from \"rimble-ui\";\n\nclass UserRejectedValidationModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.validateAccount();\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>\n              You can't continue without signing the message\n            </Heading.h2>\n\n            <Text my={4}>\n              To use Bounties Explorer, you need to sign the message to finish\n              connecting securely. You can still browse as a guest.\n            </Text>\n\n            <Flex justifyContent={\"flex-end\"} mt={4}>\n              <OutlineButton onClick={this.props.closeModal} mr={4}>\n                Browse as guest\n              </OutlineButton>\n              <Button onClick={this.sendMessageAgain}>\n                Send message again\n              </Button>\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedValidationModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  TextButton,\n  Modal,\n  Flex,\n  Box,\n  OutlineButton,\n  Button,\n  PublicAddress,\n  QR\n} from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\";\nimport theme from \"../../theme\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showQR: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showQR: !this.state.showQR\n    });\n  };\n\n  RightColumn = () => {\n    return (\n      <Flex flexDirection={\"column\"} p={3}>\n        <Flex justifyContent={\"center\"} my={4}>\n          <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n        </Flex>\n\n        <Heading.h2>Low Funds</Heading.h2>\n\n        <Text mb={4}>\n          To use Bounties Explorer's block chain features, you'll need to own\n          Ether. Deposit Ether into your account via your MetaMask extension or\n          send Funds from another account.\n        </Text>\n\n        <PublicAddress address={this.props.account} />\n\n        <Box my={3}>\n          <Text.span bold fontWeight={3} mr={3}>\n            Got another account on a mobile wallet?\n          </Text.span>\n          <Text.span>\n            Send funds by scanning your QR code with your wallet app.\n          </Text.span>\n        </Box>\n\n        <Box mb={4}>\n          <OutlineButton onClick={this.toggleQRVisible}>\n            <Flex alignItems={\"center\"}>\n              <Icon name=\"FilterCenterFocus\" mr={2} />\n              Show account QR code\n            </Flex>\n          </OutlineButton>\n        </Box>\n        <Flex justifyContent={\"flex-end\"}>\n          <Box>\n            <Button onClick={this.props.closeModal}>\n              Continue to Bounties Explorer\n            </Button>\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"960px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>\n                    Current Network\n                  </Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n\n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>\n                    New to Ether?\n                  </Text>\n                </Box>\n\n                <Text fontWeight={3}>What you'll need Ether for:</Text>\n                <ul>\n                  <li>Submitting a bounty</li>\n                  <li>Paying for a completed bounty</li>\n                  <li>Network fees</li>\n                </ul>\n\n                <Text fontWeight={3}>What are network fees?</Text>\n                <Text>\n                  Network fees pay for a person or group to add a record of your\n                  action to the blockchain and let the network know. It doesn't\n                  go to us.\n                </Text>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text />\n            </Flex>\n            {!this.state.showQR ? (\n              this.RightColumn()\n            ) : (\n              <Box>\n                <Flex justifyContent={\"center\"}>\n                  <QR value={this.props.account} />\n                </Flex>\n\n                <Text>{this.props.account}</Text>\n                <OutlineButton onClick={this.toggleQRVisible}>\n                  Close QR\n                </OutlineButton>\n              </Box>\n            )}\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport TransactionConnectionModal from \"./components/TransactionConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport ValidationPendingModal from \"./components/ValidationPendingModal\";\nimport UserRejectedValidationModal from \"./components/UserRejectedValidationModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          validateAccount={this.props.validateAccount}\n          isOpen={\n            this.props.modals.data.connectionModalIsOpen &&\n            !this.props.accountValidated\n          }\n          currentNetwork={this.props.network.current}\n        />\n\n        <TransactionConnectionModal\n          closeModal={this.props.modals.methods.closeTransactionConnectionModal}\n          validateAccount={this.props.validateAccount}\n          isOpen={this.props.modals.data.transactionConnectionModalIsOpen}\n          currentNetwork={this.props.network.current}\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <ValidationPendingModal\n          closeModal={this.props.modals.methods.closeValidationPendingModal}\n          isOpen={this.props.modals.data.accountValidationPending}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n        <UserRejectedValidationModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedValidationModal\n          }\n          isOpen={this.props.modals.data.userRejectedValidation}\n          validateAccount={this.props.validateAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\n\nclass TransactionUtil extends React.Component {\n  render() {\n    return (\n      <div>\n      </div>\n    );\n  }\n}\n\nexport default TransactionUtil;\n","import React from \"react\";\nimport Web3 from \"web3\"; // uses latest 1.x.x version\nimport bowser from \"bowser\";\n\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport TransactionUtil from \"./TransactionUtil\";\n\nconst RimbleTransactionContext = React.createContext({\n  contract: {},\n  account: {},\n  accountBalance: {},\n  accountBalanceLow: {},\n  web3: {},\n  web3Fallback: {},\n  transactions: {},\n  checkPreflight: () => {},\n  initWeb3: () => {},\n  initContract: () => {},\n  initAccount: () => {},\n  rejectAccountConnect: () => {},\n  accountValidated: {},\n  accountValidationPending: {},\n  rejectValidation: () => {},\n  validateAccount: () => {},\n  connectAndValidateAccount: () => {},\n  network: {\n    required: {},\n    current: {},\n    isCorrectNetwork: null,\n    checkNetwork: () => {}\n  },\n  modals: {\n    data: {\n      noWeb3BrowserModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      connectionModalIsOpen: {},\n      accountConnectionPending: {},\n      userRejectedConnect: {},\n      accountValidationPending: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n      lowFundsModalIsOpen: {}\n    },\n    methods: {\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      closeValidationPendingModal: () => {},\n      openValidationPendingModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeTransactionConnectionModal: () => {},\n      openTransactionConnectionModal: () => {},\n      closeLowFundsModal: () => {},\n      openLowFundsModal: () => {}\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  web3Preflight = () => {\n    // Is this browser compatible?\n    if (!this.state.validBrowser) {\n      console.log(\"Invalid browser, cancelling transaction.\");\n      let modals = { ...this.state.modals };\n      modals.data.noWeb3BrowserModalIsOpen = true;\n      this.setState({ modals });\n    }\n\n    // Is there a web3 provider?\n    if (!this.state.web3) {\n      console.log(\"No browser wallet, cancelling transaction.\");\n      let modals = { ...this.state.modals };\n      modals.data.noWalletModalIsOpen = true;\n      this.setState({ modals });\n      return false;\n    }\n\n    return true;\n  };\n\n  web3ActionPreflight = () => {\n    // Is this browser compatible?\n    if (!this.state.validBrowser) {\n      console.log(\"Invalid browser, cancelling transaction.\");\n      let modals = { ...this.state.modals };\n      modals.data.noWeb3BrowserModalIsOpen = true;\n      this.setState({ modals });\n      return false;\n    }\n\n    // Is there a wallet?\n    if (this.state.web3Fallback) {\n      console.log(\"No browser wallet, cancelling transaction.\");\n      let modals = { ...this.state.modals };\n      modals.data.noWalletModalIsOpen = true;\n      this.setState({ modals });\n      return false;\n    }\n\n    return true;\n  };\n\n  // Validates user's browser is web3 capable\n  checkModernBrowser = async () => {\n    // User Agent\n    const browser = bowser.getParser(window.navigator.userAgent);\n    const userAgent = browser.parse().parsedResult;\n\n    const validBrowser = browser.satisfies({\n      desktop: {\n        chrome: \">49\",\n        firefox: \">52\",\n        opera: \">36\"\n      }\n    })\n      ? true\n      : false;\n\n    this.setState({\n      userAgent,\n      validBrowser\n    });\n\n    return validBrowser;\n  };\n\n  // Initialize a web3 provider\n  // TODO: Make async work\n  initWeb3 = async () => {\n    this.checkModernBrowser();\n\n    let web3 = {};\n\n    // Check for modern web3 provider\n    if (window.ethereum) {\n      console.log(\"Using modern web3 provider.\");\n      web3 = new Web3(window.ethereum);\n    }\n    // Legacy dapp browsers, public wallet address always exposed\n    else if (window.web3) {\n      console.log(\"Legacy web3 provider. Try updating.\");\n      web3 = new Web3(window.web3.currentProvider);\n    }\n    // Non-dapp browsers...\n    else {\n      console.log(\"Non-Ethereum browser detected. Using Infura fallback.\");\n\n      const web3Provider = new Web3.providers.HttpProvider(\n        \"https://rinkeby.infura.io/v3/c43d74f41ea4482d8eecfa96d47a8151\"\n      );\n      web3 = new Web3(web3Provider);\n\n      // Set fallback property, used to show modal\n      this.setState({ web3Fallback: true });\n    }\n\n    this.setState({ web3 }, () => {\n      // After setting the web3 provider, check network\n      this.checkNetwork();\n    });\n\n    console.log(\"Finished initWeb3\");\n  };\n\n  initContract = async (address, abi) => {\n    console.log(\"Init contract\");\n\n    if (!this.state.web3) {\n      console.log(\"Awaiting web3\");\n      await this.initWeb3();\n    }\n\n    this.createContract(address, abi);\n  };\n\n  createContract = async (address, abi) => {\n    console.log(\"creating contract\", address, abi);\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new this.state.web3.eth.Contract(abi, address);\n      this.setState({ contract });\n    } catch (error) {\n      console.log(\"Could not create contract.\");\n      window.toastProvider.addMessage(\"Contract creation failed.\", {\n        variant: \"failure\"\n      });\n    }\n  };\n\n  initAccount = async () => {\n    this.openConnectionPendingModal();\n\n    try {\n      // Request account access if needed\n      await window.ethereum.enable().then(wallets => {\n        const account = wallets[0];\n        this.closeConnectionPendingModal();\n        this.setState({ account });\n\n        console.log(\"wallet address:\", this.state.account);\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // Watch for account change\n        this.pollAccountUpdates();\n      });\n    } catch (error) {\n      // User denied account access...\n      console.log(\"User cancelled connect request. Error:\", error);\n\n      // Reject Connect\n      this.rejectAccountConnect(error);\n    }\n  };\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  };\n\n  getAccountBalance = async () => {\n    try {\n      await this.state.web3.eth\n        .getBalance(this.state.account)\n        .then(accountBalance => {\n          accountBalance = this.state.web3.utils.fromWei(\n            accountBalance,\n            \"ether\"\n          );\n          accountBalance = parseFloat(accountBalance);\n          this.setState({ accountBalance });\n          console.log(\"account balance: \", accountBalance);\n\n          this.determineAccountLowBalance();\n        });\n    } catch (error) {\n      console.log(\"Failed to get account balance.\");\n    }\n  };\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum ? true : false;\n\n    this.setState({\n      accountBalanceLow\n    });\n  };\n\n  validateAccount = async () => {\n    console.log(\"validateAccount\");\n    // Get account wallet if none exist\n    if (!this.state.account) {\n      await this.initAccount();\n\n      if (!this.state.account) {\n        return;\n      }\n    }\n    console.log(\"setting state to update UI\");\n\n    // Show blocking modal\n    this.openValidationPendingModal();\n\n    console.log(\"Requesting web3 personal sign\");\n    return window.web3.personal.sign(\n      window.web3.fromUtf8(\n        `Hi there from Rimble! To connect, sign this message to prove you have access to this account. This won’t cost you any Ether. To stop hackers pretending to be you, here’s a unique message ID they won't be able to guess: 012345`\n      ),\n      this.state.account,\n      (error, signature) => {\n        if (error) {\n          // User rejected account validation.\n          console.log(\"Wallet account not validated. Error:\", error);\n\n          // Reject the validation\n          this.rejectValidation(error);\n\n          if (this.state.callback) {\n            this.state.callback(\"error\");\n          }\n        } else {\n          const successMessage =\n            \"Wallet \" + this.shortenHash(this.state.account) + \" connected\";\n          console.log(successMessage, signature);\n          window.toastProvider.addMessage(successMessage, {\n            variant: \"success\"\n          });\n\n          this.closeValidationPendingModal();\n          this.setState({\n            accountValidated: true\n          });\n\n          if (this.state.callback) {\n            this.state.callback(\"success\");\n          }\n        }\n      }\n    );\n  };\n\n  rejectValidation = error => {\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedValidation = true;\n    modals.data.accountValidated = false;\n    modals.data.accountValidationPending = false;\n    this.setState({ modals });\n  };\n\n  connectAndValidateAccount = async callback => {\n    if (!this.web3ActionPreflight()) {\n      return;\n    }\n\n    // Check for account\n    if (!this.state.account || !this.state.accountValidated) {\n      // Show modal to connect account\n      this.openConnectionModal(null, callback);\n    }\n\n    // await this.initAccount();\n    // await this.validateAccount();\n  };\n\n  getRequiredNetwork = () => {\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : 1;\n    let networkName = \"\";\n    switch (networkId) {\n      case 1:\n        networkName = \"Main\";\n        break;\n      case 3:\n        networkName = \"Ropsten\";\n        break;\n      case 4:\n        networkName = \"Rinkeby\";\n        break;\n      case 42:\n        networkName = \"Kovan\";\n        break;\n      default:\n        networkName = \"unknown\";\n    }\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  };\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      console.log(\"Could not get network ID: \", error);\n    }\n  };\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      console.log(\"Could not get network Name: \", error);\n    }\n  };\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n    await this.getNetworkId();\n    await this.getNetworkName();\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork =\n      this.state.network.current.id === this.state.network.required.id\n        ? true\n        : false;\n\n    this.setState({ network });\n  };\n\n  pollAccountUpdates = () => {\n    let account = this.state.account;\n    let requiresUpdate = false;\n    let accountInterval = setInterval(() => {\n      if (\n        this.state.modals.data.accountValidationPending ||\n        this.state.modals.data.accountConnectionPending\n      ) {\n        return;\n      }\n      if (window.ethereum.isConnected()) {\n        const updatedAccount = window.web3.eth.accounts[0];\n\n        if (updatedAccount !== account) {\n          requiresUpdate = true;\n        }\n\n        if (requiresUpdate) {\n          clearInterval(accountInterval);\n          let modals = { ...this.state.modals };\n          modals.data.userRejectedConnect = null;\n\n          this.setState(\n            {\n              modals: modals,\n              account: \"\",\n              accountValidated: null\n            },\n            () => {\n              this.initAccount();\n            }\n          );\n        }\n      }\n    }, 1000);\n  };\n\n  contractMethodSendWrapper = contractMethod => {\n    // Is it web3 capable?\n    if (!this.web3ActionPreflight()) {\n      return;\n    }\n\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account || !this.state.accountValidated) {\n      this.openTransactionConnectionModal(null, () => {\n        console.log(\"Successfully connected, continuing with Tx\");\n        this.contractMethodSendWrapper(contractMethod);\n      });\n      return;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal(null, () => {\n        alert(\"tx low funds\");\n      });\n      return;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction();\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.method = contractMethod;\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n\n    console.log(\"transaction: \", { ...transaction });\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { contract, account } = this.state;\n\n    try {\n      contract.methods[contractMethod]()\n        .send({ from: account })\n        .on(\"transactionHash\", hash => {\n          // Submitted to block and received transaction hash\n          // Set properties on the current transaction\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"confirmation\", (confirmationNumber, receipt) => {\n          // Update confirmation count on each subsequent confirmation that's received\n          transaction.confirmationCount += 1;\n\n          // How many confirmations should be received before informing the user\n          const confidenceThreshold = 3;\n\n          if (transaction.confirmationCount === 1) {\n            // Initial confirmation receipt\n            transaction.status = \"confirmed\";\n          } else if (transaction.confirmationCount < confidenceThreshold) {\n            // Not enough confirmations to match threshold\n          } else if (transaction.confirmationCount === confidenceThreshold) {\n            // Confirmations match threshold\n            // Check the status from result since we are confident in the result\n            if (receipt.status) {\n              transaction.status = \"success\";\n            } else if (!receipt.status) {\n              transaction.status = \"error\";\n            }\n          } else if (transaction.confirmationCount > confidenceThreshold) {\n            // Confidence threshold met\n          }\n          // Update transaction with receipt details\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"receipt\", receipt => {\n          // Received receipt, met total number of confirmations\n          transaction.recentEvent = \"receipt\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"error\", error => {\n          // Errored out\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n          // TODO: should this be a custom error? What is the error here?\n          // TODO: determine how to handle error messages globally\n          window.toastProvider.addMessage(\"Value change failed\", {\n            secondaryMessage: \"Could not change value.\",\n            actionHref: \"\",\n            actionText: \"\",\n            variant: \"failure\"\n          });\n        });\n    } catch (error) {\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Value change failed\", {\n        secondaryMessage: \"Could not change value on smart contract\",\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\"\n      });\n    }\n  };\n\n  // Create tx\n  createTransaction = () => {\n    let transaction = {};\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n\n    return transaction;\n  };\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    console.log(\"addTransaction: \", { ...transaction });\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  };\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n    console.log(\"updateTransaction: \", transaction);\n  };\n\n  // UTILITY\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    console.log(\"this.state\", this.state);\n    this.setState({ modals });\n  };\n\n  openConnectionModal = (e, callback) => {\n    if (typeof e !== \"undefined\" && e !== null) {\n      console.log(e);\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals, callback: callback });\n  };\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  };\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  };\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  };\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  };\n\n  closeValidationPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountValidationPending = false;\n    modals.data.connectionModalIsOpen = false;\n    modals.data.transactionConnectionModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openValidationPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.accountValidationPending = true;\n    modals.data.userRejectedValidation = false;\n    this.setState({ modals });\n  };\n\n  closeUserRejectedValidationModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedValidation = false;\n    modals.data.connectionModalIsOpen = false;\n    modals.data.transactionConnectionModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openUserRejectedValidationModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedValidation = true;\n    modals.data.connectionModalIsOpen = false;\n    modals.data.transactionConnectionModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  };\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  };\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  };\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  };\n\n  closeTransactionConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionConnectionModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openTransactionConnectionModal = (e, callback) => {\n    if (typeof e !== \"undefined\" && e !== null) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionConnectionModalIsOpen = true;\n    this.setState({ modals, callback: callback });\n  };\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openLowFundsModal = (e, callback) => {\n    if (typeof e !== \"undefined\" && e !== null) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals, callback: callback });\n  };\n\n  state = {\n    contract: {},\n    account: null,\n    accountBalance: null,\n    accountBalanceLow: null,\n    web3: null,\n    web3Fallback: null,\n    transactions: {},\n    checkPreflight: this.checkPreflight,\n    initWeb3: this.initWeb3,\n    initContract: this.initContract,\n    initAccount: this.initAccount,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    rejectAccountConnect: this.rejectAccountConnect,\n    accountValidated: null,\n    accountValidationPending: null,\n    rejectValidation: this.rejectValidation,\n    validateAccount: this.validateAccount,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    network: {\n      required: {},\n      current: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        connectionModalIsOpen: null,\n        accountConnectionPending: null,\n        userRejectedConnect: null,\n        accountValidationPending: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        transactionConnectionModalIsOpen: null,\n        lowFundsModalIsOpen: null\n      },\n      methods: {\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeValidationPendingModal: this.closeValidationPendingModal,\n        openValidationPendingModal: this.openValidationPendingModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeTransactionConnectionModal: this.closeTransactionConnectionModal,\n        openTransactionConnectionModal: this.openTransactionConnectionModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openLowFundsModal: this.openLowFundsModal\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  };\n\n  componentDidMount() {\n    // Performs a check on browser and will load a web3 provider\n    // this.initWeb3();\n  }\n\n  render() {\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          initAccount={this.state.initAccount}\n          account={this.state.account}\n          validateAccount={this.state.validateAccount}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n          accountValidated={this.state.accountValidated}\n          network={this.state.network}\n          modals={this.state.modals}\n        />\n        <TransactionUtil transaction={this.state.transaction} />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text.span>{shortHash}</Text.span>;\n  }\n}\n\nexport default ShortHash;\n","import React from \"react\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ShortHash from \"./ShortHash\";\n\nclass AccountOverview extends React.Component {\n  trimEth = eth => {\n    eth = parseFloat(eth);\n    eth = eth * 10000;\n    eth = Math.round(eth);\n    eth = eth / 10000;\n    eth = eth.toFixed(4);\n\n    return eth;\n  };\n\n  render() {\n    const roundedBalance = this.trimEth(this.props.accountBalance);\n    return (\n      <Flex alignItems={\"flex-start\"} flexDirection={\"column\"} my={2} mx={4}>\n        <Text fontSize={2}>\n          Connected to <ShortHash hash={this.props.account} />\n        </Text>\n        <Text\n          fontSize={1}\n          color={this.props.accountBalanceLow ? \"red\" : \"#999\"}\n        >\n          Balance: {roundedBalance} ETH\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default AccountOverview;\n","import React from \"react\";\nimport { Box, Flex, Button, Heading } from \"rimble-ui\";\nimport NetworkIndicator from \"@rimble/network-indicator\";\nimport AccountOverview from \"../utilities/components/AccountOverview\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Box>\n        <Flex alignItems={\"center\"} justifyContent=\"flex-end\" bg={\"white\"}>\n          <Box mr={4}>\n            <NetworkIndicator\n              currentNetwork={this.props.network.current.id}\n              requiredNetwork={this.props.network.required.id}\n            />\n          </Box>\n\n          {this.props.account && this.props.accountValidated ? (\n            <AccountOverview\n              account={this.props.account}\n              accountBalanceLow={this.props.accountBalanceLow}\n              accountBalance={this.props.accountBalance}\n            />\n          ) : (\n            <Button\n              m={3}\n              onClick={() =>\n                this.props.connectAndValidateAccount(result => {\n                  if (result === \"success\") {\n                    // success\n                    console.log(\"Callback SUCCESS\");\n                  } else if (result === \"error\") {\n                    // error\n                    console.log(\"Callback ERROR\");\n                  }\n                })\n              }\n              size=\"small\"\n            >\n              Connect\n            </Button>\n          )}\n        </Flex>\n        <Box bg=\"primary\" p={3} justifyContent=\"center\" flexDirection=\"column\">\n          <Box width=\"400px\" mx=\"auto\">\n            <Heading.h2 color={\"white\"}>Rimble App Demo</Heading.h2>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"Change submitted\",\n      secondaryMessage: \"Confirm in MetaMask\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"Change submitted\",\n      secondaryMessage: \"Confirm in MetaMask\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing change...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your change is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\"\n    },\n    success: {\n      message: \"Smart contract value changed\",\n      variant: \"success\"\n    },\n    error: {\n      message: \"Value change failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\"\n    }\n  };\n  \n  export default TransactionToastMessages;\n  ","import React from \"react\";\nimport TransactionToastMessages from \"./content/TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      prevTx = this.getTransactionFromCollection(\n        currentTx.created,\n        prevCollection\n      );\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx !== null && typeof tx !== \"undefined\") {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    console.log(\"showTransactionToast: \", { ...transaction })\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    console.log(\"getTransactionToastMeta: \", {...transaction});\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        break;\n    }\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import React from \"react\";\nimport { Flex, Box, Text, Button, OutlineButton } from \"rimble-ui\";\n\n// Address of the deployed smart contract (from etherscan)\nconst contractAddress = \"0x0f69f0ac4b92bf0d101b5747eed3fa6b653a36f8\";\n\n// Copied from remix ide\nconst contractAbi = [\n  {\n    constant: false,\n    inputs: [],\n    name: \"decrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"incrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"reset\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getCounter\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"int256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\n\nclass SmartContractControls extends React.Component {\n  state = {\n    value: 0,\n    needsUpdate: false\n  };\n\n  // gets the number stored in smart contract storage\n  getNumber = ({ ...props }) => {\n    try {\n      this.props.contract.methods\n        .getCounter()\n        .call()\n        .then(value => {\n          value = Number(value.toString());\n          this.setState({ value, needsUpdate: false });\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({ error });\n        });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    Object.keys(this.props.transactions).map(key => {\n      let tx = this.props.transactions[key];\n      if (tx.status === \"success\" && this.state.needsUpdate) {\n        console.log(\"Getting updated number.\");\n        this.getNumber();\n        return false;\n      } else {\n        return false;\n      }\n    });\n  };\n\n  resetCounter = () => {\n    this.props.contractMethodSendWrapper(\"reset\");\n  };\n\n  incrementCounter = () => {\n    // TODO: Remove contract wrapper calls\n    this.props.contractMethodSendWrapper(\"incrementCounter\");\n\n    this.setState({\n      needsUpdate: true\n    });\n  };\n\n  decrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"decrementCounter\");\n    this.setState({\n      needsUpdate: true\n    });\n  };\n\n  componentDidMount() {\n    // Init the contract after the web3 provider has been determined\n    this.props.initContract(contractAddress, contractAbi).then(() => {\n      // Can finally interact with contract\n      this.getNumber();\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <Box>\n        <Flex\n          px={0}\n          pb={4}\n          borderBottom={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n          alignItems=\"end\"\n        >\n          <Text mb={2} fontSize={3}>\n            Smart contract value\n          </Text>\n\n          <OutlineButton\n            size={\"small\"}\n            onClick={this.resetCounter}\n            disabled={!this.props.account}\n          >\n            Reset\n          </OutlineButton>\n        </Flex>\n\n        <Box py={4}>\n          <Text fontSize={6} textAlign={\"center\"}>\n            {this.state.value}\n          </Text>\n        </Box>\n\n        <Flex\n          px={0}\n          pt={4}\n          borderTop={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n        >\n          <Button size={\"medium\"} mr={4} onClick={this.incrementCounter}>\n            Increase value\n          </Button>\n\n          <Button size={\"medium\"} onClick={this.decrementCounter}>\n            Decrease value\n          </Button>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default SmartContractControls;\n","import React from \"react\";\nimport { Card, Heading, Box, Flex, Text } from \"rimble-ui\";\n\nclass TransactionsCard extends React.Component {\n  render() {\n    return (\n      <Card width={\"400px\"} mx={\"auto\"} px={4}>\n        <Heading.h2 fontSize={3} textAlign={\"center\"} px={4} mb={5}>\n          Transactions\n        </Heading.h2>\n        <Box>\n          {Object.keys(this.props.transactions).length > 0 ? (\n            <Flex>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                txHash\n              </Text>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                Status\n              </Text>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                Confirmations\n              </Text>\n            </Flex>\n          ) : null}\n\n          {Object.keys(this.props.transactions).length < 1 ? (\n            <Text textAlign={\"center\"}>No recent transactions</Text>\n          ) : (\n            Object.keys(this.props.transactions).map((keyName, keyIndex) => {\n              let txHash = \"\";\n              if (this.props.transactions[keyName].transactionHash) {\n                txHash = this.props.transactions[\n                  keyName\n                ].transactionHash.toString();\n                const txStart = txHash.substr(0, 7);\n                const txEnd = txHash.substr(txHash.length - 4);\n                txHash = txStart + \"...\" + txEnd;\n              }\n\n              return (\n                <Flex key={keyIndex}>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {txHash}\n                  </Text>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {this.props.transactions[keyName].status}\n                  </Text>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {this.props.transactions[keyName].confirmationCount}\n                  </Text>\n                </Flex>\n              );\n            })\n          )}\n        </Box>\n      </Card>\n    );\n  }\n}\n\nexport default TransactionsCard;\n","import React from \"react\";\nimport { Card } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\n\nimport SmartContractControls from \"./SmartContractControls\";\nimport TransactionsCard from \"./TransactionsCard\";\n\nclass PrimaryCard extends React.Component {\n  render() {\n    return (\n      <RimbleWeb3.Consumer>\n        {({\n          contract,\n          account,\n          transactions,\n          initContract,\n          initAccount,\n          contractMethodSendWrapper\n        }) => (\n          <div>\n            <Card width={\"400px\"} mx={\"auto\"} px={4}>\n              <SmartContractControls\n                contract={contract}\n                account={account}\n                transactions={transactions}\n                initContract={initContract}\n                contractMethodSendWrapper={contractMethodSendWrapper}\n              />\n            </Card>\n\n            <TransactionsCard transactions={transactions} />\n            <TransactionToastUtil transactions={transactions} />\n          </div>\n        )}\n      </RimbleWeb3.Consumer>\n    );\n  }\n}\n\nexport default PrimaryCard;\n","import React from \"react\";\nimport { Box, Heading, Text, Link, Flex, OutlineButton } from \"rimble-ui\";\n\nclass InstructionsCard extends React.Component {\n  render() {\n    return (\n      <Box width={\"400px\"} mx=\"auto\" mt={4}>\n        <Heading.h3>Instructions:</Heading.h3>\n        <ol>\n          <li>\n            <Text p={1}>Make sure MetaMask is working in your browser</Text>\n          </li>\n          <li>\n            <Text p={1}>Set the network to Rinkeby Test Network</Text>\n          </li>\n          <li>\n            <Text p={1}>You'll need a little bit of ETH for gas fees</Text>\n          </li>\n        </ol>\n        <Flex borderTop={1} borderColor={\"#ccc\"} py={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n          <Link\n            href=\"https://github.com/ConsenSys/rimble-app-demo\"\n            target=\"_blank\"\n          >\n            View Code GitHub\n          </Link>\n\n          { this.props.route === \"default\"\n            ? \n              <OutlineButton size=\"small\" onClick={() => this.props.showRoute('onboarding')}>Onboarding Debugger</OutlineButton>\n            :\n              <OutlineButton size=\"small\" onClick={() => this.props.showRoute('default')}>Default View</OutlineButton>\n          }\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default InstructionsCard;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  OutlineButton,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openTransactionConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Transaction Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openValidationPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Validation Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedValidationModal}\n      mr={2}\n      mb={2}\n    >\n      User Rejected Validation\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.validBrowser ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n\n          {!this.props.validBrowser ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">\n                  You current browser is not web3 capable.\n                </Text>\n              </Flex>\n\n              <Link\n                href=\"https://www.google.com/chrome/browser/\"\n                target=\"_blank\"\n              >\n                <OutlineButton size=\"small\">Download Chrome</OutlineButton>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 && this.props.validBrowser ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\"\n              >\n                <OutlineButton size=\"small\">\n                  Get MetaMask Extension\n                </OutlineButton>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <OutlineButton size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </OutlineButton>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <OutlineButton size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </OutlineButton>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <OutlineButton size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </OutlineButton>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <OutlineButton size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </OutlineButton>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <OutlineButton size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </OutlineButton>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import React, { Component } from \"react\";\nimport { ThemeProvider, Box, Text, Flex } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"./utilities/RimbleWeb3\";\nimport ConnectionBanner from \"@rimble/connection-banner\";\n\nimport Header from \"./components/Header\";\nimport PrimaryCard from \"./components/PrimaryCard\";\nimport InstructionsCard from \"./components/InstructionsCard\";\nimport Web3Debugger from \"./components/Web3Debugger\";\n\nimport theme from \"./theme\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body, html {\n    margin: 0;\n    padding: 0;\n    background-color: #efefef;\n  }\n`;\n\nclass App extends Component {\n  state = {\n    route: \"default\"\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = {\n    accountBalanceMinimum: 0.0001,\n    requiredNetwork: 4\n  };\n\n  showRoute = route => {\n    this.setState({\n      route\n    });\n  };\n\n  render() {\n    return (\n      <ThemeProvider theme={theme} className=\"App\">\n        <RimbleWeb3 config={this.config}>\n          <RimbleWeb3.Consumer>\n            {({\n              needsPreflight,\n              validBrowser,\n              userAgent,\n              web3,\n              account,\n              accountBalance,\n              accountBalanceLow,\n              initAccount,\n              rejectAccountConnect,\n              userRejectedConnect,\n              accountValidated,\n              accountValidationPending,\n              rejectValidation,\n              userRejectedValidation,\n              validateAccount,\n              connectAndValidateAccount,\n              modals,\n              network,\n              transaction,\n              web3Fallback\n            }) => (\n              <Box\n                style={{\n                  paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\"\n                }}\n              >\n                <Header\n                  account={account}\n                  accountBalance={accountBalance}\n                  accountBalanceLow={accountBalanceLow}\n                  initAccount={initAccount}\n                  rejectAccountConnect={rejectAccountConnect}\n                  userRejectedConnect={userRejectedConnect}\n                  accountValidated={accountValidated}\n                  accountValidationPending={accountValidationPending}\n                  rejectValidation={rejectValidation}\n                  userRejectedValidation={userRejectedValidation}\n                  validateAccount={validateAccount}\n                  connectAndValidateAccount={connectAndValidateAccount}\n                  modals={modals}\n                  network={network}\n                />\n\n                <Flex m={3} justifyContent={'center'}>\n                  <ConnectionBanner\n                    currentNetwork={network.current.id}\n                    requiredNetwork={this.config.requiredNetwork}\n                    onWeb3Fallback={web3Fallback}\n                  />\n                </Flex>\n\n                <Flex justifyContent=\"center\" p={4}>\n                  <Text width=\"400px\">\n                    This is a starter React dApp that uses the Rimble UI\n                    component library to call methods on a smart contract\n                    deployed to the Ethereum Rinkeby testnet.\n                  </Text>\n                </Flex>\n\n                {this.state.route === \"default\" ? <PrimaryCard /> : null}\n\n                {this.state.route === \"onboarding\" ? (\n                  <Web3Debugger\n                    validBrowser={validBrowser}\n                    userAgent={userAgent}\n                    web3={web3}\n                    account={account}\n                    accountBalance={accountBalance}\n                    accountBalanceLow={accountBalanceLow}\n                    initAccount={initAccount}\n                    rejectAccountConnect={rejectAccountConnect}\n                    userRejectedConnect={userRejectedConnect}\n                    accountValidated={accountValidated}\n                    accountValidationPending={accountValidationPending}\n                    rejectValidation={rejectValidation}\n                    userRejectedValidation={userRejectedValidation}\n                    validateAccount={validateAccount}\n                    connectAndValidateAccount={connectAndValidateAccount}\n                    modals={modals}\n                    network={network}\n                    transaction={transaction}\n                  />\n                ) : null}\n                <InstructionsCard\n                  showRoute={this.showRoute}\n                  route={this.state.route}\n                />\n              </Box>\n            )}\n          </RimbleWeb3.Consumer>\n        </RimbleWeb3>\n        <GlobalStyle />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}