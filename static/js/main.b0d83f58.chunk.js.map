{"version":3,"sources":["utilities/components/NetworkOverview.js","theme.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/ValidationPendingModal.js","utilities/components/UserRejectedValidationModal.js","utilities/ConnectionUtil.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/RimbleWeb3.js","components/Header.js","utilities/content/TransactionToastMessages.js","utilities/TransactionToastUtil.js","components/ConnectButton.js","components/SmartContractControls.js","components/TransactionsCard.js","components/PrimaryCard.js","components/InstructionsCard.js","utilities/components/WrongNetworkModal.js","components/TransactionConnectionModal.js","components/LowFundsModal.js","components/MissingWeb3Provider.js","App.js","serviceWorker.js","index.js"],"names":["NetworkOverview","getNetworkCircleColor","circleColor","_this","props","network","id","networkCircle","borderRadius","backgroundColor","this","height","width","react_default","a","createElement","index_es","alignItems","style","mr","textTransform","name","React","Component","theme","fontSizes","fontWeights","lineHeights","solid","title","copy","fonts","serif","sansSerif","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","shadows","opacity","disabled","colors","primary","blue","navy","copyColor","black","near-black","dark-gray","mid-gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","blacks","whites","ConnectionModal","isOpen","p","maxWidth","icononly","icon","color","position","top","right","mt","onClick","closeConnectionModal","justifyContent","alignContent","flex","flexDirection","caps","components_NetworkOverview","currentNetwork","my","fontWeight","mb","borderRight","borderColor","mx","flexShrink","size","h2","validateAccount","src","alt","ConnectionPendingModal","closeConnectionPendingModal","message","secondaryMessage","UserRejectedConnectionModal","sendMessageAgain","event","closeUserRejectedConnectionModal","openConnectionPendingModal","connectAccount","ValidationPendingModal","closeAccountValidationPendingModal","UserRejectedValidationModal","closeUserRejectedValidationModal","ConnectionUtil","state","setState","components_ConnectionModal","modals","methods","data","connectionModalIsOpen","accountValidated","current","components_ConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","userRejectedConnect","initAccount","components_ValidationPendingModal","accountValidationPending","components_UserRejectedValidationModal","userRejectedValidation","WrongNetworkBanner","bottom","left","required","span","NetworkUtil","isCorrectNetwork","web3","components_WrongNetworkBanner","RimbleTransactionContext","createContext","contract","account","accountBalance","accountBalanceLow","transactions","checkPreflight","initWeb3","initContract","rejectAccountConnect","rejectValidation","connectAndValidateAccount","checkNetwork","openConnectionModal","closeValidationPendingModal","openValidationPendingModal","RimbleTransaction","checkModernBrowser","_callee","browser","userAgent","validBrowser","regenerator_default","wrap","_context","prev","next","bowser","getParser","window","navigator","parse","parsedResult","satisfies","desktop","chrome","firefox","opera","abrupt","stop","_callee2","_context2","Promise","resolve","reject","ethereum","console","log","Web3","currentProvider","web3Provider","providers","HttpProvider","error","_callee3","address","abi","_context3","eth","Contract","sent","t0","toastProvider","addMessage","variant","_callee4","_context4","Object","objectSpread","enable","then","wallets","getAccountBalance","pollAccountUpdates","_callee5","_context5","getBalance","utils","fromWei","parseFloat","determineAccountLowBalance","accountBalanceMinimum","config","_callee6","_context6","personal","sign","fromUtf8","signature","_callee7","_context7","getRequiredNetwork","networkId","requiredNetwork","networkName","getNetworkId","_callee8","_context8","net","getId","getNetworkName","_callee9","_context9","getNetworkType","_callee10","_context10","requiresUpdate","accountInterval","setInterval","clearInterval","contractMethodSendWrapper","contractMethod","transaction","createTransaction","addTransaction","method","type","status","updateTransaction","_this$state","send","from","on","hash","transactionHash","recentEvent","confirmationNumber","receipt","confirmationCount","actionHref","actionText","created","Date","now","lastUpdated","concat","updatedTransaction","e","preventDefault","userRejectedConnection","Provider","assign","value","utilities_ConnectionUtil","utilities_NetworkUtil","Consumer","Header","bg","m","TransactionToastMessages","started","pending","confirmed","success","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","keys","length","getNewObjectFromCollection","objectKey","filter","key","includes","map","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","tx","currentTx","prevTx","processTransactionUpdates","prevProps","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","prevState","ref","node","SmartContractControls","needsUpdate","getNumber","_ref","esm_extends","getCounter","call","Number","toString","catch","resetCounter","incrementCounter","decrementCounter","px","pb","borderBottom","fontSize","py","textAlign","pt","borderTop","TransactionsCard","keyName","keyIndex","txHash","txStart","substr","txEnd","PrimaryCard","RimbleWeb3","components_SmartContractControls","components_TransactionsCard","utilities_TransactionToastUtil","InstructionsCard","h3","href","target","route","showRoute","WrongNetworkModal","closeWrongNetworkModal","TransactionConnectionModal","closeTransactionConnectionModal","LowFundsModal","showQR","toggleQRVisible","RightColumn","bold","closeLowFundsModal","MissingWeb3Provider","classCallCheck","possibleConstructorReturn","getPrototypeOf","wrongNetworkModalIsOpen","openWrongNetworkModal","openUserRejectedConnectionModal","transactionConnectionModalIsOpen","openTransactionConnectionModal","openAccountValidationPendingModal","openUserRejectedValidationModal","lowFundsModalIsOpen","openLowFundsModal","_this2","ml","h4","components_WrongNetworkModal","components_TransactionConnectionModal","components_LowFundsModal","GlobalStyle","createGlobalStyle","_templateObject","App","className","needsPreflight","paddingBottom","components_Header","components_PrimaryCard","components_MissingWeb3Provider","components_InstructionsCard","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0d83f58.chunk.js","sourcesContent":["import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  \n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3: \n          circleColor = \"#ed5a8d\";\n          break;\n        case 4: \n          circleColor = \"#efc35c\";\n          break;\n        case 42: \n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n    \n    return circleColor;\n  }\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\",\n    }    \n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2}></Box>\n        <Text style={{textTransform: \"capitalize\"}}>{this.props.network.name}</Text>\n      </Flex>\n    )\n  }\n}\n\nexport default NetworkOverview;\n","// theme.js\nexport default {\n  fontSizes: [\n    12, 14, 16, 20, 24, 32, 48, 64\n  ],\n  fontWeights: [\n    0, 300, 400, 600, 700\n  ],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: 'athelas, georgia, times, serif',\n    sansSerif: '\"Source Sans Pro\", -apple-system, sans-serif',\n  },\n  space: [\n    0, 4, 8, 16, 32, 64, 128, 256\n  ],\n  radii: [\n    '0', '4px', '8px', '16px'\n  ],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [\n    0,\n    '1px solid'\n  ],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)'\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: '#4E3FCE',\n    blue: '#007ce0',\n    navy: '#004175',\n    copyColor: '#3F3D4B',\n    // black: '#000',\n    black: '#000e1a',\n      'near-black': '#111',\n      'dark-gray': '#333',\n      'mid-gray': '#555',\n    // gray: ' #777',\n    grey: '#CCC',\n    silver: '#999',\n      'light-silver': '#aaa',\n      'moon-gray': '#ccc',\n      'light-gray': '#eee',\n      'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ]\n  }\n}\n","import React from \"react\";\nimport { Card, Heading, Text, Icon, TextButton, Modal, Flex, Image, Box, MetaMaskButton } from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\"\nimport theme from \"../../theme\";\n\nclass ConnectionModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'960px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeConnectionModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>Current Network</Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n                \n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>New to Bounties Explorer?</Text>\n                  <Text fontWeight={3} mt={3} mb={2}>What is connecting?</Text>\n                  <Text>Connecting lets you use Bounties</Text>\n                  <Text>Explore through your Ethereum account (the long cod that starts with 0x).</Text>\n                </Box>\n\n                <Text fontWeight={3}>You need to be connected to:</Text>\n                <ul>\n                  <li>Post bounties</li>\n                  <li>Discuss bounties</li>\n                  <li>Fulfill bounties</li>\n                </ul>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text></Text>\n            </Flex>\n\n            <Flex flexDirection={\"column\"} justifyContent={\"space-between\"} p={3} flexShrink={\"1\"}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\"/>\n              </Flex>\n              \n              <Heading.h2>How would you like to connect?</Heading.h2>\n\n              <Text my={3}>Make sure you've set up MetaMask or your mobile wallet before you continue.</Text>\n              \n              <MetaMaskButton onClick={this.props.validateAccount}>Connect with MetaMask</MetaMaskButton>\n\n              <Flex mt={3} mx={4} alignItems=\"center\">\n                <Image src=\"/images/phone.png\" alt=\"mobile phone\" width={\"60\"} height={\"92\"} mr={3} />\n                <Flex flexDirection={\"column\"}>\n                  <Text fontWeight={3} mb={2}>Connect with a mobile app</Text>\n                  <Text>You can connect from mobile browser wallets like Cipher, Status or Coinbase wallet.</Text>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Icon, TextButton, Modal, Flex, Box, ToastMessage } from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\"\nimport theme from \"./../../theme\";\n\nclass ConnectionPendingModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'960px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeConnectionPendingModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>Current Network</Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n                \n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>New to Bounties Explorer?</Text>\n                  <Text>It's possible to use your account's address to see all your blockchain activity. Only connect accounts you don't mind being linked to your Bounties Explorer profile.</Text>\n                </Box>\n\n                <Text fontWeight={3}>What does connection mean?</Text>\n                <ul>\n                  <li>Shares your Ethereum account address with us</li>\n                  <li>Allows us to start transactions on the blockchain (at your request)</li>\n                </ul>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text></Text>\n            </Flex>\n\n            <Flex flexDirection={\"column\"} p={3}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\"/>\n              </Flex>\n              \n              <Heading.h2>Connect your account</Heading.h2>\n\n              <Text mb={4}>A connection request should automatically appear. If not, open it using the MetaMask extension icon in your browser.</Text>\n              \n              <ToastMessage\n                message={'Waiting for connection confirmation...'}\n                secondaryMessage={'This won\\'t cost your any Ether'}\n                icon={'InfoOutline'}\n              />\n\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Flex, OutlineButton, Button, Icon, Modal, TextButton } from \"rimble-ui\";\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = (event) => {\n    this.props.closeUserRejectedConnectionModal(event);\n    this.props.openConnectionPendingModal(event);\n    this.props.connectAccount();\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'600px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeUserRejectedConnectionModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\"/>\n            </Flex>\n\n            <Heading.h2 my={3}>You can't continue without connecting your account</Heading.h2>\n\n            <Text my={4}>To use Bounties Explorer, you need to confirm the connection request. You can still browse as a guest.</Text>\n            \n            <Flex justifyContent={\"flex-end\"} mt={4}>\n              <OutlineButton onClick={this.props.closeUserRejectedConnectionModal} mr={4}>Browse as guest</OutlineButton>\n              <Button onClick={this.sendMessageAgain}>Send message again</Button>\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Icon, TextButton, Modal, Flex, Box, ToastMessage } from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\"\nimport theme from \"../../theme\";\n\nclass ValidationPendingModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'960px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeAccountValidationPendingModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>Current Network</Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n                \n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>New to Bounties Explorer?</Text>\n                  <Text fontWeight={3}>The blockchain is public</Text>\n                  <Text>It's possible to use your account's address to see all your blockchain activity. Only connect accounts you don't mind being linked to your Bounties Explorer profile.</Text>\n                </Box>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text></Text>\n            </Flex>\n\n            <Flex flexDirection={\"column\"} p={3}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\"/>\n              </Flex>\n              \n              <Heading.h2>Verify your account</Heading.h2>\n\n              <Text mb={4}>To connect securely and prove you have access to this account, sign the message in your MetaMask extension. A signature request should automatically appear. If not, open it using the MetaMask icon in your browser.</Text>\n              \n              <ToastMessage\n                message={'Waiting for connection confirmation...'}\n                secondaryMessage={'This won\\'t cost your any Ether'}\n                icon={'InfoOutline'}\n              />\n\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default ValidationPendingModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Flex, OutlineButton, Button, Icon, Modal, TextButton } from \"rimble-ui\";\n\nclass UserRejectedValidationModal extends React.Component {\n  sendMessageAgain = (event) => {\n    this.props.closeUserRejectedValidationModal(event);\n    this.props.validateAccount();\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'600px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeUserRejectedValidationModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\"/>\n            </Flex>\n            \n            <Heading.h2 my={3}>You can't continue without signing the message</Heading.h2>\n\n            <Text my={4}>To use Bounties Explorer, you need to sign the message to finish connecting securely. You can still browse as a guest.</Text>\n            \n            <Flex justifyContent={\"flex-end\"} mt={4}>\n              <OutlineButton onClick={this.props.closeUserRejectedValidationModal} mr={4}>Browse as guest</OutlineButton>\n              <Button onClick={this.sendMessageAgain}>Send message again</Button>\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default UserRejectedValidationModal;\n","import React from \"react\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport ValidationPendingModal from \"./components/ValidationPendingModal\";\nimport UserRejectedValidationModal from \"./components/UserRejectedValidationModal\";\n\nclass ConnectionUtil extends React.Component {\n  state = {\n    \n  }\n\n  componentWillReceiveProps() {\n    this.setState({\n\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ConnectionModal \n          closeConnectionModal={this.props.modals.methods.closeConnectionModal} \n          validateAccount={this.props.validateAccount} \n          isOpen={this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated} \n          currentNetwork={this.props.network.current}\n        />\n        <ConnectionPendingModal \n          closeConnectionPendingModal={this.props.modals.methods.closeConnectionPendingModal} \n          isOpen={ this.props.modals.data.accountConnectionPending } \n          currentNetwork={this.props.network.current} \n        />\n        <UserRejectedConnectionModal \n          closeUserRejectedConnectionModal={this.props.modals.methods.closeUserRejectedConnectionModal} \n          isOpen={this.props.modals.data.userRejectedConnect} \n          connectAccount={this.props.initAccount} \n          openConnectionPendingModal={this.props.modals.methods.openConnectionPendingModal} \n        />\n        \n        <ValidationPendingModal \n          closeAccountValidationPendingModal={this.props.modals.methods.closeAccountValidationPendingModal} \n          isOpen={this.props.modals.data.accountValidationPending} \n          currentNetwork={this.props.network.current} \n        />\n        <UserRejectedValidationModal \n          closeUserRejectedValidationModal={this.props.modals.methods.closeUserRejectedValidationModal} \n          isOpen={ this.props.modals.data.userRejectedValidation } \n          validateAccount={this.props.validateAccount} \n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionUtil;\n","import React from 'react';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: 'fixed',\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: '100%',\n      backgroundColor: 'white'\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>Looks like you're on the wrong network</Text>\n            <Text>You should be on the {this.props.network.required.name} Ethereum network. You are currently connected to the <Text.span style={{textTransform: \"capitalize\"}}>{this.props.network.current.name}</Text.span> Network - switch in your MetaMask extension.</Text>\n          </Flex>\n        </Flex>\n      </Box>\n    )\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  componentWillReceiveProps() {\n    this.setState({\n      \n    });\n  }\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner \n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport Web3 from \"web3\"; // uses latest 1.x.x version\nimport bowser from \"bowser\";\n\nimport ConnectionUtil from \"./ConnectionUtil\";\nimport NetworkUtil from \"./NetworkUtil\";\n\nconst RimbleTransactionContext = React.createContext({\n  contract: {},\n  account: {},\n  accountBalance: {},\n  accountBalanceLow: {},\n  web3: {},\n  transactions: {},\n  checkPreflight: () => {},\n  initWeb3: () => {},\n  initContract: () => {},\n  initAccount: () => {},\n  rejectAccountConnect: () => {},\n  accountValidated: {},\n  accountValidationPending: {},\n  rejectValidation: () => {},\n  validateAccount: () => {},\n  connectAndValidateAccount: () => {}, \n  network: {\n    required: {},\n    current: {},\n    isCorrectNetwork: null,\n    checkNetwork: () => {},\n  },\n  modals: {\n    data: {\n      connectionModalIsOpen: {},\n      accountConnectionPending: {},\n      userRejectedConnect: {},\n      accountValidationPending: {},\n      userRejectedValidation: {},\n    },\n    methods: {\n      closeConnectionModal: () => {},\n      openConnectionModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeValidationPendingModal: () => {},\n      openValidationPendingModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  }\n});\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n  \n  // Performs \n  checkPreflight = () => {\n    this.checkModernBrowser();\n    this.initWeb3();\n\n    // Prevent MetaMask from reloading page on network change\n    // TODO: Throwing too many system dialogs, possible to resolve?\n    // window.onbeforeunload = function() {\n    //   console.log(\"Suppresing page reload\");\n    //   return \"Prevent reload\"\n    // }\n    \n  }\n\n  // Validates user's browser is web3 capable\n  checkModernBrowser = async () => {\n    // User Agent\n    const browser = bowser.getParser(window.navigator.userAgent);\n    const userAgent = browser.parse().parsedResult;\n\n    const validBrowser = browser.satisfies({\n      desktop: {\n        chrome: '>49',\n        firefox: '>52',\n        opera: '>36'\n      }\n    }) ? true : false;\n\n    this.setState({ \n      userAgent,\n      validBrowser\n    });\n\n    return validBrowser;\n  }\n\n  // Initialize a web3 provider\n  // TODO: Make async work\n  initWeb3 = async () => {\n    return new Promise ((resolve, reject) => {\n      let web3 = {};\n\n      // Check for modern web3 provider\n      if (window.ethereum) {\n        console.log(\"Using modern web3 provider.\");\n        web3 = new Web3(window.ethereum);\n      }\n      // Legacy dapp browsers, public wallet address always exposed\n      else if (window.web3) {\n        console.log(\"Legacy web3 provider. Try updating.\");\n        web3 = new Web3(window.web3.currentProvider);\n      }\n      // Non-dapp browsers...\n      else {\n        console.log(\n          \"Non-Ethereum browser detected. Using Infura fallback.\"\n        );\n\n        const web3Provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io:443');\n        this.setState({ web3Provider });\n        web3 = false;\n      }\n\n      this.setState({ web3 }, () => {\n        // After setting the web3 provider, check network\n        this.checkNetwork();\n      });\n    }, error => {\n      console.log(\"Error initializing web3\");\n    });\n  };\n\n  initContract = async (address, abi) => {\n    console.log(\"creating contract\");\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = await new this.state.web3.eth.Contract(abi, address);\n      this.setState({ contract });\n    } catch (error) {\n      console.log(\"Could not create contract.\");\n      window.toastProvider.addMessage(\"Contract creation failed.\", {\n        variant: \"failure\"\n      });\n    }\n  };\n\n  initAccount = async () => {\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    modals.data.accountConnectionPending = true;\n    this.setState({ modals });\n\n    try {\n      // Request account access if needed\n      await window.ethereum.enable().then(wallets => {\n        const account = wallets[0];\n        modals.data.accountConnectionPending = false;\n        this.setState(({ account, modals }));\n        \n        console.log(\"wallet address:\", this.state.account);\n        \n        // After account is complete, get the balance\n        this.getAccountBalance();\n        \n        // Watch for account change\n        this.pollAccountUpdates();\n      });\n    } catch (error) {\n      // User denied account access...\n      console.log(\"User cancelled connect request. Error:\", error);\n      window.toastProvider.addMessage(\"User needs to CONNECT wallet\", {\n        variant: \"failure\"\n      });\n\n      // Reject Connect\n      this.rejectAccountConnect(error);\n    }\n  };\n\n  rejectAccountConnect = (error) => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  };\n\n  getAccountBalance = async () => {\n    try {\n      await this.state.web3.eth.getBalance(this.state.account).then(accountBalance => {\n        accountBalance = this.state.web3.utils.fromWei(accountBalance, \"ether\");\n        accountBalance = parseFloat(accountBalance);\n        this.setState({ accountBalance })\n        console.log(\"account balance: \", accountBalance);\n\n        this.determineAccountLowBalance();\n      });\n    } catch (error) {\n      console.log(\"Failed to get account balance.\");\n    }\n  };\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum = typeof(this.props.config) !== \"undefined\" && typeof (this.props.config.accountBalanceMinimum) !== \"undefined\"\n      ?\n        this.props.config.accountBalanceMinimum\n      : \n        1\n    // Determine if the account balance is low\n    const accountBalanceLow = this.state.accountBalance < accountBalanceMinimum\n      ? true : false;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  validateAccount = async () => {\n    console.log(\"validateAccount\");\n    // Get account wallet if none exist\n    if (!this.state.account) {\n      await this.initAccount();\n\n      if (!this.state.account) {\n        return;\n      }\n    }\n    console.log(\"setting state to update UI\");\n    \n    // Show blocking modal\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.accountValidationPending = true;\n    modals.data.userRejectedValidation = false;\n    this.setState({ modals });\n\n    console.log(\"Requesting web3 personal sign\");\n    return window.web3.personal.sign(\n      window.web3.fromUtf8(`Hi there from Rimble! To connect, sign this message to prove you have access to this account. This won’t cost you any Ether. To stop hackers pretending to be you, here’s a unique message ID they won't be able to guess: 012345`),\n      this.state.account,\n      (error, signature) => {\n        if (error) {\n          // User rejected account validation.\n          console.log(\"Wallet account not validated. Error:\", error);\n          window.toastProvider.addMessage(\"Wallet account was not validated\", {\n            variant: \"failure\"\n          });\n          \n          // Reject the validation\n          this.rejectValidation(error);\n        } else {\n          console.log(\"Account validation successful.\", signature);\n          modals.data.accountValidationPending = false;\n          this.setState({ \n            modals: modals,\n            accountValidated: true,\n          });\n        }\n      }\n    )\n  }\n\n  rejectValidation = (error) => {\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedValidation = true;\n    modals.data.accountValidated = false;\n    modals.data.accountValidationPending = false;\n    this.setState({ modals });\n  }\n\n  connectAndValidateAccount = async () => {\n    // Check for account\n    if (!this.state.account || !this.state.accountValidated) {\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n\n    // await this.initAccount();\n    // await this.validateAccount();\n  }\n\n  getRequiredNetwork = () => {\n    const networkId = typeof(this.props.config) !== \"undefined\" && typeof (this.props.config.requiredNetwork) !== \"undefined\"\n      ?\n        this.props.config.requiredNetwork\n      : \n        1\n    let networkName = \"\";\n    switch (networkId) {\n      case 1:\n        networkName = \"Main\";\n        break;\n      case 3:\n        networkName = \"Ropsten\";\n        break;\n      case 4:\n        networkName = \"Rinkeby\";\n        break;\n      case 42:\n        networkName = \"Kovan\";\n        break;\n      default:\n        networkName = \"unknown\";\n    }\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    }\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network })\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      console.log(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      console.log(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n    await this.getNetworkId();\n    await this.getNetworkName();\n\n    let network = { ...this.state.network }\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id\n      ? true\n      : false;\n    \n    this.setState({ network });\n  }\n\n  pollAccountUpdates = () => {\n    let account = this.state.account;\n    let requiresUpdate = false;\n    let accountInterval = setInterval(() => {\n      if (this.state.modals.data.accountValidationPending || this.state.modals.data.accountConnectionPending) {\n        return;\n      }\n      window.ethereum.enable().then(wallets => {\n        const updatedAccount = wallets[0];\n        \n        if (updatedAccount !== account) {\n          requiresUpdate = true;\n        }\n\n        if (requiresUpdate) {\n          clearInterval(accountInterval);\n          let modals = { ...this.state.modals };\n          modals.data.userRejectedConnect = null;\n          \n          this.setState({ \n            modals: modals,\n            account: '',\n            accountValidated: null,\n          }, () => {\n            this.initAccount()\n          });\n        }\n      });\n    }, 1000);\n  }\n\n  contractMethodSendWrapper = contractMethod => {\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction();\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.method = contractMethod;\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { contract, account } = this.state;\n\n    try {\n      contract.methods[contractMethod]()\n        .send({ from: account })\n        .on(\"transactionHash\", hash => {\n          // Submitted to block and received transaction hash\n          // Set properties on the current transaction\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"confirmation\", (confirmationNumber, receipt) => {\n          // Update confirmation count on each subsequent confirmation that's received\n          transaction.confirmationCount += 1;\n\n          // How many confirmations should be received before informing the user\n          const confidenceThreshold = 3;\n\n          if (transaction.confirmationCount === 1) {\n            // Initial confirmation receipt\n            transaction.status = \"confirmed\";\n          } else if (transaction.confirmationCount < confidenceThreshold) {\n            // Not enough confirmations to match threshold\n          } else if (transaction.confirmationCount === confidenceThreshold) {\n            // Confirmations match threshold\n            // Check the status from result since we are confident in the result\n            if (receipt.status) {\n              transaction.status = \"success\";\n            } else if (!receipt.status) {\n              transaction.status = \"error\";\n            }\n          } else if (transaction.confirmationCount > confidenceThreshold) {\n            // Confidence threshold met\n          }\n          // Update transaction with receipt details\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"receipt\", receipt => {\n          // Received receipt, met total number of confirmations\n          transaction.recentEvent = \"receipt\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"error\", error => {\n          // Errored out\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n          // TODO: should this be a custom error? What is the error here?\n          // TODO: determine how to handle error messages globally\n          window.toastProvider.addMessage(\"Value change failed\", {\n            secondaryMessage: \"Could not change value.\",\n            actionHref: \"\",\n            actionText: \"\",\n            variant: \"failure\"\n          });\n        });\n    } catch (error) {\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Value change failed\", {\n        secondaryMessage: \"Could not change value on smart contract\",\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\"\n      });\n    }\n  };\n\n  // Create tx\n  createTransaction = () => {\n    let transaction = {};\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n\n    return transaction;\n  };\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  };\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n  };\n\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n    \n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    console.log(\"this.state\", this.state);\n    this.setState((state, props) => ({ modals }))\n  }\n\n  openConnectionModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n    \n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n    \n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    this.setState((state, props) => ({ modals }));\n  }\n\n  openConnectionPendingModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n    \n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    this.setState((state, props) => ({ modals }));\n  }\n\n  closeUserRejectedConnectionModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n    \n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState((state, props) => ({ modals }));\n  }\n\n  closeValidationPendingModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n    \n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState((state, props) => ({ modals }));\n  }\n\n  openValidationPendingModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    this.setState((state, props) => ({ modals }));\n  }\n\n  closeUserRejectedValidationModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedValidation = false;\n    this.setState((state, props) => ({ modals }));\n  }\n\n\n  state = {\n    contract: {},\n    account: null,\n    accountBalance: null,\n    accountBalanceLow: null,\n    web3: null,\n    transactions: {},\n    checkPreflight: this.checkPreflight,\n    initWeb3: this.initWeb3,\n    initContract: this.initContract,\n    initAccount: this.initAccount,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    rejectAccountConnect: this.rejectAccountConnect,\n    accountValidated: null,\n    accountValidationPending: null,\n    rejectValidation: this.rejectValidation,\n    validateAccount: this.validateAccount,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    network: {\n      required: {},\n      current: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork,\n    },\n    modals: {\n      data: {\n        connectionModalIsOpen: null,\n        accountConnectionPending: null,\n        userRejectedConnection: null,\n        accountValidationPending: null,\n        userRejectedValidation: null,\n      },\n      methods: {\n        closeConnectionModal: this.closeConnectionModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n        closeValidationPendingModal: this.closeValidationPendingModal,\n        openValidationPendingModal: this.openValidationPendingModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.checkPreflight();\n  }\n\n  render() {\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionUtil \n          initAccount={this.state.initAccount}\n          validateAccount={this.state.validateAccount} \n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending} \n          accountValidated={this.state.accountValidated}\n          network={this.state.network} \n          modals={ this.state.modals }\n        />\n        <NetworkUtil\n          network={this.state.network}\n          web3={this.state.web3}\n        />\n      </div>\n      \n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport { Box, Flex, Button, Heading } from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Box>\n        <Flex alignItems={\"center\"} justifyContent=\"flex-end\" bg={\"white\"}>\n          <Box mr={4}>\n            <NetworkOverview network={this.props.network.current} />\n          </Box>\n          \n          <Button\n            m={3}\n            onClick={this.props.connectAndValidateAccount}\n            size=\"small\"\n            backgroundColor={\"white\"}\n          >\n            Connect\n          </Button>\n        </Flex>\n        <Box bg=\"primary\" p={3} justifyContent=\"center\" flexDirection=\"column\">\n          <Box width=\"400px\" mx=\"auto\">\n            <Heading.h2 color={\"white\"}>Rimble App Demo</Heading.h2>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","const TransactionToastMessages = {\n    started: {\n      message: \"Change submitted\",\n      secondaryMessage: \"Confirm in MetaMask\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing change...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your change is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\"\n    },\n    success: {\n      message: \"Smart contract value changed\",\n      variant: \"success\"\n    },\n    error: {\n      message: \"Value change failed\",\n      secondaryMessage: \"Make sure you have enough Ether (ETH) and try again\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\"\n    }\n  };\n  \n  export default TransactionToastMessages;\n  ","import React from \"react\";\nimport TransactionToastMessages from \"./content/TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      prevTx = this.getTransactionFromCollection(\n        currentTx.created,\n        prevCollection\n      );\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx !== null && typeof tx !== \"undefined\") {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        break;\n    }\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import React from \"react\";\nimport { Flex, Heading, MetaMaskButton } from \"rimble-ui\";\n\nclass ConnectButton extends React.Component {\n  render() {\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"center\" px={3} py={5}>\n        <Heading.h3 textAlign=\"center\" pb={4}>\n          Connect with MetaMask to try out the demo\n        </Heading.h3>\n\n        <MetaMaskButton\n          size={\"medium\"}\n          mx=\"auto\"\n          onClick={this.props.initAccount}\n          disabled={this.props.account}\n        >\n          Connect with MetaMask\n        </MetaMaskButton>\n      </Flex>\n    );\n  }\n}\n\nexport default ConnectButton;\n","import React from \"react\";\nimport { Flex, Box, Text, Button, OutlineButton } from \"rimble-ui\";\n\n// Address of the deployed smart contract (from etherscan)\nconst contractAddress = \"0x0f69f0ac4b92bf0d101b5747eed3fa6b653a36f8\";\n\n// Copied from remix ide\nconst contractAbi = [\n  {\n    constant: false,\n    inputs: [],\n    name: \"decrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"incrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"reset\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getCounter\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"int256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\n\nclass SmartContractControls extends React.Component {\n  state = {\n    value: 0,\n    needsUpdate: false\n  };\n\n  // gets the number stored in smart contract storage\n  getNumber = ({ ...props }) => {\n    const { contract } = this.props;\n    try {\n      contract.methods\n        .getCounter()\n        .call()\n        .then(value => {\n          value = Number(value.toString());\n          this.setState({ value, needsUpdate: false });\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({ error });\n        });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    Object.keys(this.props.transactions).map(key => {\n      let tx = this.props.transactions[key];\n      if (tx.status === \"success\" && this.state.needsUpdate) {\n        console.log(\"Getting updated number.\");\n        this.getNumber();\n        return false;\n      } else {\n        return false;\n      }\n    });\n  };\n\n  resetCounter = () => {\n    this.props.contractMethodSendWrapper(\"reset\");\n  };\n\n  incrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"incrementCounter\");\n    this.setState({\n      needsUpdate: true\n    });\n  };\n\n  decrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"decrementCounter\");\n    this.setState({\n      needsUpdate: true\n    });\n  };\n\n  componentDidMount() {\n    // Init the contract after the web3 provider has been determined\n    //this.props.initContract(contractAddress, contractAbi).then(() => {\n      // Can finally interact with contract\n      //this.getNumber();\n    //});\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <Box>\n        <Flex\n          px={0}\n          pb={4}\n          borderBottom={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n          alignItems=\"end\"\n        >\n          <Text mb={2} fontSize={3}>\n            Smart contract value\n          </Text>\n\n          <OutlineButton\n            size={\"small\"}\n            onClick={this.resetCounter}\n            disabled={!this.props.account}\n          >\n            Reset\n          </OutlineButton>\n        </Flex>\n\n        <Box py={4}>\n          <Text fontSize={6} textAlign={\"center\"}>\n            {this.state.value}\n          </Text>\n        </Box>\n\n        <Flex\n          px={0}\n          pt={4}\n          borderTop={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n        >\n          <Button size={\"medium\"} mr={4} onClick={this.incrementCounter}>\n            Increase value\n          </Button>\n\n          <Button size={\"medium\"} onClick={this.decrementCounter}>\n            Decrease value\n          </Button>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default SmartContractControls;\n","import React from \"react\";\nimport { Card, Heading, Box, Flex, Text } from \"rimble-ui\";\n\nclass TransactionsCard extends React.Component {\n  render() {\n    return (\n      <Card width={\"400px\"} mx={\"auto\"} px={4}>\n        <Heading.h2 fontSize={3} textAlign={\"center\"} px={4} mb={5}>\n          Transactions\n        </Heading.h2>\n        <Box>\n          {Object.keys(this.props.transactions).length > 0 ? (\n            <Flex>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                txHash\n              </Text>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                Status\n              </Text>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                Confirmations\n              </Text>\n            </Flex>\n          ) : null}\n\n          {Object.keys(this.props.transactions).length < 1 ? (\n            <Text textAlign={\"center\"}>No recent transactions</Text>\n          ) : (\n            Object.keys(this.props.transactions).map((keyName, keyIndex) => {\n              let txHash = \"\";\n              if (this.props.transactions[keyName].transactionHash) {\n                txHash = this.props.transactions[\n                  keyName\n                ].transactionHash.toString();\n                const txStart = txHash.substr(0, 7);\n                const txEnd = txHash.substr(txHash.length - 4);\n                txHash = txStart + \"...\" + txEnd;\n              }\n\n              return (\n                <Flex key={keyIndex}>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {txHash}\n                  </Text>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {this.props.transactions[keyName].status}\n                  </Text>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {this.props.transactions[keyName].confirmationCount}\n                  </Text>\n                </Flex>\n              );\n            })\n          )}\n        </Box>\n      </Card>\n    );\n  }\n}\n\nexport default TransactionsCard;\n","import React from \"react\";\nimport { Card } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\n\nimport ConnectButton from \"./ConnectButton\";\nimport SmartContractControls from \"./SmartContractControls\";\nimport TransactionsCard from \"./TransactionsCard\";\n\nclass PrimaryCard extends React.Component {\n  render() {\n    return (\n      <RimbleWeb3.Consumer>\n        {({\n          contract,\n          account,\n          transactions,\n          initContract,\n          initAccount,\n          contractMethodSendWrapper\n        }) => (\n          <div>\n            <Card width={\"400px\"} mx={\"auto\"} px={4}>\n              <SmartContractControls\n                contract={contract}\n                account={account}\n                transactions={transactions}\n                initContract={initContract}\n                contractMethodSendWrapper={contractMethodSendWrapper}\n              />\n            </Card>\n\n            <TransactionsCard transactions={transactions} />\n            <TransactionToastUtil transactions={transactions} />\n          </div>\n        )}\n      </RimbleWeb3.Consumer>\n    );\n  }\n}\n\nexport default PrimaryCard;\n","import React from \"react\";\nimport { Box, Heading, Text, Link, Flex, OutlineButton } from \"rimble-ui\";\n\nclass InstructionsCard extends React.Component {\n  render() {\n    return (\n      <Box width={\"400px\"} mx=\"auto\" mt={4}>\n        <Heading.h3>Instructions:</Heading.h3>\n        <ol>\n          <li>\n            <Text p={1}>Make sure MetaMask is working in your browser</Text>\n          </li>\n          <li>\n            <Text p={1}>Set the network to Rinkeby Test Network</Text>\n          </li>\n          <li>\n            <Text p={1}>You'll need a little bit of ETH for gas fees</Text>\n          </li>\n        </ol>\n        <Flex borderTop={1} borderColor={\"#ccc\"} py={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n          <Link\n            href=\"https://github.com/ConsenSys/rimble-app-demo\"\n            target=\"_blank\"\n          >\n            View Code GitHub\n          </Link>\n\n          { this.props.route === \"default\"\n            ? \n              <OutlineButton size=\"small\" onClick={() => this.props.showRoute('onboarding')}>Onboarding Debugger</OutlineButton>\n            :\n              <OutlineButton size=\"small\" onClick={() => this.props.showRoute('default')}>Default View</OutlineButton>\n          }\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default InstructionsCard;\n","import React from \"react\";\nimport { Card, Heading, Text, Flex, ToastMessage, Icon, Modal, TextButton } from \"rimble-ui\";\n\nclass WrongNetworkModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'600px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeWrongNetworkModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\"/>\n            </Flex>\n            \n            <Heading.h2 my={3}>Wrong Network</Heading.h2>\n\n            <Text my={4}>Looks like your account is connected to the <Text.span style={{ textTransform: \"capitalize\" }}>{this.props.network.current.name}</Text.span> network. Head to MetaMask and switch to the {this.props.network.required.name} network.</Text>\n            \n            <ToastMessage\n              message={'Waiting for the right network...'}\n              icon={'InfoOutline'}\n            />\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Icon, TextButton, Modal, Flex, Box, MetaMaskButton } from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\"\nimport theme from \"./../theme\";\n\nclass TransactionConnectionModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'960px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeTransactionConnectionModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>Current Network</Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n                \n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>New to Bounties Explorer?</Text>\n                  <Text>You need to be connected so you can use the funds stored in your Etherum account.</Text>\n                  <Text>Every blockchain action requires a small network fee.</Text>\n                </Box>\n\n                <Text fontWeight={3}>What's a network fee?</Text>\n                <Text>This fee pays for a person or group to add a record of your action to the blockchain and let the network know. It doesn't go to us.</Text>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text></Text>\n            </Flex>\n\n            <Flex flexDirection={\"column\"} p={3}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\"/>\n              </Flex>\n              \n              <Heading.h2>Connect to continue</Heading.h2>\n\n              <Text mb={4}>This action uses the blockchain, so you'll need to connect your Ethereum account to continue. That's the long code starting with <Text.span fontWeight={3}>0x</Text.span>.</Text>\n              \n              <MetaMaskButton onClick={this.props.validateAccount}>Connect with MetaMask</MetaMaskButton>\n\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default TransactionConnectionModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Icon, TextButton, Modal, Flex, Box, OutlineButton, Button, PublicAddress, QR } from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\"\nimport theme from \"./../theme\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showQR: false,\n  }\n\n  toggleQRVisible = () => {\n    this.setState({\n      showQR: !this.showQR\n    });\n  };\n\n  RightColumn = () => {\n    return (\n      <Flex flexDirection={\"column\"} p={3}>\n        <Flex justifyContent={\"center\"} my={4}>\n          <Icon name=\"Warning\" color=\"gold\" size=\"40\"/>\n        </Flex>\n        \n        <Heading.h2>Low Funds</Heading.h2>\n  \n        <Text mb={4}>To use Bounties Explorer's block chain features, you'll need to own Ether. Deposit Ether into your account via your MetaMask extension or send Funds from another account.</Text>\n  \n        <PublicAddress address={this.props.account} />\n  \n        <Box my={3}>\n          <Text.span bold fontWeight={3} mr={3}>Got another account on a mobile wallet?</Text.span> \n          <Text.span>Send funds by scanning your QR code with your wallet app.</Text.span>\n        </Box>\n  \n        <Box mb={4}>\n          <OutlineButton onClick={this.toggleQRVisible}>\n            <Flex alignItems={\"center\"}>\n              <Icon name=\"FilterCenterFocus\" mr={2} />\n              Show account QR code\n            </Flex>\n          </OutlineButton>\n        </Box>\n        <Flex justifyContent={\"flex-end\"}>\n          <Box>\n            <Button onClick={this.props.closeLowFundsModal}>Continue to Bounties Explorer</Button>\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'960px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeLowFundsModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>Current Network</Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n                \n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>New to Ether?</Text>\n                </Box>\n\n                <Text fontWeight={3}>What you'll need Ether for:</Text>\n                <ul>\n                  <li>Submitting a bounty</li>\n                  <li>Paying for a completed bounty</li>\n                  <li>Network fees</li>\n                </ul>\n\n                <Text fontWeight={3}>What are network fees?</Text>\n                <Text>Network fees pay for a person or group to add a record of your action to the blockchain and let the network know. It doesn't go to us.</Text>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text></Text>\n            </Flex>\n            { !this.state.showQR \n              ?\n                this.RightColumn()\n              :\n                <Box>\n                  <QR value={this.props.account} />\n                  <Text>{this.props.account}</Text>\n\n                </Box>\n            }\n            \n            \n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Icon, Flex, ToastMessage, OutlineButton, Box, Button, Link } from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\nimport WrongNetworkModal from \"../utilities/components/WrongNetworkModal\";\nimport ConnectionModal from \"../utilities/components/ConnectionModal\";\nimport ConnectionPendingModal from \"../utilities/components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"../utilities/components/UserRejectedConnectionModal\";\nimport TransactionConnectionModal from \"./TransactionConnectionModal\";\nimport ValidationPendingModal from \"../utilities/components/ValidationPendingModal\";\nimport UserRejectedValidationModal from \"../utilities/components/UserRejectedValidationModal\";\nimport LowFundsModal from \"./LowFundsModal\";\n\nclass MissingWeb3Provider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wrongNetworkModalIsOpen: false,\n      connectionModalIsOpen: false,\n      userRejectedConnect: false,\n      transactionConnectionModalIsOpen: false,\n      lowFundsModalIsOpen: false,\n    }\n  }\n\n  closeWrongNetworkModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      wrongNetworkModalIsOpen: false\n    }));\n  }\n\n  openWrongNetworkModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      wrongNetworkModalIsOpen: true\n    }));\n  }\n\n  closeConnectionModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      connectionModalIsOpen: false\n    }));\n  }\n\n  openConnectionModal = (e) => {\n    e.preventDefault();\n    this.setState((state, props) => ({\n      connectionModalIsOpen: true\n    }));\n  }\n  \n  closeConnectionPendingModal = (e) => {\n    e.preventDefault();\n    \n    this.props.rejectAccountConnect();\n  }\n\n  openConnectionPendingModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      accountConnectionPending: true\n    }));\n  }\n\n  closeUserRejectedConnectionModal = (e) => {\n    e.preventDefault();\n    let modals = { ...this.props.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = (e) => {\n    e.preventDefault();\n    let modals = { ...this.props.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeTransactionConnectionModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      transactionConnectionModalIsOpen: false\n    }));\n  }\n\n  openTransactionConnectionModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      transactionConnectionModalIsOpen: true\n    }));\n  }\n\n  closeAccountValidationPendingModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      accountValidationPending: false,\n      userRejectedValidation: true,\n    }));\n  }\n\n  openAccountValidationPendingModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      accountValidationPending: true\n    }));\n  }\n\n  closeUserRejectedValidationModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      userRejectedValidation: false\n    }));\n  }\n\n  openUserRejectedValidationModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      userRejectedValidation: true\n    }));\n  }\n\n  closeLowFundsModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      lowFundsModalIsOpen: false\n    }));\n  }\n\n  openLowFundsModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      lowFundsModalIsOpen: true\n    }));\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({ \n      accountConnectionPending: props.modals.data.accountConnectionPending,\n      closeConnectionPendingModal: props.modals.methods.closeConnectionPendingModal,\n      accountValidationPending: props.modals.data.accountValidationPending,\n      closeValidationPendingModal: props.modals.data.closeValidationPendingModal,\n      userRejectedValidation: props.modals.data.userRejectedValidation,\n    });\n  }\n\n\n  render() {\n    return(\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n        \n        <Box>\n          <Flex alignItems={\"center\"}>\n            { this.props.validBrowser \n              ? \n                <Icon name='Check' color={\"green\"} mr={2} /> \n              :\n                <Icon name='Close' color={\"red\"} mr={2} />\n            }\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n\n          { !this.props.validBrowser \n            ? \n              <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name='Info' mr={2} color=\"#999\" />\n                  <Text color=\"#999\">You current browser is not web3 capable.</Text>\n                </Flex>\n                \n                <Link href=\"https://www.google.com/chrome/browser/\" target=\"_blank\">\n                  <OutlineButton size=\"small\">Download Chrome</OutlineButton>\n                </Link>\n              </Flex>\n            : null \n          }\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            { this.props.web3 \n              ? \n                <Icon name='Check' color={\"green\"} mr={2} /> \n              :\n                <Icon name='Close' color={\"red\"} mr={2} />\n            }\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          { !this.props.web3 && this.props.validBrowser\n            ? \n              <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name='Info' mr={2} color=\"#999\" />\n                  <Text color=\"#999\">You do not have a wallet.</Text>\n                </Flex>\n                \n                <Link href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\" target=\"_blank\">\n                  <OutlineButton size=\"small\">Get MetaMask Extension</OutlineButton>\n                </Link>\n              </Flex>\n            : null \n          }\n        </Box>\n\n        { this.props.web3\n          ? \n            <Flex \n              py={3}\n              my={3}\n              borderTop={1}\n              borderBottom={1}\n              borderColor={\"#E8E8E8\"}\n              textAlign={\"center\"}\n              justifyContent={\"space-around\"}\n              alignItems={\"center\"}\n            >\n              <Button \n                size=\"small\" \n                onClick={this.props.connectAndValidateAccount}\n                disabled={!this.props.web3}\n              >Connect and verify</Button>\n              <Text>- or -</Text>\n              <Button size=\"small\" disabled>Initiate On-Chain Action</Button>\n            </Flex>\n          :\n            null\n        }\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            { this.props.network.isCorrectNetwork ? \n              <Icon name='Check' color={\"green\"} mr={2} /> \n            :\n              <Icon name='Close' color={\"red\"} mr={2} />\n            }\n            <Text>Correct Network</Text>\n          </Flex>\n\n          { this.props.web3 && !this.props.network.isCorrectNetwork\n            ? \n              <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name='Info' mr={2} color=\"#999\" />\n                  <Box>\n                    <Flex alignItems={\"center\"}>\n                      <Text mr={2} color=\"#999\" style={{ textTransform: \"capitalize\" }}>Current network:</Text>\n                      <NetworkOverview network={this.props.network.current}/>\n                    </Flex>\n                    <Flex alignItems={\"center\"}>\n                      <Text mr={2} color=\"#999\" style={{ textTransform: \"capitalize\" }}>Required network:</Text>\n                      <NetworkOverview network={this.props.network.required}/>\n                    </Flex>\n                  </Box>\n                </Flex>\n                \n                <OutlineButton size=\"small\" onClick={this.props.checkNetwork}>Check Network</OutlineButton>\n              </Flex>\n            : \n              null\n          }\n          { \n            this.props.web3 && this.props.isCorrectNetwork\n            ?\n              <Flex ml={4} alignItems={\"center\"} >\n                <NetworkOverview network={this.props.network.current}/>\n              </Flex>\n            :\n              null\n          }\n        </Box>\n        \n        <Box>\n          <Flex alignItems={\"center\"}>\n            { this.props.account && this.props.accountValidated\n              ? \n                <Icon name='Check' color={\"green\"} mr={2} /> \n              :\n                <Icon name='Close' color={\"red\"} mr={2} />\n            }\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          { !this.props.account && this.props.web3 && !this.props.userRejectedConnect\n            ? \n              <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name='Info' mr={2} color=\"#999\" />\n                  <Text color=\"#999\">Not connected to this dApp.</Text>\n                </Flex>\n                \n                <OutlineButton size=\"small\" onClick={this.props.initAccount}>Connect</OutlineButton>\n              </Flex>\n            : \n              null\n          }\n          {\n            this.props.account && this.props.web3\n            ?\n              <Flex ml={4} alignItems={\"center\"}>\n                <Icon name='Check' color={\"green\"} mr={2} /> \n                <Box>\n                  <Text color=\"#999\">Connected wallet {this.props.account}</Text>                \n                  <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>Account balance {this.props.accountBalance}</Text>\n                </Box>\n              </Flex>\n            :\n              null\n          }\n\n          { this.props.userRejectedConnect \n            ? \n              <Flex ml={4} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name=\"Error\" mr={2} color=\"red\" />\n                  <Text color=\"red\">User rejected Connect request</Text>\n                </Flex>\n                \n                <OutlineButton size=\"small\" onClick={this.props.initAccount}>Connect</OutlineButton>\n              </Flex>\n            : \n              null\n          }\n\n          { (this.props.accountValidated === null || this.props.accountValidated === false) && this.props.web3\n            ? \n              <Flex ml={4} my={1} alignItems={\"center\"} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name='Info' mr={2} color=\"#999\" />\n                  <Text color=\"#999\">Account not verified</Text>\n                </Flex>\n                \n                <OutlineButton size=\"small\" onClick={this.props.validateAccount}>Validate</OutlineButton>\n              </Flex>\n            : \n              null\n          }\n\n          { this.props.accountValidated === false\n            ? \n            <Flex ml={4} my={1} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name='Error' mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n              \n              <OutlineButton size=\"small\" onClick={this.props.validateAccount}>Validate</OutlineButton>\n            </Flex>\n            : \n              null\n          }\n\n          { this.props.userRejectedValidation === false\n            ? \n              <Flex ml={4}>\n              <Icon name='Error' mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n            : \n              null\n          }\n        </Box>\n\n        <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n          <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n          <Button size=\"small\" onClick={this.openWrongNetworkModal} mr={2} mb={2}>Blocking Wrong Network</Button>\n          \n          <Button size=\"small\" onClick={this.openConnectionModal} mr={2} mb={2}>Connection</Button>\n          <Button size=\"small\" onClick={this.openConnectionPendingModal} mr={2} mb={2}>Connection Pending</Button>\n          <Button size=\"small\" onClick={this.openUserRejectedConnectionModal} mr={2} mb={2}>Connection Rejected</Button>\n\n          <Button size=\"small\" onClick={this.openTransactionConnectionModal} mr={2} mb={2}>Transaction Connection</Button>\n          \n          <Button size=\"small\" onClick={this.openAccountValidationPendingModal} mr={2} mb={2}>Validation Pending</Button>\n          <Button size=\"small\" onClick={this.openUserRejectedValidationModal} mr={2} mb={2}>User Rejected Validation</Button>\n          <Button size=\"small\" onClick={(event) => { this.props.validateAccount(event); this.openLowFundsModal(event); }} mr={2} mb={2}>Low Funds</Button>\n        </Box>\n\n        {/* Modals */}\n        <WrongNetworkModal \n          closeWrongNetworkModal={this.closeWrongNetworkModal} \n          isOpen={this.state.wrongNetworkModalIsOpen} \n          network={this.props.network}\n        />        \n        <ConnectionModal \n          closeConnectionModal={this.closeConnectionModal} \n          validateAccount={this.props.validateAccount} \n          isOpen={this.state.connectionModalIsOpen && !this.props.accountValidated} \n          currentNetwork={this.props.network.current} \n        />\n        <ConnectionPendingModal \n          closeConnectionPendingModal={this.state.closeConnectionPendingModal} \n          isOpen={ this.state.accountConnectionPending } \n          currentNetwork={this.props.network.current} \n        />\n        <UserRejectedConnectionModal \n          closeUserRejectedConnectionModal={this.closeUserRejectedConnectionModal} \n          isOpen={this.props.modals.data.userRejectedConnect} \n          connectAccount={this.props.initAccount} \n          openConnectionPendingModal={this.openConnectionPendingModal} \n        />\n        \n\n        <TransactionConnectionModal \n          closeTransactionConnectionModal={this.closeTransactionConnectionModal} \n          validateAccount={this.props.validateAccount} \n          isOpen={this.state.transactionConnectionModalIsOpen && !this.props.accountValidated} \n          currentNetwork={this.props.network.current} \n        />\n        \n        <ValidationPendingModal \n          closeAccountValidationPendingModal={this.closeAccountValidationPendingModal} \n          isOpen={this.state.accountValidationPending} \n          currentNetwork={this.props.network.current} \n        />\n        <UserRejectedValidationModal \n          closeUserRejectedValidationModal={this.closeUserRejectedValidationModal} \n          isOpen={ this.state.userRejectedValidation } \n          validateAccount={this.props.validateAccount} \n        />\n\n        <LowFundsModal \n          closeLowFundsModal={this.closeLowFundsModal} \n          isOpen={ this.state.lowFundsModalIsOpen} \n          currentNetwork={this.props.network.current} \n          account={ this.props.account } \n        />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    )\n  }\n}\n\nexport default MissingWeb3Provider\n","import React, { Component } from \"react\";\nimport { ThemeProvider, Box, Text, Flex } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"./utilities/RimbleWeb3\";\n\nimport Header from \"./components/Header\";\nimport PrimaryCard from \"./components/PrimaryCard\";\nimport InstructionsCard from \"./components/InstructionsCard\";\nimport MissingWeb3Provider from \"./components/MissingWeb3Provider\";\n\nimport theme from \"./theme\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body, html {\n    margin: 0;\n    padding: 0;\n    background-color: #efefef;\n  }\n`;\n\nclass App extends Component {\n  state = {\n    route: 'default'\n  }\n\n  // Optional parameters to pass into RimbleWeb3\n  config = {\n    accountBalanceMinimum: 1,\n    requiredNetwork: 4,\n  }\n\n  showRoute = (route) => {\n    this.setState({\n      route\n    });\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme} className=\"App\">\n        <RimbleWeb3 config={this.config}>\n          <RimbleWeb3.Consumer>\n            {({ \n              needsPreflight, \n              validBrowser, \n              userAgent, \n              web3, \n              account, \n              accountBalance,\n              accountBalanceLow,\n              initAccount, \n              rejectAccountConnect,\n              userRejectedConnect,\n              accountValidated,\n              accountValidationPending,\n              rejectValidation,\n              userRejectedValidation,\n              validateAccount,\n              connectAndValidateAccount,\n              modals,\n              network,\n            }) => (\n              <Box style={{paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\" }}>\n                <Header\n                  account={account}\n                  accountBalance={accountBalance}\n                  accountBalanceLow={accountBalanceLow}\n                  initAccount={initAccount}\n                  rejectAccountConnect={rejectAccountConnect}\n                  userRejectedConnect={userRejectedConnect}\n                  accountValidated={accountValidated} \n                  accountValidationPending={accountValidationPending} \n                  rejectValidation={rejectValidation}\n                  userRejectedValidation={userRejectedValidation} \n                  validateAccount={validateAccount} \n                  connectAndValidateAccount={connectAndValidateAccount}\n                  modals={modals}\n                  network={network}\n                />\n                \n                <Flex justifyContent=\"center\" p={4}>\n                  <Text width=\"400px\">\n                    This is a starter React dApp that uses the Rimble UI component\n                    library to call methods on a smart contract deployed to the Ethereum\n                    Rinkeby testnet.\n                  </Text>\n                </Flex>\n\n                { this.state.route === 'default'\n                  ? <PrimaryCard />\n                  : null\n                }\n\n                { this.state.route === 'onboarding'\n                  ? <MissingWeb3Provider \n                      validBrowser={validBrowser} \n                      userAgent={userAgent} \n                      web3={web3} \n                      account={account} \n                      accountBalance={accountBalance}\n                      accountBalanceLow={accountBalanceLow}\n                      initAccount={initAccount} \n                      rejectAccountConnect={rejectAccountConnect}\n                      userRejectedConnect={userRejectedConnect}\n                      accountValidated={accountValidated} \n                      accountValidationPending={accountValidationPending} \n                      rejectValidation={rejectValidation}\n                      userRejectedValidation={userRejectedValidation} \n                      validateAccount={validateAccount} \n                      connectAndValidateAccount={connectAndValidateAccount}\n                      modals={modals}\n                      network={network}\n                    /> \n                  : null\n                }\n                <InstructionsCard showRoute={this.showRoute} route={this.state.route} />\n              </Box>\n            )}\n          </RimbleWeb3.Consumer>\n        </RimbleWeb3>\n        <GlobalStyle />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}