{"version":3,"sources":["utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/components/WrongNetworkModal.js","utilities/components/NetworkOverview.js","theme.js","utilities/components/ConnectionModal.js","utilities/components/TransactionConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/ValidationPendingModal.js","utilities/components/UserRejectedValidationModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/TransactionUtil.js","utilities/RimbleWeb3.js","utilities/components/ShortHash.js","utilities/components/AccountOverview.js","components/Header.js","utilities/content/TransactionToastMessages.js","utilities/TransactionToastUtil.js","components/SmartContractControls.js","components/TransactionsCard.js","components/PrimaryCard.js","components/InstructionsCard.js","components/MissingWeb3Provider.js","App.js","serviceWorker.js","index.js"],"names":["NoWeb3BrowserModal","react_default","a","createElement","index_es","isOpen","this","props","p","maxWidth","icononly","icon","color","position","top","right","mt","mr","onClick","closeModal","flexDirection","justifyContent","my","name","size","h2","href","target","React","Component","NoWalletModal","WrongNetworkModal","span","style","textTransform","network","current","required","message","NetworkOverview","getNetworkCircleColor","circleColor","_this","id","networkCircle","borderRadius","backgroundColor","height","width","alignItems","theme","fontSizes","fontWeights","lineHeights","solid","title","copy","fonts","serif","sansSerif","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","shadows","opacity","disabled","colors","primary","blue","navy","copyColor","black","near-black","dark-gray","mid-gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","blacks","whites","ConnectionModal","closeConnectionModal","alignContent","flex","caps","components_NetworkOverview","currentNetwork","fontWeight","mb","borderRight","borderColor","mx","flexShrink","validateAccount","src","alt","TransactionConnectionModal","ConnectionPendingModal","closeConnectionPendingModal","secondaryMessage","UserRejectedConnectionModal","sendMessageAgain","event","closeUserRejectedConnectionModal","openConnectionPendingModal","connectAccount","ValidationPendingModal","closeValidationPendingModal","bg","account","UserRejectedValidationModal","closeUserRejectedValidationModal","LowFundsModal","state","showQR","toggleQRVisible","setState","RightColumn","address","bold","value","ConnectionModalUtil","components_NoWeb3BrowserModal","modals","methods","closeNoWeb3BrowserModal","data","noWeb3BrowserModalIsOpen","transaction","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","connectionModalIsOpen","accountValidated","components_TransactionConnectionModal","closeTransactionConnectionModal","transactionConnectionModalIsOpen","components_ConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","userRejectedConnect","initAccount","components_ValidationPendingModal","accountValidationPending","components_UserRejectedValidationModal","userRejectedValidation","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","WrongNetworkBanner","bottom","left","NetworkUtil","isCorrectNetwork","web3","components_WrongNetworkBanner","TransactionUtil","RimbleTransactionContext","createContext","contract","accountBalance","accountBalanceLow","transactions","checkPreflight","initWeb3","initContract","rejectAccountConnect","rejectValidation","connectAndValidateAccount","checkNetwork","openNoWeb3BrowserModal","openValidationPendingModal","openWrongNetworkModal","openTransactionConnectionModal","openLowFundsModal","meta","RimbleTransaction","checkModernBrowser","web3ActionPreflight","validBrowser","console","log","Object","objectSpread","_callee","browser","userAgent","regenerator_default","wrap","_context","prev","next","bowser","getParser","window","navigator","parse","parsedResult","satisfies","desktop","chrome","firefox","opera","abrupt","stop","_callee2","_context2","Promise","resolve","reject","ethereum","Web3","currentProvider","web3Provider","providers","HttpProvider","error","_callee3","abi","_context3","eth","Contract","sent","t0","toastProvider","addMessage","variant","_callee4","_context4","enable","then","wallets","getAccountBalance","pollAccountUpdates","_callee5","_context5","getBalance","utils","fromWei","parseFloat","determineAccountLowBalance","accountBalanceMinimum","config","_callee6","_context6","personal","sign","fromUtf8","signature","successMessage","shortenHash","_callee7","_context7","openConnectionModal","getRequiredNetwork","networkId","requiredNetwork","networkName","getNetworkId","_callee8","_context8","net","getId","getNetworkName","_callee9","_context9","getNetworkType","_callee10","_context10","requiresUpdate","accountInterval","setInterval","clearInterval","contractMethodSendWrapper","contractMethod","createTransaction","addTransaction","method","type","status","updateTransaction","_this$state","send","from","on","hash","transactionHash","recentEvent","confirmationNumber","receipt","confirmationCount","actionHref","actionText","created","Date","now","lastUpdated","concat","updatedTransaction","shortHash","txStart","substr","txEnd","length","e","preventDefault","openNoWalletModal","userRejectedConnection","Provider","assign","ConnectionModalsUtil","utilities_NetworkUtil","utilities_TransactionUtil","Consumer","ShortHash","AccountOverview","trimEth","Math","round","toFixed","roundedBalance","fontSize","components_ShortHash","Header","components_AccountOverview","m","TransactionToastMessages","started","pending","confirmed","success","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","keys","getNewObjectFromCollection","objectKey","filter","key","includes","map","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","tx","currentTx","prevTx","processTransactionUpdates","prevProps","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","prevState","ref","node","SmartContractControls","needsUpdate","getNumber","_ref","esm_extends","getCounter","call","Number","toString","catch","resetCounter","incrementCounter","decrementCounter","px","pb","borderBottom","py","textAlign","pt","borderTop","TransactionsCard","keyName","keyIndex","txHash","PrimaryCard","RimbleWeb3","components_SmartContractControls","components_TransactionsCard","utilities_TransactionToastUtil","InstructionsCard","h3","route","showRoute","MissingWeb3Provider","classCallCheck","possibleConstructorReturn","getPrototypeOf","openUserRejectedConnectionModal","closeAccountValidationPendingModal","openAccountValidationPendingModal","openUserRejectedValidationModal","_this2","ml","h4","GlobalStyle","createGlobalStyle","_templateObject","App","className","needsPreflight","paddingBottom","components_Header","components_PrimaryCard","components_MissingWeb3Provider","components_InstructionsCard","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f62393a1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, Heading, Text, Flex, Icon, Modal, TextButton, Link, OutlineButton } from \"rimble-ui\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'600px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\"/>\n            </Flex>\n            \n            <Heading.h2 my={3}>Not a Web3 Browser</Heading.h2>\n\n            <Text my={4}>Your current browser does not support interacting with blockchain. Try using Chrome.</Text>\n\n            <Link href=\"https://www.google.com/chrome/browser/\" target=\"_blank\">\n              <OutlineButton size=\"small\">Download Chrome</OutlineButton>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Flex, Icon, Modal, TextButton, Link, OutlineButton } from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'600px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\"/>\n            </Flex>\n            \n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>Your current browser does not have a blockchain connected wallet. Try using MetaMask.</Text>\n\n            <Link href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\" target=\"_blank\">\n              <OutlineButton size=\"small\">Get MetaMask Extension</OutlineButton>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default NoWalletModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Flex, ToastMessage, Icon, Modal, TextButton } from \"rimble-ui\";\n\nclass WrongNetworkModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'600px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\"/>\n            </Flex>\n            \n            <Heading.h2 my={3}>Wrong Network</Heading.h2>\n\n            <Text my={4}>Looks like your account is connected to the <Text.span style={{ textTransform: \"capitalize\" }}>{this.props.network.current.name}</Text.span> network. Head to MetaMask and switch to the {this.props.network.required.name} network.</Text>\n            \n            <ToastMessage\n              message={'Waiting for the right network...'}\n              icon={'InfoOutline'}\n            />\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  \n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3: \n          circleColor = \"#ed5a8d\";\n          break;\n        case 4: \n          circleColor = \"#efc35c\";\n          break;\n        case 42: \n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n    \n    return circleColor;\n  }\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\",\n    }    \n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2}></Box>\n        <Text style={{textTransform: \"capitalize\"}}>{this.props.network.name}</Text>\n      </Flex>\n    )\n  }\n}\n\nexport default NetworkOverview;\n","// theme.js\nexport default {\n  fontSizes: [\n    12, 14, 16, 20, 24, 32, 48, 64\n  ],\n  fontWeights: [\n    0, 300, 400, 600, 700\n  ],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: 'athelas, georgia, times, serif',\n    sansSerif: '\"Source Sans Pro\", -apple-system, sans-serif',\n  },\n  space: [\n    0, 4, 8, 16, 32, 64, 128, 256\n  ],\n  radii: [\n    '0', '4px', '8px', '16px'\n  ],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [\n    0,\n    '1px solid'\n  ],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)'\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: '#4E3FCE',\n    blue: '#007ce0',\n    navy: '#004175',\n    copyColor: '#3F3D4B',\n    // black: '#000',\n    black: '#000e1a',\n      'near-black': '#111',\n      'dark-gray': '#333',\n      'mid-gray': '#555',\n    // gray: ' #777',\n    grey: '#CCC',\n    silver: '#999',\n      'light-silver': '#aaa',\n      'moon-gray': '#ccc',\n      'light-gray': '#eee',\n      'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ]\n  }\n}\n","import React from \"react\";\nimport { Card, Heading, Text, Icon, TextButton, Modal, Flex, Image, Box, MetaMaskButton } from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\"\nimport theme from \"../../theme\";\n\nclass ConnectionModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'960px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeConnectionModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>Current Network</Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n                \n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>New to Bounties Explorer?</Text>\n                  <Text fontWeight={3} mt={3} mb={2}>What is connecting?</Text>\n                  <Text>Connecting lets you use Bounties</Text>\n                  <Text>Explore through your Ethereum account (the long cod that starts with 0x).</Text>\n                </Box>\n\n                <Text fontWeight={3}>You need to be connected to:</Text>\n                <ul>\n                  <li>Post bounties</li>\n                  <li>Discuss bounties</li>\n                  <li>Fulfill bounties</li>\n                </ul>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text></Text>\n            </Flex>\n\n            <Flex flexDirection={\"column\"} justifyContent={\"space-between\"} p={3} flexShrink={\"1\"}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\"/>\n              </Flex>\n              \n              <Heading.h2>How would you like to connect?</Heading.h2>\n\n              <Text my={3}>Make sure you've set up MetaMask or your mobile wallet before you continue.</Text>\n              \n              <MetaMaskButton onClick={this.props.validateAccount}>Connect with MetaMask</MetaMaskButton>\n\n              <Flex mt={3} mx={4} alignItems=\"center\">\n                <Image src=\"/images/phone.png\" alt=\"mobile phone\" width={\"60\"} height={\"92\"} mr={3} />\n                <Flex flexDirection={\"column\"}>\n                  <Text fontWeight={3} mb={2}>Connect with a mobile app</Text>\n                  <Text>You can connect from mobile browser wallets like Cipher, Status or Coinbase wallet.</Text>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Icon, TextButton, Modal, Flex, Box, MetaMaskButton } from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\"\nimport theme from \"../../theme\";\n\nclass TransactionConnectionModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'960px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>Current Network</Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n                \n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>New to Bounties Explorer?</Text>\n                  <Text>You need to be connected so you can use the funds stored in your Etherum account.</Text>\n                  <Text>Every blockchain action requires a small network fee.</Text>\n                </Box>\n\n                <Text fontWeight={3}>What's a network fee?</Text>\n                <Text>This fee pays for a person or group to add a record of your action to the blockchain and let the network know. It doesn't go to us.</Text>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text></Text>\n            </Flex>\n\n            <Flex flexDirection={\"column\"} p={3}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\"/>\n              </Flex>\n              \n              <Heading.h2>Connect to continue</Heading.h2>\n\n              <Text mb={4}>This action uses the blockchain, so you'll need to connect your Ethereum account to continue. That's the long code starting with <Text.span fontWeight={3}>0x</Text.span>.</Text>\n              \n              <MetaMaskButton onClick={this.props.validateAccount}>Connect with MetaMask</MetaMaskButton>\n\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default TransactionConnectionModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Icon, TextButton, Modal, Flex, Box, ToastMessage } from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\"\nimport theme from \"./../../theme\";\n\nclass ConnectionPendingModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'960px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeConnectionPendingModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>Current Network</Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n                \n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>New to Bounties Explorer?</Text>\n                  <Text>It's possible to use your account's address to see all your blockchain activity. Only connect accounts you don't mind being linked to your Bounties Explorer profile.</Text>\n                </Box>\n\n                <Text fontWeight={3}>What does connection mean?</Text>\n                <ul>\n                  <li>Shares your Ethereum account address with us</li>\n                  <li>Allows us to start transactions on the blockchain (at your request)</li>\n                </ul>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text></Text>\n            </Flex>\n\n            <Flex flexDirection={\"column\"} p={3}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\"/>\n              </Flex>\n              \n              <Heading.h2>Connect your account</Heading.h2>\n\n              <Text mb={4}>A connection request should automatically appear. If not, open it using the MetaMask extension icon in your browser.</Text>\n              \n              <ToastMessage\n                message={'Waiting for connection confirmation...'}\n                secondaryMessage={'This won\\'t cost your any Ether'}\n                icon={'InfoOutline'}\n              />\n\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Flex, OutlineButton, Button, Icon, Modal, TextButton } from \"rimble-ui\";\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = (event) => {\n    this.props.closeUserRejectedConnectionModal(event);\n    this.props.openConnectionPendingModal(event);\n    this.props.connectAccount();\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'600px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeUserRejectedConnectionModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\"/>\n            </Flex>\n\n            <Heading.h2 my={3}>You can't continue without connecting your account</Heading.h2>\n\n            <Text my={4}>To use Bounties Explorer, you need to confirm the connection request. You can still browse as a guest.</Text>\n            \n            <Flex justifyContent={\"flex-end\"} mt={4}>\n              <OutlineButton onClick={this.props.closeUserRejectedConnectionModal} mr={4}>Browse as guest</OutlineButton>\n              <Button onClick={this.sendMessageAgain}>Send message again</Button>\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Icon, TextButton, Modal, Flex, Box, ToastMessage } from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\"\nimport theme from \"../../theme\";\n\nclass ValidationPendingModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'960px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeValidationPendingModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>Current Network</Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n                \n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>New to Bounties Explorer?</Text>\n                  <Text fontWeight={3}>The blockchain is public</Text>\n                  <Text>It's possible to use your account's address to see all your blockchain activity. Only connect accounts you don't mind being linked to your Bounties Explorer profile.</Text>\n                </Box>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text></Text>\n            </Flex>\n\n            <Flex flexDirection={\"column\"} p={3}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\"/>\n              </Flex>\n              \n              <Heading.h2>Verify your account</Heading.h2>\n\n              <Text mb={4}>To connect securely and prove you have access to this account, sign the message in your MetaMask extension. A signature request should automatically appear. If not, open it using the MetaMask icon in your browser.</Text>\n              \n              <Box bg={\"#f3f2fd\"} borderRadius={2} p={3} mb={4}>\n                <Text>Address: {this.props.account}</Text>\n              </Box>\n\n              <ToastMessage\n                message={'Waiting for connection confirmation...'}\n                secondaryMessage={'This won\\'t cost your any Ether'}\n                icon={'InfoOutline'}\n              />\n\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default ValidationPendingModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Flex, OutlineButton, Button, Icon, Modal, TextButton } from \"rimble-ui\";\n\nclass UserRejectedValidationModal extends React.Component {\n  sendMessageAgain = (event) => {\n    this.props.closeUserRejectedValidationModal(event);\n    this.props.validateAccount();\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'600px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeUserRejectedValidationModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\"/>\n            </Flex>\n            \n            <Heading.h2 my={3}>You can't continue without signing the message</Heading.h2>\n\n            <Text my={4}>To use Bounties Explorer, you need to sign the message to finish connecting securely. You can still browse as a guest.</Text>\n            \n            <Flex justifyContent={\"flex-end\"} mt={4}>\n              <OutlineButton onClick={this.props.closeUserRejectedValidationModal} mr={4}>Browse as guest</OutlineButton>\n              <Button onClick={this.sendMessageAgain}>Send message again</Button>\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default UserRejectedValidationModal;\n","import React from \"react\";\nimport { Card, Heading, Text, Icon, TextButton, Modal, Flex, Box, OutlineButton, Button, PublicAddress, QR } from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\"\nimport theme from \"../../theme\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showQR: false,\n  }\n\n  toggleQRVisible = () => {\n    this.setState({\n      showQR: !this.showQR\n    });\n  };\n\n  RightColumn = () => {\n    return (\n      <Flex flexDirection={\"column\"} p={3}>\n        <Flex justifyContent={\"center\"} my={4}>\n          <Icon name=\"Warning\" color=\"gold\" size=\"40\"/>\n        </Flex>\n        \n        <Heading.h2>Low Funds</Heading.h2>\n  \n        <Text mb={4}>To use Bounties Explorer's block chain features, you'll need to own Ether. Deposit Ether into your account via your MetaMask extension or send Funds from another account.</Text>\n  \n        <PublicAddress address={this.props.account} />\n  \n        <Box my={3}>\n          <Text.span bold fontWeight={3} mr={3}>Got another account on a mobile wallet?</Text.span> \n          <Text.span>Send funds by scanning your QR code with your wallet app.</Text.span>\n        </Box>\n  \n        <Box mb={4}>\n          <OutlineButton onClick={this.toggleQRVisible}>\n            <Flex alignItems={\"center\"}>\n              <Icon name=\"FilterCenterFocus\" mr={2} />\n              Show account QR code\n            </Flex>\n          </OutlineButton>\n        </Box>\n        <Flex justifyContent={\"flex-end\"}>\n          <Box>\n            <Button onClick={this.props.closeModal}>Continue to Bounties Explorer</Button>\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={'960px'}>\n          <TextButton\n            icononly\n            icon={'Close'}\n            color={'moon-gray'}\n            position={'absolute'}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>Current Network</Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n                \n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>New to Ether?</Text>\n                </Box>\n\n                <Text fontWeight={3}>What you'll need Ether for:</Text>\n                <ul>\n                  <li>Submitting a bounty</li>\n                  <li>Paying for a completed bounty</li>\n                  <li>Network fees</li>\n                </ul>\n\n                <Text fontWeight={3}>What are network fees?</Text>\n                <Text>Network fees pay for a person or group to add a record of your action to the blockchain and let the network know. It doesn't go to us.</Text>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text></Text>\n            </Flex>\n            { !this.state.showQR \n              ?\n                this.RightColumn()\n              :\n                <Box>\n                  <QR value={this.props.account} />\n                  <Text>{this.props.account}</Text>\n                </Box>\n            }\n            \n            \n          </Flex>\n        </Card>\n      </Modal>\n    )\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport TransactionConnectionModal from \"./components/TransactionConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport ValidationPendingModal from \"./components/ValidationPendingModal\";\nimport UserRejectedValidationModal from \"./components/UserRejectedValidationModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal \n          closeModal={this.props.modals.methods.closeWrongNetworkModal} \n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen} \n          network={this.props.network}\n        />\n        \n        <ConnectionModal \n          closeConnectionModal={this.props.modals.methods.closeConnectionModal} \n          validateAccount={this.props.validateAccount} \n          isOpen={this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated} \n          currentNetwork={this.props.network.current}\n        />\n\n        <TransactionConnectionModal \n          closeModal={this.props.modals.methods.closeTransactionConnectionModal} \n          validateAccount={this.props.validateAccount} \n          isOpen={this.props.modals.data.transactionConnectionModalIsOpen} \n          currentNetwork={this.props.network.current} \n        />\n        \n        <ConnectionPendingModal \n          closeConnectionPendingModal={this.props.modals.methods.closeConnectionPendingModal} \n          isOpen={ this.props.modals.data.accountConnectionPending } \n          currentNetwork={this.props.network.current} \n        />\n        <UserRejectedConnectionModal \n          closeUserRejectedConnectionModal={this.props.modals.methods.closeUserRejectedConnectionModal} \n          isOpen={this.props.modals.data.userRejectedConnect} \n          connectAccount={this.props.initAccount} \n          openConnectionPendingModal={this.props.modals.methods.openConnectionPendingModal} \n        />\n        \n        <ValidationPendingModal \n          closeValidationPendingModal={this.props.modals.methods.closeValidationPendingModal} \n          isOpen={this.props.modals.data.accountValidationPending} \n          currentNetwork={this.props.network.current} \n          account={this.props.account}\n        />\n        <UserRejectedValidationModal \n          closeUserRejectedValidationModal={this.props.modals.methods.closeUserRejectedValidationModal} \n          isOpen={ this.props.modals.data.userRejectedValidation } \n          validateAccount={this.props.validateAccount} \n        />\n\n        <LowFundsModal \n          closeModal={this.props.modals.methods.closeLowFundsModal} \n          isOpen={ this.props.modals.data.lowFundsModalIsOpen} \n          currentNetwork={this.props.network.current} \n          account={ this.props.account } \n        />\n\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from 'react';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: 'fixed',\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: '100%',\n      backgroundColor: 'white'\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>Looks like you're on the wrong network</Text>\n            <Text>You should be on the {this.props.network.required.name} Ethereum network. You are currently connected to the <Text.span style={{textTransform: \"capitalize\"}}>{this.props.network.current.name}</Text.span> Network - switch in your MetaMask extension.</Text>\n          </Flex>\n        </Flex>\n      </Box>\n    )\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  componentWillReceiveProps() {\n    this.setState({\n      \n    });\n  }\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner \n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\n\nclass TransactionUtil extends React.Component {\n  render() {\n    return (\n      <div>\n      </div>\n    );\n  }\n}\n\nexport default TransactionUtil;\n","import React from \"react\";\nimport Web3 from \"web3\"; // uses latest 1.x.x version\nimport bowser from \"bowser\";\n\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport NetworkUtil from \"./NetworkUtil\";\nimport TransactionUtil from \"./TransactionUtil\";\n\nconst RimbleTransactionContext = React.createContext({\n  contract: {},\n  account: {},\n  accountBalance: {},\n  accountBalanceLow: {},\n  web3: {},\n  transactions: {},\n  checkPreflight: () => {},\n  initWeb3: () => {},\n  initContract: () => {},\n  initAccount: () => {},\n  rejectAccountConnect: () => {},\n  accountValidated: {},\n  accountValidationPending: {},\n  rejectValidation: () => {},\n  validateAccount: () => {},\n  connectAndValidateAccount: () => {}, \n  network: {\n    required: {},\n    current: {},\n    isCorrectNetwork: null,\n    checkNetwork: () => {},\n  },\n  modals: {\n    data: {\n      noWeb3BrowserModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      connectionModalIsOpen: {},\n      accountConnectionPending: {},\n      userRejectedConnect: {},\n      accountValidationPending: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n      lowFundsModalIsOpen: {},\n    },\n    methods: {\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeValidationPendingModal: () => {},\n      openValidationPendingModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeTransactionConnectionModal: () => {},\n      openTransactionConnectionModal: () => {},\n      closeLowFundsModal: () => {},\n      openLowFundsModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {\n      \n    },\n    methods: {\n      \n    }\n  }\n});\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n  \n  // Performs \n  checkPreflight = () => {\n    this.checkModernBrowser();\n    this.initWeb3();\n\n    // Prevent MetaMask from reloading page on network change\n    // TODO: Throwing too many system dialogs, possible to resolve?\n    // window.onbeforeunload = function() {\n    //   console.log(\"Suppresing page reload\");\n    //   return \"Prevent reload\"\n    // }\n    \n  }\n\n  web3ActionPreflight = () => {\n    // Is this browser compatible?\n    if (!this.state.validBrowser) {  \n      console.log(\"Invalid browser, cancelling transaction.\");\n      let modals = { ...this.state.modals };\n      modals.data.noWeb3BrowserModalIsOpen = true;\n      this.setState({ modals });\n      return false;\n    }\n\n    // Is there a web3 provider?\n    if (!this.state.web3) {  \n      console.log(\"No browser wallet, cancelling transaction.\");\n      let modals = { ...this.state.modals };\n      modals.data.noWalletModalIsOpen = true;\n      this.setState({ modals });\n      return false;\n    }\n\n    return true;\n  }\n\n  // Validates user's browser is web3 capable\n  checkModernBrowser = async () => {\n    // User Agent\n    const browser = bowser.getParser(window.navigator.userAgent);\n    const userAgent = browser.parse().parsedResult;\n\n    const validBrowser = browser.satisfies({\n      desktop: {\n        chrome: '>49',\n        firefox: '>52',\n        opera: '>36'\n      }\n    }) ? true : false;\n\n    this.setState({ \n      userAgent,\n      validBrowser\n    });\n\n    return validBrowser;\n  }\n\n  // Initialize a web3 provider\n  // TODO: Make async work\n  initWeb3 = async () => {\n    return new Promise ((resolve, reject) => {\n      let web3 = {};\n\n      // Check for modern web3 provider\n      if (window.ethereum) {\n        console.log(\"Using modern web3 provider.\");\n        web3 = new Web3(window.ethereum);\n      }\n      // Legacy dapp browsers, public wallet address always exposed\n      else if (window.web3) {\n        console.log(\"Legacy web3 provider. Try updating.\");\n        web3 = new Web3(window.web3.currentProvider);\n      }\n      // Non-dapp browsers...\n      else {\n        console.log(\n          \"Non-Ethereum browser detected. Using Infura fallback.\"\n        );\n\n        const web3Provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io:443');\n        this.setState({ web3Provider });\n        web3 = false;\n      }\n\n      this.setState({ web3 }, () => {\n        // After setting the web3 provider, check network\n        this.checkNetwork();\n      });\n    }, error => {\n      console.log(\"Error initializing web3\");\n    });\n  };\n\n  initContract = async (address, abi) => {\n    console.log(\"creating contract\");\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = await new this.state.web3.eth.Contract(abi, address);\n      this.setState({ contract });\n    } catch (error) {\n      console.log(\"Could not create contract.\");\n      window.toastProvider.addMessage(\"Contract creation failed.\", {\n        variant: \"failure\"\n      });\n    }\n  };\n\n  initAccount = async () => {\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    modals.data.accountConnectionPending = true;\n    this.setState({ modals });\n\n    try {\n      // Request account access if needed\n      await window.ethereum.enable().then(wallets => {\n        const account = wallets[0];\n        modals.data.accountConnectionPending = false;\n        this.setState(({ account, modals }));\n        \n        console.log(\"wallet address:\", this.state.account);\n        \n        // After account is complete, get the balance\n        this.getAccountBalance();\n        \n        // Watch for account change\n        this.pollAccountUpdates();\n      });\n    } catch (error) {\n      // User denied account access...\n      console.log(\"User cancelled connect request. Error:\", error);\n\n      // Reject Connect\n      this.rejectAccountConnect(error);\n    }\n  };\n\n  rejectAccountConnect = (error) => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  };\n\n  getAccountBalance = async () => {\n    try {\n      await this.state.web3.eth.getBalance(this.state.account).then(accountBalance => {\n        accountBalance = this.state.web3.utils.fromWei(accountBalance, \"ether\");\n        accountBalance = parseFloat(accountBalance);\n        this.setState({ accountBalance })\n        console.log(\"account balance: \", accountBalance);\n\n        this.determineAccountLowBalance();\n      });\n    } catch (error) {\n      console.log(\"Failed to get account balance.\");\n    }\n  };\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum = typeof(this.props.config) !== \"undefined\" && typeof (this.props.config.accountBalanceMinimum) !== \"undefined\"\n      ?\n        this.props.config.accountBalanceMinimum\n      : \n        1\n    // Determine if the account balance is low\n    const accountBalanceLow = this.state.accountBalance < accountBalanceMinimum\n      ? true : false;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  validateAccount = async () => {\n    console.log(\"validateAccount\");\n    // Get account wallet if none exist\n    if (!this.state.account) {\n      await this.initAccount();\n\n      if (!this.state.account) {\n        return;\n      }\n    }\n    console.log(\"setting state to update UI\");\n    \n    // Show blocking modal\n    this.openValidationPendingModal();\n\n    console.log(\"Requesting web3 personal sign\");\n    return window.web3.personal.sign(\n      window.web3.fromUtf8(`Hi there from Rimble! To connect, sign this message to prove you have access to this account. This won’t cost you any Ether. To stop hackers pretending to be you, here’s a unique message ID they won't be able to guess: 012345`),\n      this.state.account,\n      (error, signature) => {\n        if (error) {\n          // User rejected account validation.\n          console.log(\"Wallet account not validated. Error:\", error);\n          \n          // Reject the validation\n          this.rejectValidation(error);\n        } else {\n          const successMessage = \"Wallet \" + this.shortenHash(this.state.account) + \" connected\";\n          console.log(successMessage, signature);\n          window.toastProvider.addMessage(successMessage, {\n            variant: \"success\"\n          });\n\n          this.closeValidationPendingModal();\n          this.setState({ \n            accountValidated: true,\n          });\n        }\n      }\n    )\n  }\n\n  rejectValidation = (error) => {\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedValidation = true;\n    modals.data.accountValidated = false;\n    modals.data.accountValidationPending = false;\n    this.setState({ modals });\n  }\n\n  connectAndValidateAccount = async () => {\n    if (!this.web3ActionPreflight()) {\n      return;\n    }\n\n    // Check for account\n    if (!this.state.account || !this.state.accountValidated) {\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n\n    // await this.initAccount();\n    // await this.validateAccount();\n  }\n\n  getRequiredNetwork = () => {\n    const networkId = typeof(this.props.config) !== \"undefined\" && typeof (this.props.config.requiredNetwork) !== \"undefined\"\n      ?\n        this.props.config.requiredNetwork\n      : \n        1\n    let networkName = \"\";\n    switch (networkId) {\n      case 1:\n        networkName = \"Main\";\n        break;\n      case 3:\n        networkName = \"Ropsten\";\n        break;\n      case 4:\n        networkName = \"Rinkeby\";\n        break;\n      case 42:\n        networkName = \"Kovan\";\n        break;\n      default:\n        networkName = \"unknown\";\n    }\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    }\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network })\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      console.log(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      console.log(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n    await this.getNetworkId();\n    await this.getNetworkName();\n\n    let network = { ...this.state.network }\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id\n      ? true\n      : false;\n    \n    this.setState({ network });\n  }\n\n  pollAccountUpdates = () => {\n    let account = this.state.account;\n    let requiresUpdate = false;\n    let accountInterval = setInterval(() => {\n      if (this.state.modals.data.accountValidationPending || this.state.modals.data.accountConnectionPending) {\n        return;\n      }\n      window.ethereum.enable().then(wallets => {\n        const updatedAccount = wallets[0];\n        \n        if (updatedAccount !== account) {\n          requiresUpdate = true;\n        }\n\n        if (requiresUpdate) {\n          clearInterval(accountInterval);\n          let modals = { ...this.state.modals };\n          modals.data.userRejectedConnect = null;\n          \n          this.setState({ \n            modals: modals,\n            account: '',\n            accountValidated: null,\n          }, () => {\n            this.initAccount()\n          });\n        }\n      });\n    }, 1000);\n  }\n\n  contractMethodSendWrapper = contractMethod => {\n    // Is it web3 capable?\n    if (!this.web3ActionPreflight()) {\n      return;\n    }\n\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account || !this.state.accountValidated) {\n      this.openTransactionConnectionModal();\n      return;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      return;\n    }\n    \n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction();\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.method = contractMethod;\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { contract, account } = this.state;\n\n    try {\n      contract.methods[contractMethod]()\n        .send({ from: account })\n        .on(\"transactionHash\", hash => {\n          // Submitted to block and received transaction hash\n          // Set properties on the current transaction\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"confirmation\", (confirmationNumber, receipt) => {\n          // Update confirmation count on each subsequent confirmation that's received\n          transaction.confirmationCount += 1;\n\n          // How many confirmations should be received before informing the user\n          const confidenceThreshold = 3;\n\n          if (transaction.confirmationCount === 1) {\n            // Initial confirmation receipt\n            transaction.status = \"confirmed\";\n          } else if (transaction.confirmationCount < confidenceThreshold) {\n            // Not enough confirmations to match threshold\n          } else if (transaction.confirmationCount === confidenceThreshold) {\n            // Confirmations match threshold\n            // Check the status from result since we are confident in the result\n            if (receipt.status) {\n              transaction.status = \"success\";\n            } else if (!receipt.status) {\n              transaction.status = \"error\";\n            }\n          } else if (transaction.confirmationCount > confidenceThreshold) {\n            // Confidence threshold met\n          }\n          // Update transaction with receipt details\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"receipt\", receipt => {\n          // Received receipt, met total number of confirmations\n          transaction.recentEvent = \"receipt\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"error\", error => {\n          // Errored out\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n          // TODO: should this be a custom error? What is the error here?\n          // TODO: determine how to handle error messages globally\n          window.toastProvider.addMessage(\"Value change failed\", {\n            secondaryMessage: \"Could not change value.\",\n            actionHref: \"\",\n            actionText: \"\",\n            variant: \"failure\"\n          });\n        });\n    } catch (error) {\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Value change failed\", {\n        secondaryMessage: \"Could not change value on smart contract\",\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\"\n      });\n    }\n  };\n\n  // Create tx\n  createTransaction = () => {\n    let transaction = {};\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n\n    return transaction;\n  };\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  };\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n  };\n\n\n  // UTILITY\n  shortenHash = (hash) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n    \n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    console.log(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n    \n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n    \n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n    \n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n    \n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  closeValidationPendingModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n    \n    let modals = { ...this.state.modals };\n    modals.data.accountValidationPending = false;\n    modals.data.connectionModalIsOpen = false;\n    modals.data.transactionConnectionModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openValidationPendingModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.accountValidationPending = true;\n    modals.data.userRejectedValidation = false;\n    this.setState({ modals });\n  }\n\n  closeUserRejectedValidationModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedValidation = false;\n    modals.data.connectionModalIsOpen = false;\n    modals.data.transactionConnectionModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n  \n  openNoWalletModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n  \n  openNoWalletModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n  \n  openWrongNetworkModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeTransactionConnectionModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionConnectionModalIsOpen = false;\n    this.setState({ modals });\n  }\n  \n  openTransactionConnectionModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionConnectionModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n  \n  openLowFundsModal = (e) => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n  \n\n\n  state = {\n    contract: {},\n    account: null,\n    accountBalance: null,\n    accountBalanceLow: null,\n    web3: null,\n    transactions: {},\n    checkPreflight: this.checkPreflight,\n    initWeb3: this.initWeb3,\n    initContract: this.initContract,\n    initAccount: this.initAccount,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    rejectAccountConnect: this.rejectAccountConnect,\n    accountValidated: null,\n    accountValidationPending: null,\n    rejectValidation: this.rejectValidation,\n    validateAccount: this.validateAccount,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    network: {\n      required: {},\n      current: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork,\n    },\n    modals: {\n      data: {\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        connectionModalIsOpen: null,\n        accountConnectionPending: null,\n        userRejectedConnection: null,\n        accountValidationPending: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        transactionConnectionModalIsOpen: null,\n        lowFundsModalIsOpen: null,\n      },\n      methods: {\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n        closeValidationPendingModal: this.closeValidationPendingModal,\n        openValidationPendingModal: this.openValidationPendingModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeTransactionConnectionModal: this.closeTransactionConnectionModal,\n        openTransactionConnectionModal: this.openTransactionConnectionModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openLowFundsModal: this.openLowFundsModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {\n        \n      },\n      methods: {\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.checkPreflight();\n  }\n\n  render() {\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil \n          initAccount={this.state.initAccount} \n          account={this.state.account} \n          validateAccount={this.state.validateAccount} \n          accountConnectionPending={this.state.accountConnectionPending} \n          accountValidationPending={this.state.accountValidationPending} \n          accountValidated={this.state.accountValidated} \n          network={this.state.network} \n          modals={ this.state.modals } \n        />\n        <NetworkUtil\n          network={this.state.network}\n          web3={this.state.web3}\n        />\n        <TransactionUtil\n          transaction={ this.state.transaction }\n        />\n      </div>\n      \n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = (hash) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return (\n      <Text.span>{shortHash}</Text.span>\n    )\n  }\n}\n\nexport default ShortHash;\n","import React from \"react\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ShortHash from \"./ShortHash\";\n\nclass AccountOverview extends React.Component {\n  trimEth = (eth) => {\n    eth = parseFloat(eth);\n    eth = eth * 10000;\n    eth = Math.round(eth);\n    eth = eth / 10000;\n    eth = eth.toFixed(4);\n    \n    return eth;\n  }\n\n  render() {\n    const roundedBalance = this.trimEth(this.props.accountBalance)\n    return (\n      <Flex alignItems={\"flex-start\"} flexDirection={\"column\"} my={2} mx={4}>\n        <Text fontSize={2}>Connected to <ShortHash hash={this.props.account} /></Text>\n        <Text fontSize={1} color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>Balance: {roundedBalance} ETH</Text>\n      </Flex>\n    )\n  }\n}\n\nexport default AccountOverview;\n","import React from \"react\";\nimport { Box, Flex, Button, Heading } from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\nimport AccountOverview from \"../utilities/components/AccountOverview\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Box>\n        <Flex alignItems={\"center\"} justifyContent=\"flex-end\" bg={\"white\"}>\n          <Box mr={4}>\n            <NetworkOverview network={this.props.network.current} />\n          </Box>\n          \n          { \n            this.props.account && this.props.accountValidated\n            ?\n              <AccountOverview \n                account={this.props.account}\n                accountBalanceLow={this.props.accountBalanceLow}\n                accountBalance={this.props.accountBalance}\n              />\n            :\n              <Button\n                m={3}\n                onClick={this.props.connectAndValidateAccount}\n                size=\"small\"\n                backgroundColor={\"white\"}\n              >\n                Connect\n              </Button>\n          }\n\n          \n        </Flex>\n        <Box bg=\"primary\" p={3} justifyContent=\"center\" flexDirection=\"column\">\n          <Box width=\"400px\" mx=\"auto\">\n            <Heading.h2 color={\"white\"}>Rimble App Demo</Heading.h2>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","const TransactionToastMessages = {\n    started: {\n      message: \"Change submitted\",\n      secondaryMessage: \"Confirm in MetaMask\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing change...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your change is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\"\n    },\n    success: {\n      message: \"Smart contract value changed\",\n      variant: \"success\"\n    },\n    error: {\n      message: \"Value change failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\"\n    }\n  };\n  \n  export default TransactionToastMessages;\n  ","import React from \"react\";\nimport TransactionToastMessages from \"./content/TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      prevTx = this.getTransactionFromCollection(\n        currentTx.created,\n        prevCollection\n      );\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx !== null && typeof tx !== \"undefined\") {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        break;\n    }\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import React from \"react\";\nimport { Flex, Box, Text, Button, OutlineButton } from \"rimble-ui\";\n\n// Address of the deployed smart contract (from etherscan)\nconst contractAddress = \"0x0f69f0ac4b92bf0d101b5747eed3fa6b653a36f8\";\n\n// Copied from remix ide\nconst contractAbi = [\n  {\n    constant: false,\n    inputs: [],\n    name: \"decrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"incrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"reset\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getCounter\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"int256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\n\nclass SmartContractControls extends React.Component {\n  state = {\n    value: 0,\n    needsUpdate: false\n  };\n\n  // gets the number stored in smart contract storage\n  getNumber = ({ ...props }) => {\n    const { contract } = this.props;\n    try {\n      contract.methods\n        .getCounter()\n        .call()\n        .then(value => {\n          value = Number(value.toString());\n          this.setState({ value, needsUpdate: false });\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({ error });\n        });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    Object.keys(this.props.transactions).map(key => {\n      let tx = this.props.transactions[key];\n      if (tx.status === \"success\" && this.state.needsUpdate) {\n        console.log(\"Getting updated number.\");\n        this.getNumber();\n        return false;\n      } else {\n        return false;\n      }\n    });\n  };\n\n  resetCounter = () => {\n    this.props.contractMethodSendWrapper(\"reset\");\n  };\n\n  incrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"incrementCounter\");\n    this.setState({\n      needsUpdate: true\n    });\n  };\n\n  decrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"decrementCounter\");\n    this.setState({\n      needsUpdate: true\n    });\n  };\n\n  componentDidMount() {\n    // Init the contract after the web3 provider has been determined\n    //this.props.initContract(contractAddress, contractAbi).then(() => {\n      // Can finally interact with contract\n      //this.getNumber();\n    //});\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <Box>\n        <Flex\n          px={0}\n          pb={4}\n          borderBottom={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n          alignItems=\"end\"\n        >\n          <Text mb={2} fontSize={3}>\n            Smart contract value\n          </Text>\n\n          <OutlineButton\n            size={\"small\"}\n            onClick={this.resetCounter}\n            disabled={!this.props.account}\n          >\n            Reset\n          </OutlineButton>\n        </Flex>\n\n        <Box py={4}>\n          <Text fontSize={6} textAlign={\"center\"}>\n            {this.state.value}\n          </Text>\n        </Box>\n\n        <Flex\n          px={0}\n          pt={4}\n          borderTop={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n        >\n          <Button size={\"medium\"} mr={4} onClick={this.incrementCounter}>\n            Increase value\n          </Button>\n\n          <Button size={\"medium\"} onClick={this.decrementCounter}>\n            Decrease value\n          </Button>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default SmartContractControls;\n","import React from \"react\";\nimport { Card, Heading, Box, Flex, Text } from \"rimble-ui\";\n\nclass TransactionsCard extends React.Component {\n  render() {\n    return (\n      <Card width={\"400px\"} mx={\"auto\"} px={4}>\n        <Heading.h2 fontSize={3} textAlign={\"center\"} px={4} mb={5}>\n          Transactions\n        </Heading.h2>\n        <Box>\n          {Object.keys(this.props.transactions).length > 0 ? (\n            <Flex>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                txHash\n              </Text>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                Status\n              </Text>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                Confirmations\n              </Text>\n            </Flex>\n          ) : null}\n\n          {Object.keys(this.props.transactions).length < 1 ? (\n            <Text textAlign={\"center\"}>No recent transactions</Text>\n          ) : (\n            Object.keys(this.props.transactions).map((keyName, keyIndex) => {\n              let txHash = \"\";\n              if (this.props.transactions[keyName].transactionHash) {\n                txHash = this.props.transactions[\n                  keyName\n                ].transactionHash.toString();\n                const txStart = txHash.substr(0, 7);\n                const txEnd = txHash.substr(txHash.length - 4);\n                txHash = txStart + \"...\" + txEnd;\n              }\n\n              return (\n                <Flex key={keyIndex}>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {txHash}\n                  </Text>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {this.props.transactions[keyName].status}\n                  </Text>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {this.props.transactions[keyName].confirmationCount}\n                  </Text>\n                </Flex>\n              );\n            })\n          )}\n        </Box>\n      </Card>\n    );\n  }\n}\n\nexport default TransactionsCard;\n","import React from \"react\";\nimport { Card } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\n\nimport SmartContractControls from \"./SmartContractControls\";\nimport TransactionsCard from \"./TransactionsCard\";\n\nclass PrimaryCard extends React.Component {\n  render() {\n    return (\n      <RimbleWeb3.Consumer>\n        {({\n          contract,\n          account,\n          transactions,\n          initContract,\n          initAccount,\n          contractMethodSendWrapper\n        }) => (\n          <div>\n            <Card width={\"400px\"} mx={\"auto\"} px={4}>\n              <SmartContractControls\n                contract={contract}\n                account={account}\n                transactions={transactions}\n                initContract={initContract}\n                contractMethodSendWrapper={contractMethodSendWrapper}\n              />\n            </Card>\n\n            <TransactionsCard transactions={transactions} />\n            <TransactionToastUtil transactions={transactions} />\n          </div>\n        )}\n      </RimbleWeb3.Consumer>\n    );\n  }\n}\n\nexport default PrimaryCard;\n","import React from \"react\";\nimport { Box, Heading, Text, Link, Flex, OutlineButton } from \"rimble-ui\";\n\nclass InstructionsCard extends React.Component {\n  render() {\n    return (\n      <Box width={\"400px\"} mx=\"auto\" mt={4}>\n        <Heading.h3>Instructions:</Heading.h3>\n        <ol>\n          <li>\n            <Text p={1}>Make sure MetaMask is working in your browser</Text>\n          </li>\n          <li>\n            <Text p={1}>Set the network to Rinkeby Test Network</Text>\n          </li>\n          <li>\n            <Text p={1}>You'll need a little bit of ETH for gas fees</Text>\n          </li>\n        </ol>\n        <Flex borderTop={1} borderColor={\"#ccc\"} py={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n          <Link\n            href=\"https://github.com/ConsenSys/rimble-app-demo\"\n            target=\"_blank\"\n          >\n            View Code GitHub\n          </Link>\n\n          { this.props.route === \"default\"\n            ? \n              <OutlineButton size=\"small\" onClick={() => this.props.showRoute('onboarding')}>Onboarding Debugger</OutlineButton>\n            :\n              <OutlineButton size=\"small\" onClick={() => this.props.showRoute('default')}>Default View</OutlineButton>\n          }\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default InstructionsCard;\n","import React from \"react\";\nimport { Card, Heading, Text, Icon, Flex, ToastMessage, OutlineButton, Box, Button, Link } from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\nimport WrongNetworkModal from \"../utilities/components/WrongNetworkModal\";\nimport ConnectionModal from \"../utilities/components/ConnectionModal\";\nimport ConnectionPendingModal from \"../utilities/components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"../utilities/components/UserRejectedConnectionModal\";\nimport TransactionConnectionModal from \"../utilities/components/TransactionConnectionModal\";\nimport ValidationPendingModal from \"../utilities/components/ValidationPendingModal\";\nimport UserRejectedValidationModal from \"../utilities/components/UserRejectedValidationModal\";\nimport LowFundsModal from \"../utilities/components/LowFundsModal\";\n\nclass MissingWeb3Provider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wrongNetworkModalIsOpen: false,\n      connectionModalIsOpen: false,\n      userRejectedConnect: false,\n      transactionConnectionModalIsOpen: false,\n      lowFundsModalIsOpen: false,\n    }\n  }\n\n  closeConnectionModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      connectionModalIsOpen: false\n    }));\n  }\n\n  openConnectionModal = (e) => {\n    e.preventDefault();\n    this.setState((state, props) => ({\n      connectionModalIsOpen: true\n    }));\n  }\n  \n  closeConnectionPendingModal = (e) => {\n    e.preventDefault();\n    \n    this.props.rejectAccountConnect();\n  }\n\n  openConnectionPendingModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      accountConnectionPending: true\n    }));\n  }\n\n  closeUserRejectedConnectionModal = (e) => {\n    e.preventDefault();\n    let modals = { ...this.props.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = (e) => {\n    e.preventDefault();\n    let modals = { ...this.props.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeTransactionConnectionModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      transactionConnectionModalIsOpen: false\n    }));\n  }\n\n  openTransactionConnectionModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      transactionConnectionModalIsOpen: true\n    }));\n  }\n\n  closeAccountValidationPendingModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      accountValidationPending: false,\n      userRejectedValidation: true,\n    }));\n  }\n\n  openAccountValidationPendingModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      accountValidationPending: true\n    }));\n  }\n\n  closeUserRejectedValidationModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      userRejectedValidation: false\n    }));\n  }\n\n  openUserRejectedValidationModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      userRejectedValidation: true\n    }));\n  }\n\n  closeLowFundsModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      lowFundsModalIsOpen: false\n    }));\n  }\n\n  openLowFundsModal = (e) => {\n    e.preventDefault()\n    this.setState((state, props) => ({\n      lowFundsModalIsOpen: true\n    }));\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({ \n      accountConnectionPending: props.modals.data.accountConnectionPending,\n      closeConnectionPendingModal: props.modals.methods.closeConnectionPendingModal,\n      accountValidationPending: props.modals.data.accountValidationPending,\n      closeValidationPendingModal: props.modals.data.closeValidationPendingModal,\n      userRejectedValidation: props.modals.data.userRejectedValidation,\n    });\n  }\n\n\n  render() {\n    return(\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n        \n        <Box>\n          <Flex alignItems={\"center\"}>\n            { this.props.validBrowser \n              ? \n                <Icon name='Check' color={\"green\"} mr={2} /> \n              :\n                <Icon name='Close' color={\"red\"} mr={2} />\n            }\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n\n          { !this.props.validBrowser \n            ? \n              <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name='Info' mr={2} color=\"#999\" />\n                  <Text color=\"#999\">You current browser is not web3 capable.</Text>\n                </Flex>\n                \n                <Link href=\"https://www.google.com/chrome/browser/\" target=\"_blank\">\n                  <OutlineButton size=\"small\">Download Chrome</OutlineButton>\n                </Link>\n              </Flex>\n            : null \n          }\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            { this.props.web3 \n              ? \n                <Icon name='Check' color={\"green\"} mr={2} /> \n              :\n                <Icon name='Close' color={\"red\"} mr={2} />\n            }\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          { !this.props.web3 && this.props.validBrowser\n            ? \n              <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name='Info' mr={2} color=\"#999\" />\n                  <Text color=\"#999\">You do not have a wallet.</Text>\n                </Flex>\n                \n                <Link href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\" target=\"_blank\">\n                  <OutlineButton size=\"small\">Get MetaMask Extension</OutlineButton>\n                </Link>\n              </Flex>\n            : null \n          }\n        </Box>\n\n        { this.props.web3\n          ? \n            <Flex \n              py={3}\n              my={3}\n              borderTop={1}\n              borderBottom={1}\n              borderColor={\"#E8E8E8\"}\n              textAlign={\"center\"}\n              justifyContent={\"space-around\"}\n              alignItems={\"center\"}\n            >\n              <Button \n                size=\"small\" \n                onClick={this.props.connectAndValidateAccount}\n                disabled={!this.props.web3}\n              >Connect and verify</Button>\n              <Text>- or -</Text>\n              <Button size=\"small\" disabled>Initiate On-Chain Action</Button>\n            </Flex>\n          :\n            null\n        }\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            { this.props.network.isCorrectNetwork ? \n              <Icon name='Check' color={\"green\"} mr={2} /> \n            :\n              <Icon name='Close' color={\"red\"} mr={2} />\n            }\n            <Text>Correct Network</Text>\n          </Flex>\n\n          { this.props.web3 && !this.props.network.isCorrectNetwork\n            ? \n              <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name='Info' mr={2} color=\"#999\" />\n                  <Box>\n                    <Flex alignItems={\"center\"}>\n                      <Text mr={2} color=\"#999\" style={{ textTransform: \"capitalize\" }}>Current network:</Text>\n                      <NetworkOverview network={this.props.network.current}/>\n                    </Flex>\n                    <Flex alignItems={\"center\"}>\n                      <Text mr={2} color=\"#999\" style={{ textTransform: \"capitalize\" }}>Required network:</Text>\n                      <NetworkOverview network={this.props.network.required}/>\n                    </Flex>\n                  </Box>\n                </Flex>\n                \n                <OutlineButton size=\"small\" onClick={this.props.checkNetwork}>Check Network</OutlineButton>\n              </Flex>\n            : \n              null\n          }\n          { \n            this.props.web3 && this.props.isCorrectNetwork\n            ?\n              <Flex ml={4} alignItems={\"center\"} >\n                <NetworkOverview network={this.props.network.current}/>\n              </Flex>\n            :\n              null\n          }\n        </Box>\n        \n        <Box>\n          <Flex alignItems={\"center\"}>\n            { this.props.account && this.props.accountValidated\n              ? \n                <Icon name='Check' color={\"green\"} mr={2} /> \n              :\n                <Icon name='Close' color={\"red\"} mr={2} />\n            }\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          { !this.props.account && this.props.web3 && !this.props.userRejectedConnect\n            ? \n              <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name='Info' mr={2} color=\"#999\" />\n                  <Text color=\"#999\">Not connected to this dApp.</Text>\n                </Flex>\n                \n                <OutlineButton size=\"small\" onClick={this.props.initAccount}>Connect</OutlineButton>\n              </Flex>\n            : \n              null\n          }\n          {\n            this.props.account && this.props.web3\n            ?\n              <Flex ml={4} alignItems={\"center\"}>\n                <Icon name='Check' color={\"green\"} mr={2} /> \n                <Box>\n                  <Text color=\"#999\">Connected wallet {this.props.account}</Text>                \n                  <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>Account balance {this.props.accountBalance}</Text>\n                </Box>\n              </Flex>\n            :\n              null\n          }\n\n          { this.props.userRejectedConnect \n            ? \n              <Flex ml={4} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name=\"Error\" mr={2} color=\"red\" />\n                  <Text color=\"red\">User rejected Connect request</Text>\n                </Flex>\n                \n                <OutlineButton size=\"small\" onClick={this.props.initAccount}>Connect</OutlineButton>\n              </Flex>\n            : \n              null\n          }\n\n          { (this.props.accountValidated === null || this.props.accountValidated === false) && this.props.web3\n            ? \n              <Flex ml={4} my={1} alignItems={\"center\"} justifyContent={\"space-between\"}>\n                <Flex alignItems={\"center\"}>\n                  <Icon name='Info' mr={2} color=\"#999\" />\n                  <Text color=\"#999\">Account not verified</Text>\n                </Flex>\n                \n                <OutlineButton size=\"small\" onClick={this.props.validateAccount}>Validate</OutlineButton>\n              </Flex>\n            : \n              null\n          }\n\n          { this.props.accountValidated === false\n            ? \n            <Flex ml={4} my={1} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name='Error' mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n              \n              <OutlineButton size=\"small\" onClick={this.props.validateAccount}>Validate</OutlineButton>\n            </Flex>\n            : \n              null\n          }\n\n          { this.props.userRejectedValidation === false\n            ? \n              <Flex ml={4}>\n              <Icon name='Error' mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n            : \n              null\n          }\n        </Box>\n\n        <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n          <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n          <Button size=\"small\" onClick={this.props.modals.methods.openWrongNetworkModal} mr={2} mb={2}>Blocking Wrong Network</Button>\n          \n          <Button size=\"small\" onClick={this.openConnectionModal} mr={2} mb={2}>Connection</Button>\n          <Button size=\"small\" onClick={this.openConnectionPendingModal} mr={2} mb={2}>Connection Pending</Button>\n          <Button size=\"small\" onClick={this.openUserRejectedConnectionModal} mr={2} mb={2}>Connection Rejected</Button>\n\n          <Button size=\"small\" onClick={this.props.modals.methods.openTransactionConnectionModal} mr={2} mb={2}>Transaction Connection</Button>\n          \n          <Button size=\"small\" onClick={this.openAccountValidationPendingModal} mr={2} mb={2}>Validation Pending</Button>\n          <Button size=\"small\" onClick={this.openUserRejectedValidationModal} mr={2} mb={2}>User Rejected Validation</Button>\n          <Button size=\"small\" onClick={(event) => { this.props.modals.methods.openLowFundsModal(event); }} mr={2} mb={2}>Low Funds</Button>\n          \n          <Button size=\"small\" onClick={this.props.modals.methods.openNoWeb3BrowserModal} mr={2} mb={2}>Not Web3 Browser</Button>\n          <Button size=\"small\" onClick={this.props.modals.methods.openNoWalletModal} mr={2} mb={2}>No Wallet</Button>\n        </Box>\n\n        {/* Modals */}\n        <WrongNetworkModal \n          closeModal={this.props.modals.methods.closeWrongNetworkModal} \n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen} \n          network={this.props.network}\n        />\n        <ConnectionModal \n          closeConnectionModal={this.closeConnectionModal} \n          validateAccount={this.props.validateAccount} \n          isOpen={this.state.connectionModalIsOpen && !this.props.accountValidated} \n          currentNetwork={this.props.network.current} \n        />\n        <ConnectionPendingModal \n          closeConnectionPendingModal={this.state.closeConnectionPendingModal} \n          isOpen={ this.state.accountConnectionPending } \n          currentNetwork={this.props.network.current} \n        />\n        <UserRejectedConnectionModal \n          closeUserRejectedConnectionModal={this.closeUserRejectedConnectionModal} \n          isOpen={this.props.modals.data.userRejectedConnect} \n          connectAccount={this.props.initAccount} \n          openConnectionPendingModal={this.openConnectionPendingModal} \n        />\n        \n\n        <TransactionConnectionModal \n          closeModal={this.props.modals.methods.closeTransactionConnectionModal} \n          validateAccount={this.props.validateAccount} \n          isOpen={this.props.modals.data.transactionConnectionModalIsOpen} \n          currentNetwork={this.props.network.current} \n        />\n        \n        <ValidationPendingModal \n          closeAccountValidationPendingModal={this.closeAccountValidationPendingModal} \n          isOpen={this.state.accountValidationPending} \n          currentNetwork={this.props.network.current} \n        />\n        <UserRejectedValidationModal \n          closeUserRejectedValidationModal={this.closeUserRejectedValidationModal} \n          isOpen={ this.state.userRejectedValidation } \n          validateAccount={this.props.validateAccount} \n        />\n\n        <LowFundsModal \n          closeModal={this.props.modals.methods.closeLowFundsModal} \n          isOpen={ this.props.modals.data.lowFundsModalIsOpen} \n          currentNetwork={this.props.network.current} \n          account={ this.props.account } \n        />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    )\n  }\n}\n\nexport default MissingWeb3Provider\n","import React, { Component } from \"react\";\nimport { ThemeProvider, Box, Text, Flex } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"./utilities/RimbleWeb3\";\n\nimport Header from \"./components/Header\";\nimport PrimaryCard from \"./components/PrimaryCard\";\nimport InstructionsCard from \"./components/InstructionsCard\";\nimport MissingWeb3Provider from \"./components/MissingWeb3Provider\";\n\nimport theme from \"./theme\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body, html {\n    margin: 0;\n    padding: 0;\n    background-color: #efefef;\n  }\n`;\n\nclass App extends Component {\n  state = {\n    route: 'default'\n  }\n\n  // Optional parameters to pass into RimbleWeb3\n  config = {\n    accountBalanceMinimum: 100,\n    requiredNetwork: 4,\n  }\n\n  showRoute = (route) => {\n    this.setState({\n      route\n    });\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme} className=\"App\">\n        <RimbleWeb3 config={this.config}>\n          <RimbleWeb3.Consumer>\n            {({ \n              needsPreflight, \n              validBrowser, \n              userAgent, \n              web3, \n              account, \n              accountBalance,\n              accountBalanceLow,\n              initAccount, \n              rejectAccountConnect,\n              userRejectedConnect,\n              accountValidated,\n              accountValidationPending,\n              rejectValidation,\n              userRejectedValidation,\n              validateAccount,\n              connectAndValidateAccount,\n              modals,\n              network,\n              transaction,\n            }) => (\n              <Box style={{paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\" }}>\n                <Header\n                  account={account}\n                  accountBalance={accountBalance}\n                  accountBalanceLow={accountBalanceLow}\n                  initAccount={initAccount}\n                  rejectAccountConnect={rejectAccountConnect}\n                  userRejectedConnect={userRejectedConnect}\n                  accountValidated={accountValidated} \n                  accountValidationPending={accountValidationPending} \n                  rejectValidation={rejectValidation}\n                  userRejectedValidation={userRejectedValidation} \n                  validateAccount={validateAccount} \n                  connectAndValidateAccount={connectAndValidateAccount}\n                  modals={modals}\n                  network={network}\n                />\n                \n                <Flex justifyContent=\"center\" p={4}>\n                  <Text width=\"400px\">\n                    This is a starter React dApp that uses the Rimble UI component\n                    library to call methods on a smart contract deployed to the Ethereum\n                    Rinkeby testnet.\n                  </Text>\n                </Flex>\n\n                { this.state.route === 'default'\n                  ? <PrimaryCard />\n                  : null\n                }\n\n                { this.state.route === 'onboarding'\n                  ? <MissingWeb3Provider \n                      validBrowser={validBrowser} \n                      userAgent={userAgent} \n                      web3={web3} \n                      account={account} \n                      accountBalance={accountBalance}\n                      accountBalanceLow={accountBalanceLow}\n                      initAccount={initAccount} \n                      rejectAccountConnect={rejectAccountConnect}\n                      userRejectedConnect={userRejectedConnect}\n                      accountValidated={accountValidated} \n                      accountValidationPending={accountValidationPending} \n                      rejectValidation={rejectValidation}\n                      userRejectedValidation={userRejectedValidation} \n                      validateAccount={validateAccount} \n                      connectAndValidateAccount={connectAndValidateAccount}\n                      modals={modals}\n                      network={network}\n                      transaction={transaction}\n                    /> \n                  : null\n                }\n                <InstructionsCard showRoute={this.showRoute} route={this.state.route} />\n              </Box>\n            )}\n          </RimbleWeb3.Consumer>\n        </RimbleWeb3>\n        <GlobalStyle />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}