{"version":3,"sources":["components/Header.js","components/RimbleWeb3.js","components/ConnectButton.js","components/SmartContractControls.js","components/PrimaryCard.js","components/InstructionsCard.js","components/MissingWeb3Provider.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","index_es","bg","p","justifyContent","flexDirection","href","target","width","mx","h2","color","React","Component","RimbleTransactionContext","createContext","contract","account","web3","initWeb3","initContract","initAccount","RimbleTransaction","_callee","regenerator_default","wrap","_context","prev","next","window","ethereum","console","log","Web3","currentProvider","_this","setState","stop","this","_callee2","address","abi","_context2","state","eth","Contract","sent","t0","toastProvider","addMessage","variant","_callee3","_context3","enable","then","wallets","contractMethodSendWrapper","contractMethod","transaction","created","Date","now","status","showTransactionToast","_this$state","methods","send","from","on","hash","confirmationNumber","receipt","error","incomingTransaction","lastUpdated","Object","objectSpread","toastMeta","getTransactionToastMeta","transactionToastMeta","transactionHash","message","secondaryMessage","actionHref","actionText","icon","secondarymessage","Provider","assign","value","props","Consumer","ConnectButton","alignItems","px","py","h3","textAlign","pb","size","onClick","disabled","contractAbi","constant","inputs","name","outputs","payable","stateMutability","type","SmartContractControls","getNumber","_ref","esm_extends","getCounter","call","Number","toString","catch","resetCounter","incrementCounter","decrementCounter","_this2","borderBottom","borderColor","mb","fontSize","pt","borderTop","mr","PrimaryCard","RimbleWeb3","components_SmartContractControls","components_ConnectButton","InstructionsCard","mt","MissingWeb3Provider","theme","fontSizes","fontWeights","lineHeights","solid","title","copy","fonts","serif","sansSerif","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","shadows","opacity","colors","primary","blue","navy","copyColor","black","near-black","dark-gray","mid-gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","blacks","whites","GlobalStyle","createGlobalStyle","_templateObject","App","className","components_Header","components_PrimaryCard","components_MissingWeb3Provider","ref","node","components_InstructionsCard","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47a83c64.chunk.js","sourcesContent":["import React from \"react\";\nimport { Box, Flex, Link, Button, Heading } from \"rimble-ui\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Box bg=\"primary\" p={3} justifyContent=\"center\" flexDirection=\"column\">\n        <Flex justifyContent=\"flex-end\">\n          <Link\n            href=\"https://github.com/ConsenSys/rimble-app-demo\"\n            target=\"_blank\"\n          >\n            <Button>GitHub</Button>\n          </Link>\n        </Flex>\n\n        <Box width=\"400px\" mx=\"auto\">\n          <Heading.h2 color={\"white\"}>Rimble App Demo</Heading.h2>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport Web3 from \"web3\"; // uses latest 1.x.x version\n\nconst RimbleTransactionContext = React.createContext({\n  contract: {},\n  account: {},\n  web3: {},\n  initWeb3: () => {},\n  initContract: () => {},\n  initAccount: () => {}\n});\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  // Initialize a web3 provider\n  initWeb3 = async () => {\n    let web3 = {};\n\n    // Check for modern web3 provider\n    if (window.ethereum) {\n      console.log(\"Using modern web3 provider.\");\n      web3 = new Web3(window.ethereum);\n    }\n    // Legacy dapp browsers, public wallet address always exposed\n    else if (window.web3) {\n      console.log(\"Legacy web3 provider. Try updating.\");\n      web3 = new Web3(window.web3.currentProvider);\n    }\n    // Non-dapp browsers...\n    else {\n      console.log(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n\n      web3 = false;\n    }\n\n    this.setState({ web3 });\n  };\n\n  initContract = async (address, abi) => {\n    console.log(\"creating contract\");\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = await new this.state.web3.eth.Contract(abi, address);\n      this.setState({ contract });\n    } catch (error) {\n      console.log(\"Could not create contract.\");\n      window.toastProvider.addMessage(\"Contract creation failed.\", {\n        variant: \"failure\"\n      });\n    }\n  };\n\n  initAccount = async () => {\n    try {\n      // Request account access if needed\n      await window.ethereum.enable().then(wallets => {\n        const account = wallets[0];\n        this.setState({ account });\n        console.log(\"wallet address:\", this.state.account);\n      });\n    } catch (error) {\n      // User denied account access...\n      console.log(\"error:\", error);\n      window.toastProvider.addMessage(\"User needs to CONNECT wallet\", {\n        variant: \"failure\"\n      });\n    }\n  };\n\n  contractMethodSendWrapper = contractMethod => {\n    let transaction = {};\n    transaction.created = Date.now();\n\n    // Show toast for starting transaction\n    console.log(\"Starting Transaction\");\n    transaction.status = \"started\";\n    this.showTransactionToast(transaction);\n\n    const { contract, account } = this.state;\n\n    try {\n      contract.methods[contractMethod]()\n        .send({ from: account })\n        .on(\"transactionHash\", hash => {\n          // Submitted to block and received transaction hash\n          console.log(\n            \"Transaction sent to block successfully. Result pending.\"\n          );\n          transaction.status = \"pending\";\n          this.showTransactionToast(transaction);\n        })\n        .on(\"confirmation\", (confirmationNumber, receipt) => {\n          console.log(\n            \"receipt: \",\n            receipt,\n            \"confirmation number: \",\n            confirmationNumber\n          );\n          // How many confirmations should be received before informing the user\n          const confidenceThreshold = 3;\n\n          if (confirmationNumber === 0) {\n            // Initial confirmation receipt\n            console.log(\"Transaction confirmed.\");\n            transaction.status = \"confirmed\";\n\n            this.showTransactionToast(transaction);\n          } else if (confirmationNumber < confidenceThreshold) {\n            console.log(\n              \"Confirmation \" +\n                confirmationNumber +\n                \". Threshold for confidence not met.\"\n            );\n            return;\n          } else if (confirmationNumber === confidenceThreshold) {\n            console.log(\"Confidence threshold met.\");\n            // check the status from result since we are confident in the result\n            if (receipt.status) {\n              console.log(\"Transaction completed successfully!\");\n              transaction.status = \"success\";\n            } else if (!receipt.status) {\n              console.log(\"Transaction reverted due to error.\");\n              transaction.status = \"error\";\n            }\n\n            this.showTransactionToast(transaction);\n            return;\n          } else if (confirmationNumber > confidenceThreshold) {\n            console.log(\n              \"Confirmation \" +\n                confirmationNumber +\n                \". Confidence threshold already met.\"\n            );\n            return;\n          }\n        })\n        .on(\"receipt\", receipt => {\n          // Received receipt\n          console.log(\"receipt: \", receipt);\n        })\n        .on(\"error\", error => {\n          // Errored out\n          console.log(error);\n          transaction.status = \"error\";\n          this.showTransactionToast(transaction);\n        });\n    } catch (error) {\n      console.log(\"Error calling method on smart contract.\");\n      transaction.status = \"error\";\n      this.showTransactionToast(transaction);\n    }\n  };\n\n  showTransactionToast = incomingTransaction => {\n    let transaction = {};\n    // Add extra info to transaction\n    transaction.lastUpdated = Date.now();\n    transaction = { ...transaction, ...incomingTransaction };\n\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n    let transactionHash = transaction.transactionHash;\n\n    switch (status) {\n      case \"started\":\n        transactionToastMeta = {\n          message: \"Change submitted\",\n          secondaryMessage: \"Confirm in MetaMask\",\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"default\",\n          icon: \"InfoOutline\"\n        };\n        break;\n      case \"pending\":\n        transactionToastMeta = {\n          message: \"Processing change...\",\n          secondaryMessage: \"This may take a few minutes\",\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"processing\"\n        };\n        break;\n      case \"confirmed\":\n        transactionToastMeta = {\n          message: \"First block confirmed\",\n          secondaryMessage: \"Your change is in progress\",\n          actionHref: \"https://rinkeby.etherscan.io/tx/\" + transactionHash,\n          actionText: \"Check progress\",\n          variant: \"processing\"\n        };\n        break;\n      case \"success\":\n        transactionToastMeta = {\n          message: \"Smart contract value changed\",\n          variant: \"success\"\n        };\n        break;\n      case \"error\":\n        transactionToastMeta = {\n          message: \"Value change failed\",\n          secondarymessage:\n            \"Make sure you have enough Ether (ETH) and try again\",\n          actionHref: \"https://rinkeby.etherscan.io/tx/\" + transactionHash,\n          actionText: \"View on Etherscan\",\n          variant: \"failure\"\n        };\n        break;\n      default:\n        break;\n    }\n    return transactionToastMeta;\n  };\n\n  state = {\n    contract: {},\n    account: null,\n    web3: null,\n    initWeb3: this.initWeb3,\n    initContract: this.initContract,\n    initAccount: this.initAccount,\n    contractMethodSendWrapper: this.contractMethodSendWrapper\n  };\n\n  componentDidMount() {\n    this.initWeb3();\n  }\n\n  render() {\n    return (\n      <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport { Flex, Heading, MetaMaskButton } from \"rimble-ui\";\n\nclass ConnectButton extends React.Component {\n  render() {\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"center\" px={3} py={5}>\n        <Heading.h3 textAlign=\"center\" pb={4}>\n          Connect with MetaMask to try out the demo\n        </Heading.h3>\n\n        <MetaMaskButton\n          size={\"medium\"}\n          mx=\"auto\"\n          onClick={this.props.initAccount}\n          disabled={this.props.account}\n        >\n          Connect with MetaMask\n        </MetaMaskButton>\n      </Flex>\n    );\n  }\n}\n\nexport default ConnectButton;\n","import React from \"react\";\nimport { Flex, Box, Text, Button, OutlineButton } from \"rimble-ui\";\n\n// Address of the deployed smart contract (from etherscan)\nconst contractAddress = \"0x0f69f0ac4b92bf0d101b5747eed3fa6b653a36f8\";\n\n// Copied from remix ide\nconst contractAbi = [\n  {\n    constant: false,\n    inputs: [],\n    name: \"decrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"incrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"reset\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getCounter\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"int256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\n\nclass SmartContractControls extends React.Component {\n  state = {\n    value: 0\n  };\n\n  // gets the number stored in smart contract storage\n  getNumber = ({ ...props }) => {\n    const { contract } = this.props;\n    try {\n      contract.methods\n        .getCounter()\n        .call()\n        .then(value => {\n          value = Number(value.toString());\n          this.setState({ value });\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({ error });\n        });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  resetCounter = () => {\n    this.props.contractMethodSendWrapper(\"reset\");\n  };\n\n  incrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"incrementCounter\");\n  };\n\n  decrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"decrementCounter\");\n  };\n\n  componentDidMount() {\n    // Init the contract after the web3 provider has been determined\n    this.props.initContract(contractAddress, contractAbi).then(() => {\n      // Can finally interact with contract\n      this.getNumber();\n    });\n  }\n\n  render() {\n    return (\n      <Box>\n        <Flex\n          px={0}\n          pb={4}\n          borderBottom={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Text mb={2} fontSize={3}>\n            Smart contract value\n          </Text>\n\n          <OutlineButton\n            size={\"medium\"}\n            onClick={this.resetCounter}\n            disabled={!this.props.account}\n          >\n            Reset\n          </OutlineButton>\n        </Flex>\n\n        <Box py={4}>\n          <Text fontSize={6} textAlign={\"center\"}>\n            {this.state.value}\n          </Text>\n        </Box>\n\n        <Flex\n          px={0}\n          pt={4}\n          borderTop={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n        >\n          <Button size={\"medium\"} mr={4} onClick={this.incrementCounter}>\n            Increase value\n          </Button>\n\n          <Button size={\"medium\"} onClick={this.decrementCounter}>\n            Decrease value\n          </Button>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default SmartContractControls;\n","import React from \"react\";\nimport { Card } from \"rimble-ui\";\nimport RimbleWeb3 from \"./RimbleWeb3\";\nimport ConnectButton from \"./ConnectButton\";\nimport SmartContractControls from \"./SmartContractControls\";\n\nclass PrimaryCard extends React.Component {\n  render() {\n    return (\n      <RimbleWeb3.Consumer>\n        {({\n          contract,\n          account,\n          initContract,\n          initAccount,\n          contractMethodSendWrapper\n        }) => (\n          <Card width={\"400px\"} mx={\"auto\"} px={4}>\n            {!account ? (\n              <ConnectButton initAccount={initAccount} account={account} />\n            ) : (\n              <SmartContractControls\n                contract={contract}\n                account={account}\n                initContract={initContract}\n                contractMethodSendWrapper={contractMethodSendWrapper}\n              />\n            )}\n          </Card>\n        )}\n      </RimbleWeb3.Consumer>\n    );\n  }\n}\n\nexport default PrimaryCard;\n","import React from \"react\";\nimport { Box, Heading, Text } from \"rimble-ui\";\n\nclass InstructionsCard extends React.Component {\n  render() {\n    return (\n      <Box width={\"400px\"} mx=\"auto\" mt={4}>\n        <Heading.h3>Instructions:</Heading.h3>\n        <ol>\n          <li>\n            <Text p={1}>Make sure MetaMask is working in your browser</Text>\n          </li>\n          <li>\n            <Text p={1}>Set the network to Rinkeby Test Network</Text>\n          </li>\n          <li>\n            <Text p={1}>You'll need a little bit of ETH for gas fees</Text>\n          </li>\n        </ol>\n      </Box>\n    );\n  }\n}\n\nexport default InstructionsCard;\n","import React from \"react\";\nimport { Card, Heading, Text, Link } from \"rimble-ui\"\n\nclass MissingWeb3Provider extends React.Component {\n    render() {\n        return(\n            <Card width={\"600px\"} mx={\"auto\"} px={4}>\n                <Heading.h2>No Web3 Provider Available</Heading.h2>\n\n                <Text>You will need to <Link href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\" target=\"_blank\">install MetaMask</Link> to use this dApp.</Text>\n            </Card>\n        )\n    }\n}\n\nexport default MissingWeb3Provider\n","// theme.js\nexport default {\n  fontSizes: [\n    12, 14, 16, 20, 24, 32, 48, 64\n  ],\n  fontWeights: [\n    0, 300, 400, 600, 700\n  ],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: 'athelas, georgia, times, serif',\n    sansSerif: '\"Source Sans Pro\", -apple-system, sans-serif',\n  },\n  space: [\n    0, 4, 8, 16, 32, 64, 128, 256\n  ],\n  radii: [\n    '0', '4px', '8px', '16px'\n  ],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [\n    0,\n    '1px solid'\n  ],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)'\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: '#4E3FCE',\n    blue: '#007ce0',\n    navy: '#004175',\n    copyColor: '#3F3D4B',\n    // black: '#000',\n    black: '#000e1a',\n      'near-black': '#111',\n      'dark-gray': '#333',\n      'mid-gray': '#555',\n    // gray: ' #777',\n    grey: '#CCC',\n    silver: '#999',\n      'light-silver': '#aaa',\n      'moon-gray': '#ccc',\n      'light-gray': '#eee',\n      'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ]\n  }\n}\n","import React, { Component } from \"react\";\nimport { ThemeProvider, Box, ToastMessage, Text, Flex } from \"rimble-ui\";\nimport Header from \"./components/Header\";\nimport PrimaryCard from \"./components/PrimaryCard\";\nimport RimbleWeb3 from \"./components/RimbleWeb3\";\nimport InstructionsCard from \"./components/InstructionsCard\";\nimport MissingWeb3Provider from \"./components/MissingWeb3Provider\";\nimport theme from \"./theme\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body, html {\n    margin: 0;\n    padding: 0;\n    background-color: #efefef;\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme} className=\"App\">\n        <Header />\n        <Flex justifyContent=\"center\" p={4}>\n          <Text width=\"400px\">\n            This is a starter React dApp that uses the Rimble UI component\n            library to call methods on a smart contract deployed to the Ethereum\n            Rinkeby testnet.\n          </Text>\n        </Flex>\n\n        <RimbleWeb3>\n          <RimbleWeb3.Consumer>\n            {({ web3 }) => (\n              <Box>\n                {/* Conditionally render child comonents dependent on web3 being loaded */}\n                {!web3 ? <MissingWeb3Provider /> : <PrimaryCard />}\n              </Box>\n            )}\n          </RimbleWeb3.Consumer>\n        </RimbleWeb3>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n        <InstructionsCard />\n        <GlobalStyle />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}