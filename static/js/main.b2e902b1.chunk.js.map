{"version":3,"sources":["utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/components/WrongNetworkModal.js","utilities/components/NetworkOverview.js","theme.js","utilities/components/ConnectionModal.js","utilities/components/TransactionConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/ValidationPendingModal.js","utilities/components/UserRejectedValidationModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/TransactionUtil.js","utilities/RimbleWeb3.js","utilities/components/ShortHash.js","utilities/components/AccountOverview.js","components/Header.js","utilities/content/TransactionToastMessages.js","utilities/TransactionToastUtil.js","components/SmartContractControls.js","components/TransactionsCard.js","components/PrimaryCard.js","components/InstructionsCard.js","components/Web3Debugger.js","App.js","serviceWorker.js","index.js"],"names":["NoWeb3BrowserModal","react_default","a","createElement","index_es","isOpen","this","props","p","maxWidth","icononly","icon","color","position","top","right","mt","mr","onClick","closeModal","flexDirection","justifyContent","my","name","size","h2","href","target","React","Component","NoWalletModal","WrongNetworkModal","span","style","textTransform","network","current","required","message","NetworkOverview","getNetworkCircleColor","circleColor","_this","id","networkCircle","borderRadius","backgroundColor","height","width","alignItems","theme","fontSizes","fontWeights","lineHeights","solid","title","copy","fonts","serif","sansSerif","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","shadows","opacity","disabled","colors","primary","blue","navy","copyColor","black","near-black","dark-gray","mid-gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","blacks","whites","ConnectionModal","alignContent","flex","caps","components_NetworkOverview","currentNetwork","fontWeight","mb","borderRight","borderColor","mx","flexShrink","validateAccount","src","alt","TransactionConnectionModal","ConnectionPendingModal","secondaryMessage","UserRejectedConnectionModal","sendMessageAgain","event","initAccount","ValidationPendingModal","bg","account","UserRejectedValidationModal","LowFundsModal","state","showQR","toggleQRVisible","setState","RightColumn","address","bold","value","ConnectionModalUtil","components_NoWeb3BrowserModal","modals","methods","closeNoWeb3BrowserModal","data","noWeb3BrowserModalIsOpen","transaction","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","closeConnectionModal","connectionModalIsOpen","accountValidated","components_TransactionConnectionModal","closeTransactionConnectionModal","transactionConnectionModalIsOpen","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_ValidationPendingModal","closeValidationPendingModal","accountValidationPending","components_UserRejectedValidationModal","closeUserRejectedValidationModal","userRejectedValidation","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","WrongNetworkBanner","bottom","left","NetworkUtil","isCorrectNetwork","web3","components_WrongNetworkBanner","TransactionUtil","RimbleTransactionContext","createContext","contract","accountBalance","accountBalanceLow","web3Fallback","transactions","checkPreflight","initWeb3","initContract","rejectAccountConnect","rejectValidation","connectAndValidateAccount","checkNetwork","openNoWeb3BrowserModal","openConnectionPendingModal","openUserRejectedConnectionModal","openValidationPendingModal","openUserRejectedValidationModal","openWrongNetworkModal","openTransactionConnectionModal","openLowFundsModal","meta","RimbleTransaction","web3Preflight","validBrowser","console","log","Object","objectSpread","web3ActionPreflight","checkModernBrowser","_callee","browser","userAgent","regenerator_default","wrap","_context","prev","next","bowser","getParser","window","navigator","parse","parsedResult","satisfies","desktop","chrome","firefox","opera","abrupt","stop","_callee2","web3Provider","_context2","ethereum","Web3","currentProvider","providers","HttpProvider","_callee3","abi","_context3","createContract","_callee4","_context4","eth","Contract","error","toastProvider","addMessage","variant","_callee5","_context5","enable","then","wallets","getAccountBalance","pollAccountUpdates","t0","_callee6","_context6","getBalance","utils","fromWei","parseFloat","determineAccountLowBalance","accountBalanceMinimum","config","_callee7","_context7","personal","sign","fromUtf8","signature","successMessage","shortenHash","_callee8","_context8","openConnectionModal","getRequiredNetwork","networkId","requiredNetwork","networkName","getNetworkId","_callee9","_context9","net","getId","getNetworkName","_callee10","_context10","getNetworkType","_callee11","_context11","requiresUpdate","accountInterval","setInterval","clearInterval","contractMethodSendWrapper","contractMethod","createTransaction","addTransaction","method","type","status","updateTransaction","_this$state","send","from","on","hash","transactionHash","recentEvent","confirmationNumber","receipt","confirmationCount","actionHref","actionText","created","Date","now","lastUpdated","concat","updatedTransaction","shortHash","txStart","substr","txEnd","length","e","preventDefault","openNoWalletModal","Provider","assign","ConnectionModalsUtil","utilities_NetworkUtil","utilities_TransactionUtil","Consumer","ShortHash","AccountOverview","trimEth","Math","round","toFixed","roundedBalance","fontSize","components_ShortHash","Header","components_AccountOverview","m","TransactionToastMessages","started","pending","confirmed","success","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","keys","getNewObjectFromCollection","objectKey","filter","key","includes","map","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","tx","currentTx","prevTx","processTransactionUpdates","prevProps","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","prevState","ref","node","contractAbi","constant","inputs","outputs","payable","stateMutability","SmartContractControls","needsUpdate","getNumber","_ref","esm_extends","getCounter","call","Number","toString","catch","resetCounter","incrementCounter","decrementCounter","_this2","px","pb","borderBottom","py","textAlign","pt","borderTop","TransactionsCard","keyName","keyIndex","txHash","PrimaryCard","RimbleWeb3","components_SmartContractControls","components_TransactionsCard","utilities_TransactionToastUtil","InstructionsCard","h3","route","showRoute","DebuggerButtons","h4","Web3Debugger","ml","Web3Debugger_DebuggerButtons","GlobalStyle","createGlobalStyle","_templateObject","App","className","needsPreflight","paddingBottom","components_Header","components_PrimaryCard","components_Web3Debugger","components_InstructionsCard","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b2e902b1.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  TextButton,\n  Link,\n  OutlineButton\n} from \"rimble-ui\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>Not a Web3 Browser</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not support interacting with blockchain.\n              Try using Chrome.\n            </Text>\n\n            <Link href=\"https://www.google.com/chrome/browser/\" target=\"_blank\">\n              <OutlineButton size=\"small\">Download Chrome</OutlineButton>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  TextButton,\n  Link,\n  OutlineButton\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\"\n            >\n              <OutlineButton size=\"small\">Get MetaMask Extension</OutlineButton>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  ToastMessage,\n  Icon,\n  Modal,\n  TextButton\n} from \"rimble-ui\";\n\nclass WrongNetworkModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>Wrong Network</Heading.h2>\n\n            <Text my={4}>\n              Looks like your account is connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              network. Head to MetaMask and switch to the{\" \"}\n              {this.props.network.required.name} network.\n            </Text>\n\n            <ToastMessage\n              message={\"Waiting for the right network...\"}\n              icon={\"InfoOutline\"}\n            />\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","// theme.js\nexport default {\n  fontSizes: [\n    12, 14, 16, 20, 24, 32, 48, 64\n  ],\n  fontWeights: [\n    0, 300, 400, 600, 700\n  ],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: 'athelas, georgia, times, serif',\n    sansSerif: '\"Source Sans Pro\", -apple-system, sans-serif',\n  },\n  space: [\n    0, 4, 8, 16, 32, 64, 128, 256\n  ],\n  radii: [\n    '0', '4px', '8px', '16px'\n  ],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [\n    0,\n    '1px solid'\n  ],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)'\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: '#4E3FCE',\n    blue: '#007ce0',\n    navy: '#004175',\n    copyColor: '#3F3D4B',\n    // black: '#000',\n    black: '#000e1a',\n      'near-black': '#111',\n      'dark-gray': '#333',\n      'mid-gray': '#555',\n    // gray: ' #777',\n    grey: '#CCC',\n    silver: '#999',\n      'light-silver': '#aaa',\n      'moon-gray': '#ccc',\n      'light-gray': '#eee',\n      'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ]\n  }\n}\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  TextButton,\n  Modal,\n  Flex,\n  Image,\n  Box,\n  MetaMaskButton\n} from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\";\nimport theme from \"../../theme\";\n\nclass ConnectionModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"960px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>\n                    Current Network\n                  </Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n\n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>\n                    New to Bounties Explorer?\n                  </Text>\n                  <Text fontWeight={3} mt={3} mb={2}>\n                    What is connecting?\n                  </Text>\n                  <Text>Connecting lets you use Bounties</Text>\n                  <Text>\n                    Explore through your Ethereum account (the long cod that\n                    starts with 0x).\n                  </Text>\n                </Box>\n\n                <Text fontWeight={3}>You need to be connected to:</Text>\n                <ul>\n                  <li>Post bounties</li>\n                  <li>Discuss bounties</li>\n                  <li>Fulfill bounties</li>\n                </ul>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text />\n            </Flex>\n\n            <Flex\n              flexDirection={\"column\"}\n              justifyContent={\"space-between\"}\n              p={3}\n              flexShrink={\"1\"}\n            >\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\" />\n              </Flex>\n\n              <Heading.h2>How would you like to connect?</Heading.h2>\n\n              <Text my={3}>\n                Make sure you've set up MetaMask or your mobile wallet before\n                you continue.\n              </Text>\n\n              <MetaMaskButton onClick={this.props.validateAccount}>\n                Connect with MetaMask\n              </MetaMaskButton>\n\n              <Flex mt={3} mx={4} alignItems=\"center\">\n                <Box mr={3}>\n                  <Image\n                    src=\"images/phone.png\"\n                    alt=\"mobile phone\"\n                    width={\"60px\"}\n                    height={\"92px\"}\n                  />\n                </Box>\n\n                <Flex flexDirection={\"column\"}>\n                  <Text fontWeight={3} mb={2}>\n                    Connect with a mobile app\n                  </Text>\n                  <Text>\n                    You can connect from mobile browser wallets like Cipher,\n                    Status or Coinbase wallet.\n                  </Text>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  TextButton,\n  Modal,\n  Flex,\n  Box,\n  MetaMaskButton\n} from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\";\nimport theme from \"../../theme\";\n\nclass TransactionConnectionModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"960px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>\n                    Current Network\n                  </Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n\n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>\n                    New to Bounties Explorer?\n                  </Text>\n                  <Text>\n                    You need to be connected so you can use the funds stored in\n                    your Etherum account.\n                  </Text>\n                  <Text>\n                    Every blockchain action requires a small network fee.\n                  </Text>\n                </Box>\n\n                <Text fontWeight={3}>What's a network fee?</Text>\n                <Text>\n                  This fee pays for a person or group to add a record of your\n                  action to the blockchain and let the network know. It doesn't\n                  go to us.\n                </Text>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text />\n            </Flex>\n\n            <Flex flexDirection={\"column\"} p={3}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\" />\n              </Flex>\n\n              <Heading.h2>Connect to continue</Heading.h2>\n\n              <Text mb={4}>\n                This action uses the blockchain, so you'll need to connect your\n                Ethereum account to continue. That's the long code starting with{\" \"}\n                <Text.span fontWeight={3}>0x</Text.span>.\n              </Text>\n\n              <MetaMaskButton onClick={this.props.validateAccount}>\n                Connect with MetaMask\n              </MetaMaskButton>\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  TextButton,\n  Modal,\n  Flex,\n  Box,\n  ToastMessage\n} from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\";\nimport theme from \"./../../theme\";\n\nclass ConnectionPendingModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"960px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>\n                    Current Network\n                  </Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n\n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>\n                    New to Bounties Explorer?\n                  </Text>\n                  <Text>\n                    It's possible to use your account's address to see all your\n                    blockchain activity. Only connect accounts you don't mind\n                    being linked to your Bounties Explorer profile.\n                  </Text>\n                </Box>\n\n                <Text fontWeight={3}>What does connection mean?</Text>\n                <ul>\n                  <li>Shares your Ethereum account address with us</li>\n                  <li>\n                    Allows us to start transactions on the blockchain (at your\n                    request)\n                  </li>\n                </ul>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text />\n            </Flex>\n\n            <Flex flexDirection={\"column\"} p={3}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\" />\n              </Flex>\n\n              <Heading.h2>Connect your account</Heading.h2>\n\n              <Text mb={4}>\n                A connection request should automatically appear. If not, open\n                it using the MetaMask extension icon in your browser.\n              </Text>\n\n              <ToastMessage\n                message={\"Waiting for connection confirmation...\"}\n                secondaryMessage={\"This won't cost your any Ether\"}\n                icon={\"InfoOutline\"}\n              />\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  OutlineButton,\n  Button,\n  Icon,\n  Modal,\n  TextButton\n} from \"rimble-ui\";\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>\n              You can't continue without connecting your account\n            </Heading.h2>\n\n            <Text my={4}>\n              To use Bounties Explorer, you need to confirm the connection\n              request. You can still browse as a guest.\n            </Text>\n\n            <Flex justifyContent={\"flex-end\"} mt={4}>\n              <OutlineButton onClick={this.props.closeModal} mr={4}>\n                Browse as guest\n              </OutlineButton>\n              <Button onClick={this.sendMessageAgain}>\n                Send message again\n              </Button>\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  TextButton,\n  Modal,\n  Flex,\n  Box,\n  ToastMessage\n} from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\";\nimport theme from \"../../theme\";\n\nclass ValidationPendingModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"960px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>\n                    Current Network\n                  </Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n\n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>\n                    New to Bounties Explorer?\n                  </Text>\n                  <Text fontWeight={3}>The blockchain is public</Text>\n                  <Text>\n                    It's possible to use your account's address to see all your\n                    blockchain activity. Only connect accounts you don't mind\n                    being linked to your Bounties Explorer profile.\n                  </Text>\n                </Box>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text />\n            </Flex>\n\n            <Flex flexDirection={\"column\"} p={3}>\n              <Flex justifyContent={\"center\"} my={4}>\n                <Icon name=\"Link\" color=\"#666\" size=\"40\" />\n              </Flex>\n\n              <Heading.h2>Verify your account</Heading.h2>\n\n              <Text mb={4}>\n                To connect securely and prove you have access to this account,\n                sign the message in your MetaMask extension. A signature request\n                should automatically appear. If not, open it using the MetaMask\n                icon in your browser.\n              </Text>\n\n              <Box bg={\"#f3f2fd\"} borderRadius={2} p={3} mb={4}>\n                <Text>Address: {this.props.account}</Text>\n              </Box>\n\n              <ToastMessage\n                message={\"Waiting for connection confirmation...\"}\n                secondaryMessage={\"This won't cost your any Ether\"}\n                icon={\"InfoOutline\"}\n              />\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default ValidationPendingModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  OutlineButton,\n  Button,\n  Icon,\n  Modal,\n  TextButton\n} from \"rimble-ui\";\n\nclass UserRejectedValidationModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.validateAccount();\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>\n              You can't continue without signing the message\n            </Heading.h2>\n\n            <Text my={4}>\n              To use Bounties Explorer, you need to sign the message to finish\n              connecting securely. You can still browse as a guest.\n            </Text>\n\n            <Flex justifyContent={\"flex-end\"} mt={4}>\n              <OutlineButton onClick={this.props.closeModal} mr={4}>\n                Browse as guest\n              </OutlineButton>\n              <Button onClick={this.sendMessageAgain}>\n                Send message again\n              </Button>\n            </Flex>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedValidationModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  TextButton,\n  Modal,\n  Flex,\n  Box,\n  OutlineButton,\n  Button,\n  PublicAddress,\n  QR\n} from \"rimble-ui\";\nimport NetworkOverview from \"./NetworkOverview\";\nimport theme from \"../../theme\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showQR: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showQR: !this.state.showQR\n    });\n  };\n\n  RightColumn = () => {\n    return (\n      <Flex flexDirection={\"column\"} p={3}>\n        <Flex justifyContent={\"center\"} my={4}>\n          <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n        </Flex>\n\n        <Heading.h2>Low Funds</Heading.h2>\n\n        <Text mb={4}>\n          To use Bounties Explorer's block chain features, you'll need to own\n          Ether. Deposit Ether into your account via your MetaMask extension or\n          send Funds from another account.\n        </Text>\n\n        <PublicAddress address={this.props.account} />\n\n        <Box my={3}>\n          <Text.span bold fontWeight={3} mr={3}>\n            Got another account on a mobile wallet?\n          </Text.span>\n          <Text.span>\n            Send funds by scanning your QR code with your wallet app.\n          </Text.span>\n        </Box>\n\n        <Box mb={4}>\n          <OutlineButton onClick={this.toggleQRVisible}>\n            <Flex alignItems={\"center\"}>\n              <Icon name=\"FilterCenterFocus\" mr={2} />\n              Show account QR code\n            </Flex>\n          </OutlineButton>\n        </Box>\n        <Flex justifyContent={\"flex-end\"}>\n          <Box>\n            <Button onClick={this.props.closeModal}>\n              Continue to Bounties Explorer\n            </Button>\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"960px\"}>\n          <TextButton\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex justifyContent={\"center\"} alignContent={\"stretch\"}>\n            <Box width={\"400px\"} flex={\"1 1 auto\"}>\n              <Flex flexDirection={\"column\"} alignContent={\"center\"}>\n                <Box>\n                  <Text color={theme.colors.primary} caps>\n                    Current Network\n                  </Text>\n                  <NetworkOverview network={this.props.currentNetwork} />\n                </Box>\n\n                <Box my={4}>\n                  <Text color={theme.colors.primary} caps>\n                    New to Ether?\n                  </Text>\n                </Box>\n\n                <Text fontWeight={3}>What you'll need Ether for:</Text>\n                <ul>\n                  <li>Submitting a bounty</li>\n                  <li>Paying for a completed bounty</li>\n                  <li>Network fees</li>\n                </ul>\n\n                <Text fontWeight={3}>What are network fees?</Text>\n                <Text>\n                  Network fees pay for a person or group to add a record of your\n                  action to the blockchain and let the network know. It doesn't\n                  go to us.\n                </Text>\n              </Flex>\n            </Box>\n\n            <Flex borderRight={1} borderColor={\"#999\"} mx={3}>\n              <Text />\n            </Flex>\n            {!this.state.showQR ? (\n              this.RightColumn()\n            ) : (\n              <Box>\n                <Flex justifyContent={\"center\"}>\n                  <QR value={this.props.account} />\n                </Flex>\n\n                <Text>{this.props.account}</Text>\n                <OutlineButton onClick={this.toggleQRVisible}>\n                  Close QR\n                </OutlineButton>\n              </Box>\n            )}\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport TransactionConnectionModal from \"./components/TransactionConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport ValidationPendingModal from \"./components/ValidationPendingModal\";\nimport UserRejectedValidationModal from \"./components/UserRejectedValidationModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          validateAccount={this.props.validateAccount}\n          isOpen={\n            this.props.modals.data.connectionModalIsOpen &&\n            !this.props.accountValidated\n          }\n          currentNetwork={this.props.network.current}\n        />\n\n        <TransactionConnectionModal\n          closeModal={this.props.modals.methods.closeTransactionConnectionModal}\n          validateAccount={this.props.validateAccount}\n          isOpen={this.props.modals.data.transactionConnectionModalIsOpen}\n          currentNetwork={this.props.network.current}\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <ValidationPendingModal\n          closeModal={this.props.modals.methods.closeValidationPendingModal}\n          isOpen={this.props.modals.data.accountValidationPending}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n        <UserRejectedValidationModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedValidationModal\n          }\n          isOpen={this.props.modals.data.userRejectedValidation}\n          validateAccount={this.props.validateAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\"\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - switch in your MetaMask extension.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  componentWillReceiveProps() {\n    this.setState({\n      \n    });\n  }\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner \n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\n\nclass TransactionUtil extends React.Component {\n  render() {\n    return (\n      <div>\n      </div>\n    );\n  }\n}\n\nexport default TransactionUtil;\n","import React from \"react\";\nimport Web3 from \"web3\"; // uses latest 1.x.x version\nimport bowser from \"bowser\";\n\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport NetworkUtil from \"./NetworkUtil\";\nimport TransactionUtil from \"./TransactionUtil\";\n\nconst RimbleTransactionContext = React.createContext({\n  contract: {},\n  account: {},\n  accountBalance: {},\n  accountBalanceLow: {},\n  web3: {},\n  web3Fallback: {},\n  transactions: {},\n  checkPreflight: () => {},\n  initWeb3: () => {},\n  initContract: () => {},\n  initAccount: () => {},\n  rejectAccountConnect: () => {},\n  accountValidated: {},\n  accountValidationPending: {},\n  rejectValidation: () => {},\n  validateAccount: () => {},\n  connectAndValidateAccount: () => {},\n  network: {\n    required: {},\n    current: {},\n    isCorrectNetwork: null,\n    checkNetwork: () => {}\n  },\n  modals: {\n    data: {\n      noWeb3BrowserModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      connectionModalIsOpen: {},\n      accountConnectionPending: {},\n      userRejectedConnect: {},\n      accountValidationPending: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n      lowFundsModalIsOpen: {}\n    },\n    methods: {\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      closeValidationPendingModal: () => {},\n      openValidationPendingModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeTransactionConnectionModal: () => {},\n      openTransactionConnectionModal: () => {},\n      closeLowFundsModal: () => {},\n      openLowFundsModal: () => {}\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  web3Preflight = () => {\n    // Is this browser compatible?\n    if (!this.state.validBrowser) {\n      console.log(\"Invalid browser, cancelling transaction.\");\n      let modals = { ...this.state.modals };\n      modals.data.noWeb3BrowserModalIsOpen = true;\n      this.setState({ modals });\n    }\n\n    // Is there a web3 provider?\n    if (!this.state.web3) {\n      console.log(\"No browser wallet, cancelling transaction.\");\n      let modals = { ...this.state.modals };\n      modals.data.noWalletModalIsOpen = true;\n      this.setState({ modals });\n      return false;\n    }\n\n    return true;\n  };\n\n  web3ActionPreflight = () => {\n    // Is this browser compatible?\n    if (!this.state.validBrowser) {\n      console.log(\"Invalid browser, cancelling transaction.\");\n      let modals = { ...this.state.modals };\n      modals.data.noWeb3BrowserModalIsOpen = true;\n      this.setState({ modals });\n      return false;\n    }\n\n    // Is there a wallet?\n    console.log(\"this.state.web3Fallback\", this.state.web3Fallback);\n    if (this.state.web3Fallback) {\n      console.log(\"No browser wallet, cancelling transaction.\");\n      let modals = { ...this.state.modals };\n      modals.data.noWalletModalIsOpen = true;\n      this.setState({ modals });\n      return false;\n    }\n\n    return true;\n  };\n\n  // Validates user's browser is web3 capable\n  checkModernBrowser = async () => {\n    // User Agent\n    const browser = bowser.getParser(window.navigator.userAgent);\n    const userAgent = browser.parse().parsedResult;\n\n    const validBrowser = browser.satisfies({\n      desktop: {\n        chrome: \">49\",\n        firefox: \">52\",\n        opera: \">36\"\n      }\n    })\n      ? true\n      : false;\n\n    this.setState({\n      userAgent,\n      validBrowser\n    });\n\n    return validBrowser;\n  };\n\n  // Initialize a web3 provider\n  // TODO: Make async work\n  initWeb3 = async () => {\n    this.checkModernBrowser();\n\n    let web3 = {};\n\n    // Check for modern web3 provider\n    if (window.ethereum) {\n      console.log(\"Using modern web3 provider.\");\n      web3 = new Web3(window.ethereum);\n    }\n    // Legacy dapp browsers, public wallet address always exposed\n    else if (window.web3) {\n      console.log(\"Legacy web3 provider. Try updating.\");\n      web3 = new Web3(window.web3.currentProvider);\n    }\n    // Non-dapp browsers...\n    else {\n      console.log(\"Non-Ethereum browser detected. Using Infura fallback.\");\n\n      const web3Provider = new Web3.providers.HttpProvider(\n        \"https://rinkeby.infura.io/v3/c43d74f41ea4482d8eecfa96d47a8151\"\n      );\n      web3 = new Web3(web3Provider);\n\n      // Set fallback property, used to show modal\n      this.setState({ web3Fallback: true });\n    }\n\n    this.setState({ web3 }, () => {\n      // After setting the web3 provider, check network\n      this.checkNetwork();\n    });\n\n    console.log(\"Finished initWeb3\");\n  };\n\n  initContract = async (address, abi) => {\n    console.log(\"Init contract\");\n\n    if (!this.state.web3) {\n      console.log(\"Awaiting web3\");\n      await this.initWeb3();\n    }\n\n    this.createContract(address, abi);\n  };\n\n  createContract = async (address, abi) => {\n    console.log(\"creating contract\", address, abi);\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new this.state.web3.eth.Contract(abi, address);\n      this.setState({ contract });\n    } catch (error) {\n      console.log(\"Could not create contract.\");\n      window.toastProvider.addMessage(\"Contract creation failed.\", {\n        variant: \"failure\"\n      });\n    }\n  };\n\n  initAccount = async () => {\n    this.openConnectionPendingModal();\n\n    try {\n      // Request account access if needed\n      await window.ethereum.enable().then(wallets => {\n        const account = wallets[0];\n        this.closeConnectionPendingModal();\n        this.setState({ account });\n\n        console.log(\"wallet address:\", this.state.account);\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // Watch for account change\n        this.pollAccountUpdates();\n      });\n    } catch (error) {\n      // User denied account access...\n      console.log(\"User cancelled connect request. Error:\", error);\n\n      // Reject Connect\n      this.rejectAccountConnect(error);\n    }\n  };\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  };\n\n  getAccountBalance = async () => {\n    try {\n      await this.state.web3.eth\n        .getBalance(this.state.account)\n        .then(accountBalance => {\n          accountBalance = this.state.web3.utils.fromWei(\n            accountBalance,\n            \"ether\"\n          );\n          accountBalance = parseFloat(accountBalance);\n          this.setState({ accountBalance });\n          console.log(\"account balance: \", accountBalance);\n\n          this.determineAccountLowBalance();\n        });\n    } catch (error) {\n      console.log(\"Failed to get account balance.\");\n    }\n  };\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum ? true : false;\n\n    this.setState({\n      accountBalanceLow\n    });\n  };\n\n  validateAccount = async () => {\n    console.log(\"validateAccount\");\n    // Get account wallet if none exist\n    if (!this.state.account) {\n      await this.initAccount();\n\n      if (!this.state.account) {\n        return;\n      }\n    }\n    console.log(\"setting state to update UI\");\n\n    // Show blocking modal\n    this.openValidationPendingModal();\n\n    console.log(\"Requesting web3 personal sign\");\n    return window.web3.personal.sign(\n      window.web3.fromUtf8(\n        `Hi there from Rimble! To connect, sign this message to prove you have access to this account. This won’t cost you any Ether. To stop hackers pretending to be you, here’s a unique message ID they won't be able to guess: 012345`\n      ),\n      this.state.account,\n      (error, signature) => {\n        if (error) {\n          // User rejected account validation.\n          console.log(\"Wallet account not validated. Error:\", error);\n\n          // Reject the validation\n          this.rejectValidation(error);\n        } else {\n          const successMessage =\n            \"Wallet \" + this.shortenHash(this.state.account) + \" connected\";\n          console.log(successMessage, signature);\n          window.toastProvider.addMessage(successMessage, {\n            variant: \"success\"\n          });\n\n          this.closeValidationPendingModal();\n          this.setState({\n            accountValidated: true\n          });\n        }\n      }\n    );\n  };\n\n  rejectValidation = error => {\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedValidation = true;\n    modals.data.accountValidated = false;\n    modals.data.accountValidationPending = false;\n    this.setState({ modals });\n  };\n\n  connectAndValidateAccount = async () => {\n    if (!this.web3ActionPreflight()) {\n      return;\n    }\n\n    // Check for account\n    if (!this.state.account || !this.state.accountValidated) {\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n\n    // await this.initAccount();\n    // await this.validateAccount();\n  };\n\n  getRequiredNetwork = () => {\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : 1;\n    let networkName = \"\";\n    switch (networkId) {\n      case 1:\n        networkName = \"Main\";\n        break;\n      case 3:\n        networkName = \"Ropsten\";\n        break;\n      case 4:\n        networkName = \"Rinkeby\";\n        break;\n      case 42:\n        networkName = \"Kovan\";\n        break;\n      default:\n        networkName = \"unknown\";\n    }\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  };\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      console.log(\"Could not get network ID: \", error);\n    }\n  };\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      console.log(\"Could not get network Name: \", error);\n    }\n  };\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n    await this.getNetworkId();\n    await this.getNetworkName();\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork =\n      this.state.network.current.id === this.state.network.required.id\n        ? true\n        : false;\n\n    this.setState({ network });\n  };\n\n  pollAccountUpdates = () => {\n    let account = this.state.account;\n    let requiresUpdate = false;\n    let accountInterval = setInterval(() => {\n      if (\n        this.state.modals.data.accountValidationPending ||\n        this.state.modals.data.accountConnectionPending\n      ) {\n        return;\n      }\n      window.ethereum.enable().then(wallets => {\n        const updatedAccount = wallets[0];\n\n        if (updatedAccount !== account) {\n          requiresUpdate = true;\n        }\n\n        if (requiresUpdate) {\n          clearInterval(accountInterval);\n          let modals = { ...this.state.modals };\n          modals.data.userRejectedConnect = null;\n\n          this.setState(\n            {\n              modals: modals,\n              account: \"\",\n              accountValidated: null\n            },\n            () => {\n              this.initAccount();\n            }\n          );\n        }\n      });\n    }, 1000);\n  };\n\n  contractMethodSendWrapper = contractMethod => {\n    // Is it web3 capable?\n    if (!this.web3ActionPreflight()) {\n      return;\n    }\n\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account || !this.state.accountValidated) {\n      this.openTransactionConnectionModal();\n      return;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      return;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction();\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.method = contractMethod;\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { contract, account } = this.state;\n\n    try {\n      contract.methods[contractMethod]()\n        .send({ from: account })\n        .on(\"transactionHash\", hash => {\n          // Submitted to block and received transaction hash\n          // Set properties on the current transaction\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"confirmation\", (confirmationNumber, receipt) => {\n          // Update confirmation count on each subsequent confirmation that's received\n          transaction.confirmationCount += 1;\n\n          // How many confirmations should be received before informing the user\n          const confidenceThreshold = 3;\n\n          if (transaction.confirmationCount === 1) {\n            // Initial confirmation receipt\n            transaction.status = \"confirmed\";\n          } else if (transaction.confirmationCount < confidenceThreshold) {\n            // Not enough confirmations to match threshold\n          } else if (transaction.confirmationCount === confidenceThreshold) {\n            // Confirmations match threshold\n            // Check the status from result since we are confident in the result\n            if (receipt.status) {\n              transaction.status = \"success\";\n            } else if (!receipt.status) {\n              transaction.status = \"error\";\n            }\n          } else if (transaction.confirmationCount > confidenceThreshold) {\n            // Confidence threshold met\n          }\n          // Update transaction with receipt details\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"receipt\", receipt => {\n          // Received receipt, met total number of confirmations\n          transaction.recentEvent = \"receipt\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"error\", error => {\n          // Errored out\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n          // TODO: should this be a custom error? What is the error here?\n          // TODO: determine how to handle error messages globally\n          window.toastProvider.addMessage(\"Value change failed\", {\n            secondaryMessage: \"Could not change value.\",\n            actionHref: \"\",\n            actionText: \"\",\n            variant: \"failure\"\n          });\n        });\n    } catch (error) {\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Value change failed\", {\n        secondaryMessage: \"Could not change value on smart contract\",\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\"\n      });\n    }\n  };\n\n  // Create tx\n  createTransaction = () => {\n    let transaction = {};\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n\n    return transaction;\n  };\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  };\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n  };\n\n  // UTILITY\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    console.log(\"this.state\", this.state);\n    this.setState({ modals });\n  };\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  };\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  };\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  };\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  };\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  };\n\n  closeValidationPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountValidationPending = false;\n    modals.data.connectionModalIsOpen = false;\n    modals.data.transactionConnectionModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openValidationPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.accountValidationPending = true;\n    modals.data.userRejectedValidation = false;\n    this.setState({ modals });\n  };\n\n  closeUserRejectedValidationModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedValidation = false;\n    modals.data.connectionModalIsOpen = false;\n    modals.data.transactionConnectionModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openUserRejectedValidationModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedValidation = true;\n    modals.data.connectionModalIsOpen = false;\n    modals.data.transactionConnectionModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  };\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  };\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  };\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  };\n\n  closeTransactionConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionConnectionModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openTransactionConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionConnectionModalIsOpen = true;\n    this.setState({ modals });\n  };\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  };\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  };\n\n  state = {\n    contract: {},\n    account: null,\n    accountBalance: null,\n    accountBalanceLow: null,\n    web3: null,\n    web3Fallback: null,\n    transactions: {},\n    checkPreflight: this.checkPreflight,\n    initWeb3: this.initWeb3,\n    initContract: this.initContract,\n    initAccount: this.initAccount,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    rejectAccountConnect: this.rejectAccountConnect,\n    accountValidated: null,\n    accountValidationPending: null,\n    rejectValidation: this.rejectValidation,\n    validateAccount: this.validateAccount,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    network: {\n      required: {},\n      current: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        connectionModalIsOpen: null,\n        accountConnectionPending: null,\n        userRejectedConnect: null,\n        accountValidationPending: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        transactionConnectionModalIsOpen: null,\n        lowFundsModalIsOpen: null\n      },\n      methods: {\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeValidationPendingModal: this.closeValidationPendingModal,\n        openValidationPendingModal: this.openValidationPendingModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeTransactionConnectionModal: this.closeTransactionConnectionModal,\n        openTransactionConnectionModal: this.openTransactionConnectionModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openLowFundsModal: this.openLowFundsModal\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  };\n\n  componentDidMount() {\n    // Performs a check on browser and will load a web3 provider\n    // this.initWeb3();\n  }\n\n  render() {\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          initAccount={this.state.initAccount}\n          account={this.state.account}\n          validateAccount={this.state.validateAccount}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n          accountValidated={this.state.accountValidated}\n          network={this.state.network}\n          modals={this.state.modals}\n        />\n        <NetworkUtil network={this.state.network} web3={this.state.web3} />\n        <TransactionUtil transaction={this.state.transaction} />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text.span>{shortHash}</Text.span>;\n  }\n}\n\nexport default ShortHash;\n","import React from \"react\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ShortHash from \"./ShortHash\";\n\nclass AccountOverview extends React.Component {\n  trimEth = eth => {\n    eth = parseFloat(eth);\n    eth = eth * 10000;\n    eth = Math.round(eth);\n    eth = eth / 10000;\n    eth = eth.toFixed(4);\n\n    return eth;\n  };\n\n  render() {\n    const roundedBalance = this.trimEth(this.props.accountBalance);\n    return (\n      <Flex alignItems={\"flex-start\"} flexDirection={\"column\"} my={2} mx={4}>\n        <Text fontSize={2}>\n          Connected to <ShortHash hash={this.props.account} />\n        </Text>\n        <Text\n          fontSize={1}\n          color={this.props.accountBalanceLow ? \"red\" : \"#999\"}\n        >\n          Balance: {roundedBalance} ETH\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default AccountOverview;\n","import React from \"react\";\nimport { Box, Flex, Button, Heading } from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\nimport AccountOverview from \"../utilities/components/AccountOverview\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Box>\n        <Flex alignItems={\"center\"} justifyContent=\"flex-end\" bg={\"white\"}>\n          <Box mr={4}>\n            <NetworkOverview network={this.props.network.current} />\n          </Box>\n          \n          { \n            this.props.account && this.props.accountValidated\n            ?\n              <AccountOverview \n                account={this.props.account}\n                accountBalanceLow={this.props.accountBalanceLow}\n                accountBalance={this.props.accountBalance}\n              />\n            :\n              <Button\n                m={3}\n                onClick={this.props.connectAndValidateAccount}\n                size=\"small\"\n                backgroundColor={\"white\"}\n              >\n                Connect\n              </Button>\n          }\n\n          \n        </Flex>\n        <Box bg=\"primary\" p={3} justifyContent=\"center\" flexDirection=\"column\">\n          <Box width=\"400px\" mx=\"auto\">\n            <Heading.h2 color={\"white\"}>Rimble App Demo</Heading.h2>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","const TransactionToastMessages = {\n    started: {\n      message: \"Change submitted\",\n      secondaryMessage: \"Confirm in MetaMask\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing change...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your change is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\"\n    },\n    success: {\n      message: \"Smart contract value changed\",\n      variant: \"success\"\n    },\n    error: {\n      message: \"Value change failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\"\n    }\n  };\n  \n  export default TransactionToastMessages;\n  ","import React from \"react\";\nimport TransactionToastMessages from \"./content/TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      prevTx = this.getTransactionFromCollection(\n        currentTx.created,\n        prevCollection\n      );\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx !== null && typeof tx !== \"undefined\") {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        break;\n    }\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import React from \"react\";\nimport { Flex, Box, Text, Button, OutlineButton } from \"rimble-ui\";\n\n// Address of the deployed smart contract (from etherscan)\nconst contractAddress = \"0x0f69f0ac4b92bf0d101b5747eed3fa6b653a36f8\";\n\n// Copied from remix ide\nconst contractAbi = [\n  {\n    constant: false,\n    inputs: [],\n    name: \"decrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"incrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"reset\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getCounter\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"int256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\n\nclass SmartContractControls extends React.Component {\n  state = {\n    value: 0,\n    needsUpdate: false\n  };\n\n  // gets the number stored in smart contract storage\n  getNumber = ({ ...props }) => {\n    try {\n      this.props.contract.methods\n        .getCounter()\n        .call()\n        .then(value => {\n          value = Number(value.toString());\n          this.setState({ value, needsUpdate: false });\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({ error });\n        });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    Object.keys(this.props.transactions).map(key => {\n      let tx = this.props.transactions[key];\n      if (tx.status === \"success\" && this.state.needsUpdate) {\n        console.log(\"Getting updated number.\");\n        this.getNumber();\n        return false;\n      } else {\n        return false;\n      }\n    });\n  };\n\n  resetCounter = () => {\n    this.props.contractMethodSendWrapper(\"reset\");\n  };\n\n  incrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"incrementCounter\");\n    this.setState({\n      needsUpdate: true\n    });\n  };\n\n  decrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"decrementCounter\");\n    this.setState({\n      needsUpdate: true\n    });\n  };\n\n  componentDidMount() {\n    // Init the contract after the web3 provider has been determined\n    this.props.initContract(contractAddress, contractAbi).then(() => {\n      // Can finally interact with contract\n      this.getNumber();\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <Box>\n        <Flex\n          px={0}\n          pb={4}\n          borderBottom={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n          alignItems=\"end\"\n        >\n          <Text mb={2} fontSize={3}>\n            Smart contract value\n          </Text>\n\n          <OutlineButton\n            size={\"small\"}\n            onClick={this.resetCounter}\n            disabled={!this.props.account}\n          >\n            Reset\n          </OutlineButton>\n        </Flex>\n\n        <Box py={4}>\n          <Text fontSize={6} textAlign={\"center\"}>\n            {this.state.value}\n          </Text>\n        </Box>\n\n        <Flex\n          px={0}\n          pt={4}\n          borderTop={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n        >\n          <Button size={\"medium\"} mr={4} onClick={this.incrementCounter}>\n            Increase value\n          </Button>\n\n          <Button size={\"medium\"} onClick={this.decrementCounter}>\n            Decrease value\n          </Button>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default SmartContractControls;\n","import React from \"react\";\nimport { Card, Heading, Box, Flex, Text } from \"rimble-ui\";\n\nclass TransactionsCard extends React.Component {\n  render() {\n    return (\n      <Card width={\"400px\"} mx={\"auto\"} px={4}>\n        <Heading.h2 fontSize={3} textAlign={\"center\"} px={4} mb={5}>\n          Transactions\n        </Heading.h2>\n        <Box>\n          {Object.keys(this.props.transactions).length > 0 ? (\n            <Flex>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                txHash\n              </Text>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                Status\n              </Text>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                Confirmations\n              </Text>\n            </Flex>\n          ) : null}\n\n          {Object.keys(this.props.transactions).length < 1 ? (\n            <Text textAlign={\"center\"}>No recent transactions</Text>\n          ) : (\n            Object.keys(this.props.transactions).map((keyName, keyIndex) => {\n              let txHash = \"\";\n              if (this.props.transactions[keyName].transactionHash) {\n                txHash = this.props.transactions[\n                  keyName\n                ].transactionHash.toString();\n                const txStart = txHash.substr(0, 7);\n                const txEnd = txHash.substr(txHash.length - 4);\n                txHash = txStart + \"...\" + txEnd;\n              }\n\n              return (\n                <Flex key={keyIndex}>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {txHash}\n                  </Text>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {this.props.transactions[keyName].status}\n                  </Text>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {this.props.transactions[keyName].confirmationCount}\n                  </Text>\n                </Flex>\n              );\n            })\n          )}\n        </Box>\n      </Card>\n    );\n  }\n}\n\nexport default TransactionsCard;\n","import React from \"react\";\nimport { Card } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\n\nimport SmartContractControls from \"./SmartContractControls\";\nimport TransactionsCard from \"./TransactionsCard\";\n\nclass PrimaryCard extends React.Component {\n  render() {\n    return (\n      <RimbleWeb3.Consumer>\n        {({\n          contract,\n          account,\n          transactions,\n          initContract,\n          initAccount,\n          contractMethodSendWrapper\n        }) => (\n          <div>\n            <Card width={\"400px\"} mx={\"auto\"} px={4}>\n              <SmartContractControls\n                contract={contract}\n                account={account}\n                transactions={transactions}\n                initContract={initContract}\n                contractMethodSendWrapper={contractMethodSendWrapper}\n              />\n            </Card>\n\n            <TransactionsCard transactions={transactions} />\n            <TransactionToastUtil transactions={transactions} />\n          </div>\n        )}\n      </RimbleWeb3.Consumer>\n    );\n  }\n}\n\nexport default PrimaryCard;\n","import React from \"react\";\nimport { Box, Heading, Text, Link, Flex, OutlineButton } from \"rimble-ui\";\n\nclass InstructionsCard extends React.Component {\n  render() {\n    return (\n      <Box width={\"400px\"} mx=\"auto\" mt={4}>\n        <Heading.h3>Instructions:</Heading.h3>\n        <ol>\n          <li>\n            <Text p={1}>Make sure MetaMask is working in your browser</Text>\n          </li>\n          <li>\n            <Text p={1}>Set the network to Rinkeby Test Network</Text>\n          </li>\n          <li>\n            <Text p={1}>You'll need a little bit of ETH for gas fees</Text>\n          </li>\n        </ol>\n        <Flex borderTop={1} borderColor={\"#ccc\"} py={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n          <Link\n            href=\"https://github.com/ConsenSys/rimble-app-demo\"\n            target=\"_blank\"\n          >\n            View Code GitHub\n          </Link>\n\n          { this.props.route === \"default\"\n            ? \n              <OutlineButton size=\"small\" onClick={() => this.props.showRoute('onboarding')}>Onboarding Debugger</OutlineButton>\n            :\n              <OutlineButton size=\"small\" onClick={() => this.props.showRoute('default')}>Default View</OutlineButton>\n          }\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default InstructionsCard;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  OutlineButton,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openTransactionConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Transaction Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openValidationPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Validation Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedValidationModal}\n      mr={2}\n      mb={2}\n    >\n      User Rejected Validation\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.validBrowser ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n\n          {!this.props.validBrowser ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">\n                  You current browser is not web3 capable.\n                </Text>\n              </Flex>\n\n              <Link\n                href=\"https://www.google.com/chrome/browser/\"\n                target=\"_blank\"\n              >\n                <OutlineButton size=\"small\">Download Chrome</OutlineButton>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 && this.props.validBrowser ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\"\n              >\n                <OutlineButton size=\"small\">\n                  Get MetaMask Extension\n                </OutlineButton>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <OutlineButton size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </OutlineButton>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <OutlineButton size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </OutlineButton>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <OutlineButton size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </OutlineButton>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <OutlineButton size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </OutlineButton>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <OutlineButton size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </OutlineButton>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import React, { Component } from \"react\";\nimport { ThemeProvider, Box, Text, Flex } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"./utilities/RimbleWeb3\";\n\nimport Header from \"./components/Header\";\nimport PrimaryCard from \"./components/PrimaryCard\";\nimport InstructionsCard from \"./components/InstructionsCard\";\nimport Web3Debugger from \"./components/Web3Debugger\";\n\nimport theme from \"./theme\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body, html {\n    margin: 0;\n    padding: 0;\n    background-color: #efefef;\n  }\n`;\n\nclass App extends Component {\n  state = {\n    route: \"default\"\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = {\n    accountBalanceMinimum: 0.0001,\n    requiredNetwork: 4\n  };\n\n  showRoute = route => {\n    this.setState({\n      route\n    });\n  };\n\n  render() {\n    return (\n      <ThemeProvider theme={theme} className=\"App\">\n        <RimbleWeb3 config={this.config}>\n          <RimbleWeb3.Consumer>\n            {({\n              needsPreflight,\n              validBrowser,\n              userAgent,\n              web3,\n              account,\n              accountBalance,\n              accountBalanceLow,\n              initAccount,\n              rejectAccountConnect,\n              userRejectedConnect,\n              accountValidated,\n              accountValidationPending,\n              rejectValidation,\n              userRejectedValidation,\n              validateAccount,\n              connectAndValidateAccount,\n              modals,\n              network,\n              transaction\n            }) => (\n              <Box\n                style={{\n                  paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\"\n                }}\n              >\n                <Header\n                  account={account}\n                  accountBalance={accountBalance}\n                  accountBalanceLow={accountBalanceLow}\n                  initAccount={initAccount}\n                  rejectAccountConnect={rejectAccountConnect}\n                  userRejectedConnect={userRejectedConnect}\n                  accountValidated={accountValidated}\n                  accountValidationPending={accountValidationPending}\n                  rejectValidation={rejectValidation}\n                  userRejectedValidation={userRejectedValidation}\n                  validateAccount={validateAccount}\n                  connectAndValidateAccount={connectAndValidateAccount}\n                  modals={modals}\n                  network={network}\n                />\n\n                <Flex justifyContent=\"center\" p={4}>\n                  <Text width=\"400px\">\n                    This is a starter React dApp that uses the Rimble UI\n                    component library to call methods on a smart contract\n                    deployed to the Ethereum Rinkeby testnet.\n                  </Text>\n                </Flex>\n\n                {this.state.route === \"default\" ? <PrimaryCard /> : null}\n\n                {this.state.route === \"onboarding\" ? (\n                  <Web3Debugger\n                    validBrowser={validBrowser}\n                    userAgent={userAgent}\n                    web3={web3}\n                    account={account}\n                    accountBalance={accountBalance}\n                    accountBalanceLow={accountBalanceLow}\n                    initAccount={initAccount}\n                    rejectAccountConnect={rejectAccountConnect}\n                    userRejectedConnect={userRejectedConnect}\n                    accountValidated={accountValidated}\n                    accountValidationPending={accountValidationPending}\n                    rejectValidation={rejectValidation}\n                    userRejectedValidation={userRejectedValidation}\n                    validateAccount={validateAccount}\n                    connectAndValidateAccount={connectAndValidateAccount}\n                    modals={modals}\n                    network={network}\n                    transaction={transaction}\n                  />\n                ) : null}\n                <InstructionsCard\n                  showRoute={this.showRoute}\n                  route={this.state.route}\n                />\n              </Box>\n            )}\n          </RimbleWeb3.Consumer>\n        </RimbleWeb3>\n        <GlobalStyle />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}